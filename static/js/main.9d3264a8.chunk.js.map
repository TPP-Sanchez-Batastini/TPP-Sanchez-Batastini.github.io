{"version":3,"sources":["ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","Levels/LevelsFactory.js","addons/VRbutton.js","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/Components/ItemsDrawer.jsx","Menus/LevelEditor.jsx","App.jsx","index.jsx","LogicModel/ControllerMapping/GlobalControllerHandling.js"],"names":["Observer","this","observedState","newState","Camera","renderer","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","aspect","updateProjectionMatrix","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","positionToLookAt","x","y","z","offsetVector","CarOffsetCamera","positionCamera","cameraOffsetRotated","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","update","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","loadAsync","threeDObject","result","scene","objectName","scale","loadFBX","modelVariable","loadGLTF","name","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","moveCar","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","quaternion","w","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","children","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorTwo","rotationYVectorOne","rotateX","GlobalControllerHandling","require","default","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","i","length","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","brake","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","doActionByMapping","updateCar","axes","handleAccelerate","handleBrake","turnDirection","console","log","buttons","pressed","changeShiftBox","turnOnCar","changeShift","doActionsPedals","doActionsWheel","doActionsDPad","doActionsButtons","doActionsShifter","LogitechG29ControllerSingleton","Error","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","axe","value","doActionHotKeys","doActionsAxes","doActionsTriggers","XboxControllerSingleton","Observable","observers","observer","index","indexOf","splice","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","getInstance","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","width","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","engineForce","applyEngineForce","valueBrake","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringValue","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","valueAccelerator","changeValueInRPMCurve","TurnedOnEngine","CarEngine","engineState","valueClutch","shiftBox","shutDownEngine","clutchIsPressed","rpmReturn","accelerate","handleEngineShutdown","RPMModification","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","shift","newShift","oldVelocity","getCurrentRPM","normalFactorRPM","calculateNormalFactorRPM","XValue","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactorToDecrement","normalFactor","ManualBox","isValidShift","changeRPM","getValueForNewRPM","SemiAutomaticBox","Car","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","buildAmmoPhysics","engineCanApplyForce","setEngineForce","getEngineForce","getVelocity","turnOn","wheelAxesValue","setSteeringRotation","positionAndRotation","updatePhysics","getDataToAnimate","mode","getCurrentShift","GeneralPhysics","generateShape","setMargin","getMotionState","getWorldTransform","notifyObservers","velocityVector","velVectorBT","applyForce","CylinderPhysics","btCylinderShape","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","undefined","load","material","map","materialBox","geometryPlane","box","cone","BoxPhysics","LevelFactory","level","physicsToUpdate","objectsToAnimate","createLevel0","forEach","phys","object","animate","height","pathTexture","normalMapPath","wrapS","wrapT","repeat","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","ramp","addToScene","conePhysics","attachObserver","createRectangle","createCone","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","opacity","outline","zIndex","xr","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","requestSession","optionalFeatures","setItem","end","showEnterVR","xrSessionIsGranted","click","catch","exception","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","ThreeScene","state","gotAnyEvent","alpha","setSize","setClearColor","outputEncoding","clock","createAmmo","ambientLight","sunLight","animation","bind","handleWindowResize","generateEvents","mount","appendChild","body","createButton","enabled","e","removeInstance","event","numCamera","key","removeObserver","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","handleResize","render","getCameraInstance","deltaTime","getDelta","setAnimationLoop","stepSimulation","setPositionRelativeToObject","checkEvents","setState","getSpeed","top","fontWeight","parseInt","velocity","ref","Component","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","MainMenu","navigate","useNavigate","right","className","fontSize","onClick","ConfigDrawer","openConfigs","handleDrawerClose","React","useState","open","setOpen","useTheme","useEffect","DrawerHeader","styled","theme","alignItems","spacing","mixins","toolbar","justifyContent","Grid","Drawer","sx","flexShrink","boxSizing","variant","anchor","Divider","ItemsDrawer","openItems","LevelEditor","setOpenItems","setOpenConfigs","widthGrid","heightGrid","flexDirection","IconButton","margin","App","title","exact","path","ReactDOM","createRoot","getElementById","car","valueShift"],"mappings":"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","file":"static/js/main.9d3264a8.chunk.js","sourcesContent":["//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.35;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") == \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n                let offsetVector = new Vector3(0,0,5);\r\n                offsetVector.applyQuaternion(this.observedState.rotation);\r\n                positionToLookAt.x += offsetVector.x;\r\n                positionToLookAt.y += offsetVector.y;\r\n                positionToLookAt.z += offsetVector.z;\r\n                this.camera.lookAt(positionToLookAt);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader()\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        super('res/models/source/AutoConInterior.gltf');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n    }\r\n\r\n\r\n    async addToScene(scene){\r\n        await super.addToScene(scene, \"driverCar\", POSITION, SCALE);\r\n        //this.addPhysicsView(scene)\r\n        \r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, -this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, -this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n\r\n        let rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation\r\n        );\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(-this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(-this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation + this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                console.log(\"DPAD DOWN\");\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                console.log(\"DPAD LEFT\");\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                console.log(\"DPAD RIGHT\");\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                console.log(\"DPAD UP\");\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            console.log(\"BOTON X\");\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            console.log(\"BOTON TRIANGULO\");\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            console.log(\"BOTON CIRCULO\");\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            console.log(\"BOTON CUADRADO\");\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.carLogic.changeShiftBox(\"manual\");\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            console.log(\"BOTON +\");\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            console.log(\"BOTON -\");\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            console.log(\"BOTON L2\");\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            console.log(\"BOTON L3\");\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n            console.log(\"BOTON R3\");\r\n        this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            console.log(\"BOTON ENTER\");\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            console.log(\"BOTON SHARE\");\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            console.log(\"BOTON OPTIONS\");\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            console.log(\"BOTON BUMPER LEFT\");\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            console.log(\"BOTON BUMPER RIGHT\");\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            console.log(\"RUEDA IZQ\");\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            console.log(\"RUEDA DER\");\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n           // console.log(\"Adelante/Abajo Joy Izq: \" + this.gamepad.axes[this.yLeftAxe]);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n            //console.log(\"Izq/Der Joy Izq: \" + this.gamepad.axes[this.xLeftAxe]);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n           // console.log(\"Adelante/Abajo Joy Der: \" + this.gamepad.axes[this.yRightAxe]);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n           // console.log(\"Izq/Der Joy Der: \" + this.gamepad.axes[this.xRightAxe]);\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n            //console.log(this.gamepad.buttons[this.buttonR2]);\r\n            //this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n            console.log(\"accelerator: \" + this.gamepad.buttons[this.buttonR2].value);\r\n            //this.auto.acelerar();\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n            //this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n            //console.log(\"Break: \" + this.gamepad.buttons[this.buttonL2].value);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            //console.log(\"Aumento de marcha (R1)\");\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                console.log(\"Marcha Actual: \" + this.actualShift)\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            //console.log(\"reduccion de marcha (L1)\");\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                console.log(\"Marcha Actual: \" + this.actualShift)\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            console.log(\"shareButton\");\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            console.log(\"padUp\");\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            console.log(\"padDown\");\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            console.log(\"padLeft\");\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            console.log(\"padRight\");\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            console.log(\"buttonA\");\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            console.log(\"buttonB\");\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            console.log(\"buttonY\");\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            console.log(\"buttonX\");\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            console.log(\"buttonR3\");\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            console.log(\"buttonL3\");\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            console.log(\"padUp\");\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            console.log(\"padDown\");\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            console.log(\"padLeft\");\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            console.log(\"padRight\");\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            console.log(\"Menu\");\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        this.engineState = new TurnedOnEngine();\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4 } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst POSITION = [0,0,0];\r\nconst FACTOR_BRAKE_TO_FORCE = 300;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld){\r\n        super();\r\n        this.carEngine = new CarEngine();\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(POSITION[0], POSITION[1], POSITION[2]);\r\n        this.rotationQuaternion = new Vector4(0,0,0,1);\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        this.carPhysics.buildAmmoPhysics();\r\n        \r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM()\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.setMargin(0.05);\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n           // console.log(this.observedState);\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n    }\r\n}","import * as THREE from 'three';\r\nimport BoxPhysics from '../LogicModel/Physics/PhysicsTypes/BoxPhysics';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\n// import ConePhysics from '../LogicModel/Physics/PhysicsTypes/ConePhysics'\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\n\r\nexport default class LevelFactory {\r\n\r\n\r\n    constructor(level, scene,physicsWorld){\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld\r\n        this.physicsToUpdate = [];\r\n        this.objectsToAnimate = [];\r\n        if(level === 0){\r\n            this.createLevel0()\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        })\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n    }\r\n\r\n\r\n    async createRectangle(position,length, width, height ,rotation, pathTexture, Ammo, normalMapPath = null){\r\n        \r\n        const texture = new THREE.TextureLoader().load( pathTexture );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( length, height );\r\n        const floorMaterial = new THREE.MeshStandardMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        if( normalMapPath ){\r\n            let normalTexture = new THREE.TextureLoader().load(\r\n                normalMapPath\r\n            );\r\n            normalTexture.repeat.set( length, height );\r\n            normalTexture.wrapS = THREE.RepeatWrapping;\r\n            normalTexture.wrapT = THREE.RepeatWrapping;\r\n            floorMaterial.normalMap = normalTexture;\r\n            floorMaterial.normalScale.set(10, 10);\r\n        }\r\n        const rampa = new THREE.BoxGeometry( length, width, height);\r\n        rampa.rotateX(rotation);\r\n        const quaternionRamp = new THREE.Quaternion();\r\n        quaternionRamp.setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), rotation);\r\n\r\n        let rampPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            quaternionRamp ,  //Quaternion2\r\n            new Ammo.btVector3(0,0,0), //Inertia\r\n            0, //Mass\r\n            new THREE.Vector3(length, width, height), //Shape\r\n            this.physicsWorld, //Physics World\r\n            1000 // friction\r\n        ); \r\n        \r\n        await rampPhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(rampPhysics);\r\n        let ramp = new THREE.Mesh( rampa, floorMaterial );\r\n        ramp.position.set(position[0],position[1],position[2]);\r\n        this.scene.add(ramp);\r\n    }\r\n\r\n\r\n    async createCone(position , Ammo){\r\n        let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        cone.addToScene(this.scene, \"trafficCone\", position, [ 0.5, 0.5, 0.5]);\r\n        let conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(cone.RADIUS_BOTTOM, cone.HEIGHT/2, cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(conePhysics);\r\n        conePhysics.attachObserver(cone);\r\n        this.objectsToAnimate.push(cone);\r\n    }\r\n\r\n\r\n    async createLevel0(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.createRectangle( [ 10, 0, 10 ], 10, 2, 10, -Math.PI/8, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ -10, 0, 10 ], 10, 2, 10, -Math.PI/4, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ 0, 0, 0 ], 100, 0.1, 100, 0, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createCone( [ 0, 0.5, 10 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 30 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 20 ], Ammo );\r\n    }\r\n\r\n}\r\n\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport Camera from '../Camera/Camera';\r\nimport CarOffsetCamera from '../Camera/CarOffsetCamera';\r\nimport OrbitalCamera from '../Camera/OribtalCamera';\r\nimport CarModel from '../3DModels/CarModel';\r\nimport LogitechG29ControllerSingleton from '../LogicModel/ControllerMapping/LogitechG29Controller';\r\nimport XboxControllerSingleton from '../LogicModel/ControllerMapping/XboxController';\r\nimport Car from '../LogicModel/CarLogic/Car';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\nimport { Vector3 } from 'three';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\nimport LevelFactory from '../Levels/LevelsFactory';\r\nimport  {VRButton}  from '../addons/VRbutton';\r\n\r\nexport default class ThreeScene extends Component{\r\n    \r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            \"currentRPM\": 0,\r\n            \"velocity\": 0,\r\n            \"currentShift\": 0,\r\n        };\r\n        this.physicsToUpdate = [];\r\n        localStorage.setItem(\"VR\", false);\r\n        this.gotAnyEvent = false;\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        //Generate elements needed to render the scene\r\n        this.objectsToAnimate = [];\r\n        this.scene = new THREE.Scene();\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true });\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\r\n        this.renderer.setClearColor( 0x87cefa, 1 );\r\n        this.renderer.outputEncoding = THREE.sRGBEncoding;\r\n        this.camera = new Camera(this.renderer);\r\n        \r\n        this.clock = new THREE.Clock();\r\n\r\n        //Ammo.js\r\n        await this.createAmmo();\r\n\r\n        //Add elements to the scene\r\n        this.ambientLight = new THREE.AmbientLight(0xffffff, 1.0);\r\n        this.scene.add(this.ambientLight);\r\n        this.sunLight = new THREE.DirectionalLight( 0xffffff, 1.0 );\r\n        this.sunLight.position.set( 0, 100, 0 );\r\n        this.scene.add( this.sunLight );\r\n        \r\n        let Ammo = await AmmoInstance.getInstance() ;\r\n\r\n        this.level = new LevelFactory(0,this.scene, this.physicsWorld);\r\n        this.physicsToUpdate.push(this.level);\r\n        this.objectsToAnimate.push(this.level);\r\n\r\n        this.cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        this.cone.addToScene(this.scene, \"trafficCone\", [10,0,0], [1,1,1]);\r\n        this.conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(10,0,0), \r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(this.cone.RADIUS_BOTTOM, this.cone.HEIGHT/2, this.cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await this.conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(this.conePhysics);\r\n        this.conePhysics.attachObserver(this.cone);\r\n        this.objectsToAnimate.push(this.cone);\r\n\r\n        //Add driver's car to scene\r\n        this.carLogic = new Car(this.physicsWorld);\r\n        let carModel = new CarModel();\r\n        this.carLogic.attachObserver(carModel);\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n        this.carLogic.notifyObservers();\r\n        \r\n        //Bind this to methods of the class\r\n        this.animation = this.animation.bind(this);\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n        this.generateEvents = this.generateEvents.bind(this);\r\n        \r\n        //Handle resize and gamepad connection on window.\r\n        this.generateEvents();\r\n\r\n        //Append canvas to DOM in HTML and start animating\r\n        this.mount.appendChild(this.renderer.domElement);\r\n        this.animation();\r\n\r\n        document.body.appendChild( VRButton.createButton( this.renderer ) );\r\n        this.renderer.xr.enabled = true;\r\n        \r\n    }\r\n\r\n\r\n    generateEvents(){\r\n        window.addEventListener(\"resize\", this.handleWindowResize);\r\n        window.addEventListener(\"gamepaddisconnected\", function(e){\r\n            LogitechG29ControllerSingleton.removeInstance();  \r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            var numCamera = event.key;\r\n            this.carLogic.removeObserver(this.camera);\r\n            switch(numCamera){\r\n                case \"1\":\r\n                    this.camera = new Camera(this.renderer);\r\n                    break;\r\n                case \"2\":\r\n                    this.camera = new OrbitalCamera(this.renderer);\r\n                    break;\r\n                case \"3\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"4\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"5\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.carLogic.attachObserver(this.camera);\r\n            this.carLogic.notifyObservers();\r\n\r\n          }, false);\r\n    }\r\n\r\n\r\n    async createAmmo(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.tempTransform = new Ammo.btTransform();\r\n        let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n        let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n        let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n        let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n        this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, overlappingPairCache, solver, collisionConfiguratation);\r\n        this.physicsWorld.setGravity(new Ammo.btVector3(0,-9.8,0));\r\n    }\r\n\r\n\r\n    handleWindowResize(){\r\n        this.camera.handleResize();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance() );\r\n    }\r\n\r\n\r\n    animation(){\r\n        let deltaTime = this.clock.getDelta();\r\n        this.renderer.setAnimationLoop(this.animation);\r\n        this.physicsWorld.stepSimulation(deltaTime, 10);\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        });\r\n        this.camera.setPositionRelativeToObject();\r\n        XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n        this.setState({\"velocity\": this.carLogic.getSpeed(), \"currentRPM\": this.carLogic.getCurrentRPM(), \"currentShift\": this.carLogic.getCurrentShift()});\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance());\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div style={{position:\"absolute\", left:\"10px\", top:\"10px\", color:\"red\"}} id=\"Acelerador\">\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Velocidad: {parseInt(this.state.velocity)} km/h\r\n                    </p>\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        RPM: {parseInt(this.state.currentRPM)}\r\n                    </p>\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Cambio Actual: {parseInt(this.state.currentShift)}\r\n                    </p>\r\n                </div>\r\n                <div ref={mount => {this.mount = mount;}}></div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <div id=\"button-box\" style={{position:\"absolute\", top:\"5%\", right:\"5%\"}}>\r\n          <div className={\"MainMenuTitle\"}>\r\n            <h1 style={{textAlign:\"center\", fontSize:\"7rem\"}}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/scene\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/configs\")}\r\n            >\r\n              Configuración\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Grid } from '@mui/material'\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { Button, Grid } from '@mui/material'\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport { Grid, Container, Typography, Button, IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst MAX_WIDTH = 4000;\r\nconst MAX_HEIGHT = 4000;\r\n\r\nconst MAX_WIDTH_INPUT = 3000;\r\nconst MAX_HEIGHT_INPUT = 3000;\r\n\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = React.useState(false);\r\n  const [openConfigs, setOpenConfigs] = React.useState(false);\r\n  const [widthGrid, setWidthGrid] = React.useState(200);\r\n  const [heightGrid, setHeightGrid] = React.useState(200);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n          <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n            <AddIcon/>\r\n          </IconButton>\r\n          <h1>Driving Simulator - Level Editor</h1>\r\n          <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n            <SettingsIcon/>\r\n          </IconButton>\r\n        </div>\r\n        <div>\r\n            <div \r\n              className=\"level-grid\"\r\n              style={{\r\n                backgroundSize: `${parseInt(25 - widthGrid*100/(MAX_WIDTH*4))}% ${parseInt(25 - heightGrid*100/(MAX_HEIGHT*4))}%`}}\r\n            >\r\n\r\n            </div>\r\n        </div>\r\n        \r\n      </div>\r\n      <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n      <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n    </>\r\n  );\r\n}\r\n","import ThreeScene from './Scene/ThreeScene';\r\nimport { useEffect } from 'react';\r\nimport { MainMenu } from './Menus/MainMenu';\r\nimport { LevelEditor } from './Menus/LevelEditor';\r\nimport { BrowserRouter as Router, Routes as Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    document.title = 'Driving Simulator';\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/scene\" element = {<ThreeScene/>} />\r\n        <Route exact path=\"/\" element = {<MainMenu/>} />\r\n        <Route exact path=\"/level-editor\" element = {<LevelEditor/>} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n","export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}"],"sourceRoot":""}