{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/Models.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics.js","3DModels/StraightStreet.js","3DModels/Intersection.js","3DModels/Curve.js","3DModels/TStreet.js","Levels/LevelsFactory.js","addons/VRbutton.js","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/LevelEditorContext/ItemsContext.jsx","Menus/Components/ItemsDrawer.jsx","Menus/Components/InputsGrid.jsx","Menus/Resources/Street/AbstractStreet.js","Menus/Resources/Street/Curve.js","Menus/Resources/Street/StraightStreet.js","Menus/Resources/Street/TStreet.js","Menus/Resources/Street/StraightStreetLinker.js","Menus/Resources/StreetFactory.js","Menus/Resources/Street/Intersection.js","Menus/Resources/LevelEditor.js","Menus/Components/LevelGrid.jsx","Menus/LevelEditor.jsx","Menus/Constants/Constants.js","Menus/Sessions/SessionContext.jsx","Menus/Resources/Hasher.js","Menus/Components/LoginForm.jsx","Menus/Sessions/SessionHooks.jsx","Menus/Components/SignUpForm.jsx","Menus/Sessions/SessionProvider.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","constructor","car","this","handleAccelerate","valueClutch","valueAccelerator","accelerate","handleBrake","valueBrake","brake","changeShift","valueShift","turnDirection","wheelAxesValue","turnOnCar","updateCar","update","changeShiftBox","mode","Observer","observedState","newState","Camera","renderer","super","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","handleResize","aspect","updateProjectionMatrix","setPositionRelativeToObject","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","rotationQuat","x","y","z","w","normalize","quaternion","getCameraInstance","addContainerToScene","scene","CarOffsetCamera","positionCamera","cameraOffsetRotated","positionToLookAt","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","async","loadAsync","threeDObject","objectName","scale","modelVariable","loadFBX","e","loadGLTF","name","getModel","animate","ModelsSingleton","carModel","building_1","building_2","building_3","building_4","changeMaterialsToBasic","children","i","length","child","isGroup","isMesh","newMaterial","prototype","call","material","receiveShadow","castShadow","pathToTextureRcvd","result","Models","static","loadModels","Error","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","generateRetrovisor","plane","retrovisor","Reflector","textureWidth","textureHeight","clipBias","multisample","rotateX","rotateY","generateLeftMirror","leftMirrorGeometry","leftMirror","container","Object3D","generateRightMirror","rightMirrorGeometry","rightMirror","generateMirrors","models","getInstance","moveCar","addPhysicsView","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","watchPhysicsColliders","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorOne","default","require","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","checkEvents","doActionByMapping","doActionsPedals","axes","doActionsWheel","doActionsDPad","doActionsButtons","buttons","pressed","doActionsShifter","LogitechG29ControllerSingleton","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","doActionsAxes","axe","doActionHotKeys","value","doActionsTriggers","XboxControllerSingleton","Observable","observers","attachObserver","observer","removeObserver","index","indexOf","splice","notifyObservers","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","width","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","updatePhysics","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","getRigidBody","setEngineForce","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringRotation","setSteeringValue","getVelocity","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","changeValueInRPMCurve","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","TurnedOnEngine","CarEngine","engineState","turnOn","clutchIsPressed","handleEngineShutdown","shiftBox","shutDownEngine","isInConditionToAccelerate","engineCanApplyForce","rpmReturn","changeRPM","RPMModification","log","getCurrentRPM","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","isValidShift","shift","calculateNormalFactorRPM","newShift","oldVelocity","getValueForNewRPM","normalFactorRPM","XValue","getEngineForce","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactor","getCurrentShift","ManualBox","SemiAutomaticBox","Car","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","buildAmmoPhysics","turnOnRightLight","turnOnLeftLight","positionAndRotation","getDataToAnimate","getLastRotation","getSpeed","GeneralPhysics","generateShape","getMotionState","getWorldTransform","setLinearVelocity","velocityVector","velVectorBT","applyForce","BoxPhysics","setMargin","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","undefined","load","map","materialBox","geometryPlane","box","cone","CylinderPhysics","btCylinderShape","CustomGeometryPhysics","triangle_mesh","btTriangleMesh","vectA","vectB","vectC","verticesPos","getAttribute","array","triangles","setX","setY","setZ","addTriangle","destroy","btBvhTriangleMeshShape","StraightStreet","pathToNormalMap","SIZE","SIDEWALK_HEIGHT","createSidewalkMesh","wrapS","wrapT","repeat","materialSidewalk","geometrySidewalk","createStreetMesh","mesh","clone","iter","model3D","loadBuildingBlock","parseInt","random","LONG","updateMatrix","updateMatrixWorld","matrixAutoUpdate","secondModel3D","rotationY","baseStreet","leftSidewalk","rightSidewalk","createBuildings","Intersection","SQUARE_SIZE","getLerpPoints","vec1","vec2","quantPoints","points","createSidewalkCurve","initialPoint","lerpPoints","pointsCurve","getPoints","secondLerpPoints","thirdLerpPoints","fourthLerpPoints","getGeometrySidewalk","geom","columnas","aux_vertices","indexes","uv1","uv2","uv3","accum_x","accum_z","uv","vertex","filas","j","vertexArr","Float32Array","uvArr","setIndex","setAttribute","computeVertexNormals","sidewalk","Curve","TOP_CENTER","createLongSidewalkCurve","fifthLerpPoints","sixthLerpPoints","getGeometryLongSidewalk","createLongSidewalkMesh","longSidewalk","TStreet","createStraightSidewalkMesh","createBuilding","LevelFactory","physicsToUpdate","objectsToAnimate","STREET_TYPES","createStreet","bind","createCurve","createTStreet","createIntersection","forEach","phys","object","height","pathTexture","normalMapPath","arguments","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","ramp","addToScene","conePhysics","street","streetPhysics","movingLeft","leftSidewalkPhysics","movingRight","rightSidewalkPhysics","tStreet","identity","movingOne","cornerPhysicsOne","movingTwo","cornerPhysicsTwo","intersection","cornerPhysicsThree","cornerPhysicsFour","curve","movingCorner","cornerPhysics","longSidePhysics","segmentsQuantity","buildStreetPhysics","buildIntersectionPhysics","buildCurvePhysics","console","buildTStreetPhysics","createRectangle","createCone","long","type","segments","json","streets","instantiateStreet","position_x","position_y","long_x","long_y","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","opacity","outline","zIndex","xr","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","sessionInit","optionalFeatures","requestSession","setItem","end","showEnterVR","xrSessionIsGranted","click","catch","exception","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","ThreeScene","Component","state","gotAnyEvent","stats","Stats","alpha","powerPreference","antialias","setSize","shadowMap","enabled","clock","jsonLevel","props","generateGeneralElements","animation","handleWindowResize","generateEvents","addPlayerCar","generateLevel","addVR","createAmmo","addGeneralLights","setAnimationLoop","setPixelRatio","devicePixelRatio","setFramebufferScaleFactor","mount","appendChild","body","createButton","level","createLevelCustom","geomField","matField","meshField","setClearColor","showPanel","dom","removeInstance","event","numCamera","key","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","render","begin","deltaTime","getDelta","stepSimulation","setState","_jsxs","_jsx","top","right","fontWeight","ref","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","MainMenu","navigate","useNavigate","_Fragment","className","fontSize","onClick","ConfigDrawer","_ref","openConfigs","handleDrawerClose","open","setOpen","React","useState","useEffect","DrawerHeader","styled","_ref2","theme","alignItems","spacing","mixins","toolbar","justifyContent","Grid","Drawer","sx","flexShrink","boxSizing","variant","anchor","ChevronRightIcon","paddingRight","Divider","ItemsContext","createContext","allUnselected","ItemsDrawer","openItems","setLastSelectedItem","lastSelectedItem","useContext","itemSelected","setItemSelected","paddingLeft","ChevronLeftIcon","flexDirection","Object","entries","_ref3","nameItem","isSelected","alt","src","item","dictSelection","selectedItem","positionX","positionY","handleSelection","InputsGrid","setGridDimensions","gridDimensions","InputWidth","setInputWidth","InputHeight","setInputHeight","direction","marginLeft","xs","step","onChange","target","replaceAll","Button","onSubmit","STANDARD_BOX_LONG","AbstractStreet","ninePerNineGrid","rowIndex","columnIndex","rightFilled","filled","topFilled","botFilled","leftFilled","determineStreetRotation","cell","rowCount","columnCount","sumValueForCell","isStraight","getAsJSON","getPositionAsRowAndColumn","getPositionX","getPositionY","getLongX","getLongY","POSSIBLE_ROTATIONS","StraightStreetLinker","arrayOfStreets","sections","segregateSections","sectionsAsJSON","linkSections","rows","cols","sectionsArray","streetRow","streetCol","isHorizontal","generateArraySubsections","finalArray","sectionsJSON","jsonForStreet","reduce","acum","elem","getSectionsAsJSON","TYPES_OF_STREETS","calculateNeighboursFilled","bot","dict","StreetFactory","levelGrid","isInfiniteLevel","getNinePerNineGrid","getNinePerNineGridInfinite","getNinePerNineGridFinite","constructStreets","straightStreetsArray","curvedStreetsArray","streetObject","defineTypeOfStreet","conjunctedStraightStreets","linkStraightStreets","indexRow","indexColumn","matrix","rowArray","realRow","realColumn","celda_vacia","row","column","typeResult","typeDefined","isValidNinePerNineGrid","getCountSidesPainted","aux","validateGrid","isInfinite","validateGridInfinite","valid","wrongCells","validateGridNotInfinite","COLORS","LevelGrid","setLevelGrid","setClick","rightClick","setRightClick","finalGrid","currentRow","newCell","preventDefault","arrayContains","insiderArray","equals","exc","marginTop","marginRight","onMouseDown","idx_row","idx_col","backgroundColor","onMouseMove","onEnterHoverWithClickCell","col","levelGridCopy","div_color","onMouseUp","onClickCell","btn_click","onSubmitLevel","vec_aux","exportObj","exportName","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","remove","downloadObjectAsJson","generateJSONFromGrid","MemoryIcon","LevelEditor","setOpenItems","setOpenConfigs","itemsInGrid","setItemsInGrid","currentItems","Provider","IconButton","margin","AddIcon","SettingsIcon","idx","API_URL","VALID_REGEX_EMAIL","SessionContext","createHash","hash","string","digest","LoginForm","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","setSessionWithResponse","SessionHooks","loginResponse","user","jwt","getUser","getJWT","submitGoogleLogin","responseAPI","APIResponse","fetch","method","headers","token","status","endMSG","detail","msg","error_msg","statusText","postLoginGoogle","toString","validateFields","errors","match","postLogin","alignContent","maxWidth","Alert","severity","onClose","listerror","TextField","label","InputProps","endAdornment","InputAdornment","handleClickShowPassword","Visibility","VisibilityOff","Link","to","GoogleLogin","onSuccess","credentialResponse","OAuthToken","credential","onError","SignUpForm","passwordConfirmation","setPasswordConfirmation","nameToShow","setNameToShow","errorArray","fetchUrl","postSignUp","SessionProvider","childElement","GoogleOAuthProvider","clientId","App","setJson","title","response","data","Router","Switch","Route","exact","path","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.8ea3a5e1.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.4;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 85, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") === \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                const rotationQuat = new THREE.Quaternion(this.observedState.rotation.x, this.observedState.rotation.y, this.observedState.rotation.z, this.observedState.rotation.w).normalize();\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), -5*Math.PI/180); //SUMAR ROTACION EXTRA SI USAMOS EL JOYSTICK DERECHO\r\n                this.group.quaternion.copy(rotationQuat);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    \r\n    addContainerToScene(scene){\r\n        scene.add(this.group);\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 100 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from 'three';\r\n\r\nclass ModelsSingleton{\r\n\r\n    constructor(){\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.carModel = null;\r\n        this.building_1 = null;\r\n        this.building_2 = null;\r\n        this.building_3 = null;\r\n        this.building_4 = null;\r\n    }\r\n\r\n\r\n    changeMaterialsToBasic(children){\r\n        for (let i=0; i < children.length; i++) {\r\n            const child = children[i];\r\n            \r\n            if(child.isGroup){\r\n                this.changeMaterialsToBasic(child.children);\r\n            }else if(child.isMesh){\r\n                const newMaterial = new THREE.MeshPhongMaterial();\r\n                THREE.MeshBasicMaterial.prototype.copy.call( newMaterial, child.material );\r\n                child.material = newMaterial;\r\n                child.receiveShadow = true;\r\n                child.castShadow = true;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async loadGLTF(pathToTextureRcvd){\r\n        let pathToTexture = pathToTextureRcvd;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        this.changeMaterialsToBasic(result.scene.children);\r\n        return result.scene;\r\n    }\r\n\r\n    async loadModels(){\r\n        this.carModel = this.loadGLTF('res/models/source/Mercedes.glb');\r\n        this.building_1 = this.loadGLTF('res/models/source/buildings/Building_1.glb');\r\n        this.building_2 = this.loadGLTF('res/models/source/buildings/Building_2.glb');\r\n        this.building_3 = this.loadGLTF('res/models/source/buildings/Building_3.glb');\r\n        this.building_4 = this.loadGLTF('res/models/source/buildings/Building_4.glb');\r\n        return \"OK\";\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default class Models{\r\n\r\n    static ModelsSingleton\r\n\r\n    static async getInstance(){\r\n        if (!Models.ModelsSingleton){\r\n            Models.ModelsSingleton = new ModelsSingleton();\r\n            let res = await Models.ModelsSingleton.loadModels();\r\n            if (res === \"OK\"){\r\n                return Models.ModelsSingleton;\r\n            }else{\r\n                throw new Error(\"Error al cargar los modelos.\");\r\n            }\r\n        }else{\r\n            return Models.ModelsSingleton;\r\n        }\r\n        \r\n    }\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector';\r\nimport { Object3D } from 'three';\r\nimport Models from './Models';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\n//const STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = 0.13\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        //super('res/models/source/AutoConInterior.glb');\r\n        super('res/models/source/Mercedes.glb');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n    }\r\n\r\n\r\n    generateRetrovisor(){\r\n        //const path = new THREE.Shape();\r\n        //path.absellipse(0,0,0.15,0.075,0, Math.PI*2, false,0);\r\n        //const ellipseGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const plane = new THREE.PlaneGeometry(0.145, 0.085);\r\n        const retrovisor = new Reflector(\r\n            plane,\r\n            //ellipseGeometry,\r\n            {\r\n                textureWidth: window.innerWidth,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: window.innerHeight,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0.35,\r\n                multisample: 4\r\n            }\r\n        );\r\n        retrovisor.rotateX( Math.PI-0.04 );\r\n        retrovisor.rotateY( 0.35 );\r\n        retrovisor.position.set(0.075,0.625,0.31);\r\n        this.threeDModel.add(retrovisor);\r\n    }\r\n\r\n\r\n    generateLeftMirror(){\r\n        const leftMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const leftMirror = new Reflector(\r\n            leftMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,//512\r\n                textureHeight: window.innerHeight,//512\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(leftMirror);\r\n        container.position.set(0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.13);\r\n        leftMirror.rotateY(-18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateRightMirror(){\r\n        const rightMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const rightMirror = new Reflector(\r\n            rightMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,\r\n                textureHeight: window.innerHeight,\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(rightMirror);\r\n        container.position.set(-0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.1);\r\n        rightMirror.rotateY(18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateMirrors(){\r\n        this.generateRetrovisor();\r\n        this.generateLeftMirror();\r\n        this.generateRightMirror();\r\n    }\r\n\r\n    async addToScene(scene){\r\n        const models = await Models.getInstance();\r\n        this.threeDModel = await models.carModel;\r\n        this.threeDModel.name = \"driverCar\";\r\n        this.threeDModel.position.x = POSITION[0];\r\n        this.threeDModel.position.y = POSITION[1];\r\n        this.threeDModel.position.z = POSITION[2];\r\n        this.threeDModel.scale.x = SCALE[0];\r\n        this.threeDModel.scale.y = SCALE[1];\r\n        this.threeDModel.scale.z = SCALE[2];\r\n        scene.add(this.threeDModel);\r\n        this.generateMirrors();\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        // let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        // let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        // let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        // let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'W222WheelFtR');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'W222WheelFtL');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'W222WheelBkR');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'W222WheelBkL');\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n        this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox') || gamepads[i].id.startsWith('xinput')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        this.engineState = new TurnedOnEngine();\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4 } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst POSITION = [15,1,15];\r\nconst FACTOR_BRAKE_TO_FORCE = 300;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld){\r\n        super();\r\n        this.carEngine = new CarEngine();\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(POSITION[0], POSITION[1], POSITION[2]);\r\n        this.rotationQuaternion = new Vector4(0,0,0,1);\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        this.carPhysics.buildAmmoPhysics();\r\n        \r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM()\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.castShadow = true;\r\n            cone.receiveShadow = true;\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class CustomGeometryPhysics extends GeneralPhysics{\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        // eslint-disable-next-line\r\n        let _triangle, triangle_mesh = new Ammo.btTriangleMesh();\r\n        //declare triangles position vectors\r\n        let vectA = new Ammo.btVector3(0, 0, 0);\r\n        let vectB = new Ammo.btVector3(0, 0, 0);\r\n        let vectC = new Ammo.btVector3(0, 0, 0);\r\n        //retrieve vertices positions from object\r\n        let verticesPos = this.shape.getAttribute('position').array;\r\n        let triangles = [];\r\n        for (let i = 0; i < verticesPos.length; i += 3) {\r\n            triangles.push({\r\n                x: verticesPos[i],\r\n                y: verticesPos[i + 1],\r\n                z: verticesPos[i + 2]\r\n            });\r\n        }\r\n        //use triangles data to draw ammo shape\r\n        for (let i = 0; i < triangles.length - 3; i += 3) {\r\n\r\n            vectA.setX(triangles[i].x);\r\n            vectA.setY(triangles[i].y);\r\n            vectA.setZ(triangles[i].z);\r\n\r\n            vectB.setX(triangles[i + 1].x);\r\n            vectB.setY(triangles[i + 1].y);\r\n            vectB.setZ(triangles[i + 1].z);\r\n\r\n            vectC.setX(triangles[i + 2].x);\r\n            vectC.setY(triangles[i + 2].y);\r\n            vectC.setZ(triangles[i + 2].z);\r\n\r\n            triangle_mesh.addTriangle(vectA, vectB, vectC, true);\r\n        }\r\n        Ammo.destroy(vectA);\r\n        Ammo.destroy(vectB);\r\n        Ammo.destroy(vectC);\r\n\r\n        var shape = new Ammo.btBvhTriangleMeshShape(triangle_mesh, true);\r\n        shape.setMargin(0);\r\n        return shape;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class StraightStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n    createSidewalkMesh(scale){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10*scale );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(scale){\r\n        const geometry = new THREE.BoxGeometry( 10*this.SIZE/24, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        \r\n        texture.repeat.set( 1, 2*scale );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsLeft_\"+iter;\r\n        secondModel3D.position.x = -10*this.SIZE/24;\r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh(scale);\r\n            const leftSidewalk = this.createSidewalkMesh(scale);\r\n            const rightSidewalk = this.createSidewalkMesh(scale);\r\n            baseStreet.position.set(0,0,0);\r\n            leftSidewalk.position.set(-8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            rightSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet).add(leftSidewalk).add(rightSidewalk)\r\n            for (let i=0; i<4*scale; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.scale.set(1.0, 1.0, scale);\r\n            leftSidewalk.scale.set(1.0, 1.0, scale);\r\n            rightSidewalk.scale.set(1.0, 1.0, scale);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            rightSidewalk.updateMatrix();\r\n            rightSidewalk.updateMatrixWorld();\r\n            rightSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            this.LONG = this.SIZE*scale;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\n\r\nexport default class Intersection extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<4; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else if(i===2){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }else if(i===3){\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                }else{\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class Curve extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24+0.12;\r\n        this.TOP_CENTER = [this.SIZE/2-this.SQUARE_SIZE, this.SIDEWALK_HEIGHT, -this.SIZE/2+this.SQUARE_SIZE];\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    createLongSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SIZE/2,0,-this.SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(\r\n            initialPoint, \r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            5\r\n            );\r\n        const secondLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const thirdLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const fourthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2 - this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE, this.SIZE/2-this.SQUARE_SIZE), \r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector2(-this.SIZE/2+this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n        );\r\n        let pointsCurve = curve.getPoints(30);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const fifthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2+this.SQUARE_SIZE, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const sixthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2),\r\n            5\r\n        );\r\n        return [\r\n            ...lerpPoints, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints,\r\n            ...pointsCurve,\r\n            ...fifthLerpPoints,\r\n            ...sixthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    getGeometryLongSidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createLongSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(this.TOP_CENTER[0], this.TOP_CENTER[1], this.TOP_CENTER[2]);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SIZE/2)/this.SIZE, (points[i].z+this.SIZE/2)/this.SIZE);\r\n            uv3.push((this.TOP_CENTER[0]+this.SIZE/2)/this.SIZE, (this.TOP_CENTER[2]+this.SIZE/2)/this.SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    createLongSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 10, 10 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometryLongSidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsCurve_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsCurveOtherSide_\"+iter;\r\n        secondModel3D.position.x = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;      \r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = 10*this.SIZE/24;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            const sidewalk = this.createSidewalkMesh();\r\n            sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n            sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n            sidewalk.updateMatrix();\r\n            sidewalk.updateMatrixWorld();\r\n            sidewalk.matrixAutoUpdate = false;\r\n            const longSidewalk = this.createLongSidewalkMesh();\r\n            longSidewalk.position.set(0,0,0);\r\n            longSidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n            longSidewalk.updateMatrix();\r\n            longSidewalk.updateMatrixWorld();\r\n            longSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(sidewalk).add(longSidewalk);\r\n            for (let i=0; i<3; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class TStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuilding(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D);\r\n    }\r\n\r\n\r\n    createStraightSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10 );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<2; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else{\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            for (let i=0; i<4; i++){\r\n                this.createBuilding(position, i);\r\n            }\r\n            const leftSidewalk = this.createStraightSidewalkMesh();\r\n            leftSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(leftSidewalk);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from \"three\";\r\nimport BoxPhysics from \"../LogicModel/Physics/PhysicsTypes/BoxPhysics\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport TrafficCone from \"../3DModels/TrafficCone\";\r\nimport CylinderPhysics from \"../LogicModel/Physics/PhysicsTypes/CylinderPhysics\";\r\nimport CustomGeometryPhysics from \"../LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics\";\r\nimport StraightStreet from \"../3DModels/StraightStreet\";\r\nimport Intersection from \"../3DModels/Intersection\";\r\nimport Curve from \"../3DModels/Curve\";\r\nimport TStreet from \"../3DModels/TStreet\";\r\n\r\nexport default class LevelFactory {\r\n  constructor(scene, physicsWorld) {\r\n    this.scene = scene;\r\n    this.physicsWorld = physicsWorld;\r\n    this.physicsToUpdate = [];\r\n    this.objectsToAnimate = [];\r\n    this.STREET_TYPES = {\r\n      \"STRAIGHT\": this.createStreet.bind(this),\r\n      \"CURVE\": this.createCurve.bind(this),\r\n      \"T_STREET\": this.createTStreet.bind(this),\r\n      \"INTERSECTION\": this.createIntersection.bind(this)\r\n    };\r\n  }\r\n\r\n  updatePhysics() {\r\n    this.physicsToUpdate.forEach(function (phys) {\r\n      phys.updatePhysics();\r\n    });\r\n  }\r\n\r\n  animate() {\r\n    this.objectsToAnimate.forEach(function (object) {\r\n      object.animate();\r\n    });\r\n  }\r\n\r\n  async createRectangle(\r\n    position,\r\n    length,\r\n    width,\r\n    height,\r\n    rotation,\r\n    pathTexture,\r\n    Ammo,\r\n    normalMapPath = null\r\n  ) {\r\n    const texture = new THREE.TextureLoader().load(pathTexture);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(length, height);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n    });\r\n    if (normalMapPath) {\r\n      let normalTexture = new THREE.TextureLoader().load(normalMapPath);\r\n      normalTexture.repeat.set(length, height);\r\n      normalTexture.wrapS = THREE.RepeatWrapping;\r\n      normalTexture.wrapT = THREE.RepeatWrapping;\r\n      floorMaterial.normalMap = normalTexture;\r\n      floorMaterial.normalScale.set(10, 10);\r\n    }\r\n    const rampa = new THREE.BoxGeometry(length, width, height);\r\n    rampa.rotateX(rotation);\r\n    const quaternionRamp = new THREE.Quaternion();\r\n    quaternionRamp.setFromAxisAngle(new THREE.Vector3(1, 0, 0), rotation);\r\n\r\n    let rampPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      quaternionRamp, //Quaternion2\r\n      new Ammo.btVector3(0, 0, 0), //Inertia\r\n      0, //Mass\r\n      new THREE.Vector3(length, width, height), //Shape\r\n      this.physicsWorld, //Physics World\r\n      1000 // friction\r\n    );\r\n\r\n    await rampPhysics.buildAmmoPhysics();\r\n    this.physicsToUpdate.push(rampPhysics);\r\n    let ramp = new THREE.Mesh(rampa, floorMaterial);\r\n    ramp.position.set(position[0], position[1], position[2]);\r\n    this.scene.add(ramp);\r\n  }\r\n\r\n  async createCone(position, Ammo) {\r\n    let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n    cone.addToScene(this.scene, \"trafficCone\", position, [0.5, 0.5, 0.5]);\r\n    let conePhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(1, 0, 0), 0),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      10,\r\n      new THREE.Vector3(\r\n        cone.RADIUS_BOTTOM,\r\n        cone.HEIGHT / 2,\r\n        cone.RADIUS_BOTTOM\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await conePhysics.buildAmmoPhysics();\r\n    this.physicsToUpdate.push(conePhysics);\r\n    conePhysics.attachObserver(cone);\r\n    this.objectsToAnimate.push(cone);\r\n  }\r\n\r\n  async buildStreetPhysics(position, street, Ammo, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(street.SIZE, 0.1, street.LONG),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingLeft = new THREE.Vector3(\r\n      (-8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let leftSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingLeft.x,\r\n        position[1] + movingLeft.y,\r\n        position[2] + movingLeft.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await leftSidewalkPhysics.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + street.SIDEWALK_HEIGHT / 2 + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n    streetPhysics.attachObserver(street);\r\n    this.physicsToUpdate.push(streetPhysics);\r\n    this.physicsToUpdate.push(leftSidewalkPhysics);\r\n    this.physicsToUpdate.push(rightSidewalkPhysics);\r\n  }\r\n\r\n  async buildTStreetPhysics(position, Ammo, tStreet, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingOne = new THREE.Vector3(\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n        0,\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2\r\n      ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingOne.x,\r\n        position[1] + movingOne.y,\r\n        position[2] + movingOne.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const movingTwo = new THREE.Vector3(\r\n      -tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n      0,\r\n      tStreet.SIZE / 2 - tStreet.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingTwo.x,\r\n        position[1] + movingTwo.y,\r\n        position[2] + movingTwo.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * tStreet.SIZE) / 24,\r\n      tStreet.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * tStreet.SIZE) / 24,\r\n        tStreet.SIDEWALK_HEIGHT,\r\n        tStreet.SIZE\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n    this.physicsToUpdate.push(streetPhysics);\r\n    this.physicsToUpdate.push(cornerPhysicsOne);\r\n    this.physicsToUpdate.push(cornerPhysicsTwo);\r\n    this.physicsToUpdate.push(rightSidewalkPhysics);\r\n  }\r\n\r\n  async buildIntersectionPhysics(position, Ammo, intersection) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const cornerPhysicsThree = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsThree.buildAmmoPhysics();\r\n    const cornerPhysicsFour = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsFour.buildAmmoPhysics();\r\n    this.physicsToUpdate.push(streetPhysics);\r\n    this.physicsToUpdate.push(cornerPhysicsOne);\r\n    this.physicsToUpdate.push(cornerPhysicsTwo);\r\n    this.physicsToUpdate.push(cornerPhysicsThree);\r\n    this.physicsToUpdate.push(cornerPhysicsFour);\r\n  }\r\n\r\n  async buildCurvePhysics(position, Ammo, curve, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingCorner = new THREE.Vector3(\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2,\r\n      0,\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingCorner.x,\r\n        position[1] + movingCorner.y,\r\n        position[2] + movingCorner.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysics.buildAmmoPhysics();\r\n    const longSidePhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometryLongSidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await longSidePhysics.buildAmmoPhysics();\r\n    this.physicsToUpdate.push(streetPhysics);\r\n    this.physicsToUpdate.push(cornerPhysics);\r\n    this.physicsToUpdate.push(longSidePhysics);\r\n  }\r\n\r\n  async createStreet(position, Ammo, rotationY, segmentsQuantity) {\r\n    let street = new StraightStreet(\"textures/road.jpg\");\r\n    await street.addToScene(\r\n      this.scene,\r\n      \"street\",\r\n      position,\r\n      segmentsQuantity,\r\n      rotationY\r\n    );\r\n    await this.buildStreetPhysics(position, street, Ammo, rotationY);\r\n    this.objectsToAnimate.push(street);\r\n  }\r\n\r\n  async createIntersection(position, Ammo) {\r\n    let intersection = new Intersection(\"textures/CleanRoadNoBorder.jpg\");\r\n    await intersection.addToScene(this.scene, \"intersection\", position);\r\n    await this.buildIntersectionPhysics(position, Ammo, intersection);\r\n    this.objectsToAnimate.push(intersection);\r\n  }\r\n\r\n  async createCurve(position, Ammo, rotationY) {\r\n    let curve = new Curve(\"textures/CleanRoadNoBorder.jpg\");\r\n    await curve.addToScene(this.scene, \"curve\", position, rotationY);\r\n    await this.buildCurvePhysics(position, Ammo, curve, rotationY);\r\n    this.objectsToAnimate.push(curve);\r\n  }\r\n\r\n  async createTStreet(position, Ammo, rotationY) {\r\n    let tStreet = new TStreet(\"textures/CleanRoadNoBorder.jpg\");\r\n    console.log(\"T_STREET\", position, rotationY);\r\n    await tStreet.addToScene(this.scene, \"tStreet\", position, rotationY);\r\n    await this.buildTStreetPhysics(position, Ammo, tStreet, rotationY);\r\n    this.objectsToAnimate.push(tStreet);\r\n  }\r\n\r\n  async createLevel0() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.createRectangle(\r\n      [10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 8,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [-10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 4,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [0, 0, 0],\r\n      100,\r\n      0.1,\r\n      100,\r\n      0,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createCone([0, 0.5, 10], Ammo);\r\n    this.createCone([0, 0.5, 30], Ammo);\r\n    this.createCone([0, 0.5, 20], Ammo);\r\n  }\r\n\r\n\r\n  async instantiateStreet(position, rotation, long, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    let segments = (long[0] === 30 ? long[1] : long[0])/30;\r\n    this.STREET_TYPES[type]([position[0], 0, position[1]], Ammo, rotation, segments);\r\n  }\r\n\r\n  async createLevelCustom(json) {\r\n    \r\n    json.streets.forEach(street => {\r\n      this.instantiateStreet(\r\n        [street.position_x,street.position_y], \r\n        street.rotation, \r\n        [street.long_x, street.long_y], \r\n        street.type\r\n      );\r\n    });\r\n  }\r\n}\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport Camera from '../Camera/Camera';\r\nimport CarOffsetCamera from '../Camera/CarOffsetCamera';\r\nimport OrbitalCamera from '../Camera/OribtalCamera';\r\nimport CarModel from '../3DModels/CarModel';\r\nimport LogitechG29ControllerSingleton from '../LogicModel/ControllerMapping/LogitechG29Controller';\r\nimport XboxControllerSingleton from '../LogicModel/ControllerMapping/XboxController';\r\nimport Car from '../LogicModel/CarLogic/Car';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport { Vector3 } from 'three';\r\nimport LevelFactory from '../Levels/LevelsFactory';\r\nimport  {VRButton}  from '../addons/VRbutton';\r\nimport Stats from \"stats.js\";\r\n\r\n\r\nexport default class ThreeScene extends Component{\r\n    \r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            \"currentRPM\": 0,\r\n            \"velocity\": 0,\r\n            \"currentShift\": 0,\r\n        };\r\n        this.physicsToUpdate = [];\r\n        localStorage.setItem(\"VR\", false);\r\n        this.gotAnyEvent = false;\r\n        this.stats = new Stats();\r\n        this.objectsToAnimate = [];\r\n        this.scene = new THREE.Scene();\r\n        this.renderer = new THREE.WebGLRenderer({ \r\n            alpha: true, \r\n            powerPreference:\"high-performance\", \r\n            antialias:true \r\n        });\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\r\n        this.renderer.shadowMap.enabled = true;\r\n        this.clock = new THREE.Clock();\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        this.jsonLevel = this.props.jsonLevel;\r\n        this.generateGeneralElements = this.generateGeneralElements.bind(this);\r\n        this.animation = this.animation.bind(this);\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n        this.generateEvents = this.generateEvents.bind(this);\r\n        this.addPlayerCar = this.addPlayerCar.bind(this);\r\n        this.generateLevel = this.generateLevel.bind(this);\r\n        this.addVR = this.addVR.bind(this);\r\n\r\n        await this.generateGeneralElements();\r\n        await this.createAmmo();\r\n        await this.addGeneralLights();\r\n        await this.generateLevel();\r\n        await this.addPlayerCar();\r\n        this.generateEvents();\r\n        this.addVR();\r\n        this.renderer.setAnimationLoop(this.animation);\r\n    }\r\n\r\n\r\n    async addVR(){\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.renderer.xr.enabled = true;\r\n        this.renderer.xr.setFramebufferScaleFactor(0.75);\r\n        this.mount.appendChild(this.renderer.domElement);\r\n        document.body.appendChild( VRButton.createButton( this.renderer ) );\r\n    }\r\n\r\n\r\n    async generateLevel(){\r\n        this.level = new LevelFactory(this.scene, this.physicsWorld);\r\n        await this.level.createLevelCustom(this.jsonLevel);\r\n        const geomField = new THREE.BoxGeometry(10000,10000);\r\n        const texture = new THREE.TextureLoader().load(\"./textures/pasto.jpeg\");\r\n        texture.repeat.set( 500, 500 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const matField = new THREE.MeshBasicMaterial({map: texture});\r\n        const meshField = new THREE.Mesh(geomField, matField);\r\n        meshField.position.set(0,-1, 0);\r\n        meshField.rotateOnAxis(new THREE.Vector3(1,0,0), Math.PI/2);\r\n        this.scene.add(meshField);\r\n\r\n    }\r\n\r\n\r\n    async generateGeneralElements(){\r\n        this.renderer.setClearColor( 0x87cefa, 1 );\r\n        this.camera = new Camera(this.renderer);\r\n        this.camera.addContainerToScene(this.scene);\r\n        this.stats.showPanel( 0 );\r\n        document.body.appendChild(this.stats.dom);\r\n    }\r\n\r\n\r\n    async addGeneralLights(){\r\n        this.scene.add(new THREE.AmbientLight(0xffffff, 0.5));\r\n    }\r\n\r\n\r\n    async addPlayerCar(){\r\n        this.carLogic = new Car(this.physicsWorld);\r\n        let carModel = new CarModel();\r\n        this.carLogic.attachObserver(carModel);\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n        this.carLogic.notifyObservers();\r\n    }\r\n\r\n\r\n    generateEvents(){\r\n        window.addEventListener(\"resize\", this.handleWindowResize);\r\n        window.addEventListener(\"gamepaddisconnected\", function(e){\r\n            LogitechG29ControllerSingleton.removeInstance();  \r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            var numCamera = event.key;\r\n            this.carLogic.removeObserver(this.camera);\r\n            switch(numCamera){\r\n                case \"1\":\r\n                    this.camera = new Camera(this.renderer);\r\n                    this.camera.addContainerToScene(this.scene);\r\n                    break;\r\n                case \"2\":\r\n                    this.camera = new OrbitalCamera(this.renderer);\r\n                    break;\r\n                case \"3\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"4\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"5\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.carLogic.attachObserver(this.camera);\r\n            this.carLogic.notifyObservers();\r\n\r\n          }, false);\r\n    }\r\n\r\n\r\n    async createAmmo(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.tempTransform = new Ammo.btTransform();\r\n        let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n        let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n        let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n        let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n        this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, overlappingPairCache, solver, collisionConfiguratation);\r\n        this.physicsWorld.setGravity(new Ammo.btVector3(0,-9.8,0));\r\n    }\r\n\r\n\r\n    handleWindowResize(){\r\n        this.camera.handleResize();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance() );\r\n    }\r\n\r\n\r\n    animation(){\r\n        this.stats.begin();\r\n        let deltaTime = this.clock.getDelta();\r\n        this.physicsWorld.stepSimulation(deltaTime, 10);\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        });\r\n        this.camera.setPositionRelativeToObject();\r\n        XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n        this.setState({\"velocity\": this.carLogic.getSpeed(), \"currentRPM\": this.carLogic.getCurrentRPM(), \"currentShift\": this.carLogic.getCurrentShift()});\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance());\r\n        this.stats.end();\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{width:\"100vw\"}}>\r\n                <div style={{position:\"absolute\", top:\"10px\", right:\"10px\", color:\"red\", width:\"175px\"}} id=\"Acelerador\">\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Cambio Actual: {parseInt(this.state.currentShift)}\r\n                    </p>\r\n                </div>\r\n                <div ref={mount => {this.mount = mount;}}></div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <div id=\"button-box\" style={{position:\"absolute\", top:\"5%\", right:\"5%\"}}>\r\n          <div className={\"MainMenuTitle\"}>\r\n            <h1 style={{textAlign:\"center\", fontSize:\"7rem\"}}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/scene\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/configs\")}\r\n            >\r\n              Configuración\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"right\", paddingRight:30}}>Configurations</h3>\r\n                        </div>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const ItemsContext = createContext();\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport { ItemsContext } from '../LevelEditorContext/ItemsContext';\r\n\r\n\r\nconst allUnselected = {\r\n    \"cone\": null,\r\n    \"trapecio\": null,\r\n    \"street\": null\r\n};\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const {setLastSelectedItem, lastSelectedItem} = React.useContext(ItemsContext);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    //const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    const [itemSelected, setItemSelected] = React.useState(allUnselected);\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        const dictSelection = {...allUnselected};\r\n        dictSelection[item] = \"selected\";\r\n        setItemSelected(dictSelection);\r\n        setLastSelectedItem({\r\n            selectedItem: item,\r\n            scale: 1.0,\r\n            positionX: 0.0,\r\n            positionY: 0.0,\r\n            zIndex: lastSelectedItem ? lastSelectedItem.zIndex + 1 : 1\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"left\", paddingLeft:10}}>Items</h3>\r\n                        </div>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <Grid style={{justifyContent: \"center\", display: \"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n                        {\r\n                            Object.entries(itemSelected).map(([nameItem, isSelected]) => {\r\n                                return (\r\n                                    <img \r\n                                        alt={`${nameItem}`}\r\n                                        key={nameItem}\r\n                                        src={`${nameItem}.png`} \r\n                                        width={75}\r\n                                        height={75} \r\n                                        className={`imageLevelEditor ${isSelected}`} \r\n                                        onClick={() => handleSelection(nameItem)}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport {useState} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst MAX_WIDTH_INPUT = 40;\r\nconst MAX_HEIGHT_INPUT = 40;\r\n\r\nexport const InputsGrid = ({setGridDimensions, gridDimensions}) => {\r\n    const [InputWidth, setInputWidth] = useState(gridDimensions.width);\r\n    const [InputHeight, setInputHeight] = useState(gridDimensions.height);\r\n\r\n    const onSubmit = () =>{\r\n      setGridDimensions(\r\n        {\r\n          width: InputWidth, \r\n          height: InputHeight\r\n        }\r\n      );\r\n    }\r\n  return (\r\n    <Grid container  direction=\"row\" width={\"80%\"} marginLeft={'10%'}\r\n    justifyContent=\"space-evenly\"\r\n    alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={2}>\r\n        <p>Ancho:</p>\r\n          <input \r\n            value={InputWidth} \r\n            type=\"number\" \r\n            step=\"1\" \r\n          onChange={\r\n              (event) => {\r\n                let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                setInputWidth(value > MAX_WIDTH_INPUT ? MAX_WIDTH_INPUT : value);\r\n              }\r\n        } \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={2}>\r\n          <div>\r\n            <p>Alto:</p>\r\n            <input \r\n              value={InputHeight} \r\n              type=\"number\" \r\n              step=\"1\" \r\n              onChange={\r\n                (event) => {\r\n                  let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                  setInputHeight(value > MAX_HEIGHT_INPUT ? MAX_HEIGHT_INPUT : value);\r\n                  \r\n                }\r\n              }\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button variant=\"contained\" onClick={onSubmit}>Actualizar</Button>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n","\r\nconst STANDARD_BOX_LONG = 30;\r\n\r\nexport class AbstractStreet{\r\n\r\n    constructor(ninePerNineGrid, rowIndex, columnIndex){\r\n        const rightFilled = ninePerNineGrid[1][2].filled;\r\n        const topFilled = ninePerNineGrid[0][1].filled;\r\n        const botFilled = ninePerNineGrid[2][1].filled;\r\n        const leftFilled = ninePerNineGrid[1][0].filled;\r\n        this.rotation = this.determineStreetRotation(topFilled, leftFilled, botFilled, rightFilled);\r\n        this.long = [\r\n            STANDARD_BOX_LONG, \r\n            STANDARD_BOX_LONG\r\n        ];\r\n        this.position = [\r\n            rowIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2, \r\n            columnIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2\r\n        ];\r\n    }\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //To implement by each son\r\n    }\r\n\r\n    static sumValueForCell(cell){\r\n        return cell.filled ? 1 : 0\r\n    }\r\n\r\n    static calculateNeighboursFilled(ninePerNineGrid){\r\n        let rowCount = 0;\r\n        let columnCount = 0;\r\n        rowCount += AbstractStreet.sumValueForCell(ninePerNineGrid[1][0]) + AbstractStreet.sumValueForCell(ninePerNineGrid[1][2]);\r\n        columnCount += AbstractStreet.sumValueForCell(ninePerNineGrid[0][1]) + AbstractStreet.sumValueForCell(ninePerNineGrid[2][1]);\r\n        return [rowCount, columnCount];\r\n    }\r\n\r\n    isStraight(){\r\n        return false;\r\n    }\r\n\r\n\r\n    determineStreetRotation(){\r\n        //To be defined by sons\r\n    }\r\n\r\n    getAsJSON(){\r\n        return {\r\n            \"position_x\": this.position[0],\r\n            \"position_y\": this.position[1],\r\n            \"rotation\": this.rotation,\r\n            \"long_x\": this.long[0],\r\n            \"long_y\": this.long[1]\r\n        }\r\n    }\r\n\r\n    getPositionAsRowAndColumn(){\r\n        const row = (this.position[0] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        const col = (this.position[1] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        return [row, col];\r\n    }\r\n\r\n\r\n    getPositionX(){\r\n        return this.position[0];\r\n    }\r\n\r\n    getPositionY(){\r\n        return this.position[1];\r\n    }\r\n\r\n    getLongX(){\r\n        return this.long[0];\r\n    }\r\n\r\n    getLongY(){\r\n        return this.long[1];\r\n    }\r\n   \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_TO_LEFT\": Math.PI*3/2,\r\n    \"LEFT_TO_BOT\": 0,\r\n    \"BOT_TO_RIGHT\": Math.PI/2,\r\n    \"RIGHT_TO_TOP\": Math.PI\r\n}\r\n\r\nexport class Curve extends AbstractStreet{\r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //Tiene que tener solo 2 lindantes, y no ser en misma direccion.\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return (rowCount === 1 && columnCount === 1);\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left){\r\n            return POSSIBLE_ROTATIONS[\"TOP_TO_LEFT\"];\r\n        }\r\n        if(left && bot){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_TO_BOT\"];\r\n        }\r\n        if(bot && right){\r\n            return POSSIBLE_ROTATIONS[\"BOT_TO_RIGHT\"];\r\n        }\r\n        if(right && top){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_TO_TOP\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"CURVE\";\r\n        return dict;\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"HORIZONTAL\": 0,\r\n    \"VERTICAL\": Math.PI/2\r\n}\r\n\r\nexport class StraightStreet extends AbstractStreet {\r\n    \r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        \r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);\r\n        return(columnCount === 2 && rowCount === 0 )|| (columnCount === 0 && rowCount === 2 )\r\n\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && bot){\r\n            return POSSIBLE_ROTATIONS[\"VERTICAL\"];\r\n        }\r\n        if(left && right){\r\n            return POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n        }\r\n    }\r\n\r\n    isStraight(){\r\n        return true;\r\n    }\r\n\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"STRAIGHT\";\r\n        return dict;\r\n    }\r\n\r\n\r\n    isHorizontal(){\r\n        return this.rotation === POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_SINGLE\": Math.PI,\r\n    \"LEFT_SINGLE\": Math.PI*3/2,\r\n    \"BOT_SINGLE\": 0,\r\n    \"RIGHT_SINGLE\": Math.PI/2\r\n}\r\nexport class TStreet extends AbstractStreet {\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 1 )|| (columnCount === 1 && rowCount === 2 );\r\n    }\r\n    \r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left && right){\r\n            return POSSIBLE_ROTATIONS[\"TOP_SINGLE\"];\r\n        }\r\n        if(left && bot && top){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_SINGLE\"];\r\n        }\r\n        if(bot && right && left){\r\n            return POSSIBLE_ROTATIONS[\"BOT_SINGLE\"];\r\n        }\r\n        if(right && top && bot){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_SINGLE\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"T_STREET\";\r\n        return dict;\r\n    }\r\n\r\n}","export class StraightStreetLinker{\r\n\r\n    constructor(arrayOfStreets){\r\n        this.sections = this.segregateSections(arrayOfStreets);\r\n        this.sectionsAsJSON = this.linkSections();\r\n    }\r\n\r\n    //Genero un array para cada tramo recto, que contenga todas las StraightStreets de ese tramo\r\n    //Cada array de seccion va dentro de un array general y eso retornamos\r\n    segregateSections(arrayOfStreets){\r\n        // Recorro array de streets --> Armo un hashMap de filas, y otro de columnas.\r\n        // Para cada fila o columna, separar las subsecciones correspondientes.\r\n        const rows = {};\r\n        const cols = {};\r\n        let sectionsArray = [];\r\n\r\n        for(let i = 0; i < arrayOfStreets.length; i++){\r\n            let [streetRow, streetCol] = arrayOfStreets[i].getPositionAsRowAndColumn();\r\n            if( arrayOfStreets[i].isHorizontal() ){\r\n                if( !(streetRow in rows) ){\r\n                    rows[streetRow] = [];\r\n                }\r\n                rows[streetRow].push({\"idx\":streetCol, \"street\":arrayOfStreets[i]});\r\n            }\r\n            else{\r\n                if( !(streetCol in cols) ){\r\n                    cols[streetCol] = [];\r\n                }\r\n                cols[streetCol].push({\"idx\":streetRow, \"street\":arrayOfStreets[i]});\r\n            }\r\n        }\r\n        for(const [, value] of Object.entries(rows)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        for(const [, value] of Object.entries(cols)){\r\n            console.log(value);\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        return sectionsArray;\r\n        \r\n    }\r\n\r\n\r\n    generateArraySubsections(array){\r\n        const finalArray = [];\r\n        //Sort de array por idx creciente... CREEMOS que ya viene sorteado - VERIFICAR.\r\n        for ( let i=0; i<array.length; i++){\r\n            //Primer elemento, o no son lindantes\r\n            if( i === 0 || (Math.abs(array[i][\"idx\"] - array[i-1][\"idx\"]) > 1)){\r\n                finalArray.push([array[i][\"street\"]]);\r\n            }else{\r\n                finalArray[finalArray.length - 1].push(array[i][\"street\"]);\r\n            }\r\n        }\r\n        return finalArray;\r\n    }\r\n\r\n\r\n    linkSections(){\r\n        const sectionsJSON = [];\r\n        for(let i = 0; i < this.sections.length; i++){\r\n            //Rotation is the same for all of them\r\n            const jsonForStreet = {\r\n                \"position_x\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionX(), 0)/this.sections[i].length,\r\n                \"position_y\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionY(), 0)/this.sections[i].length ,\r\n                \"rotation\": this.sections[i][0].rotation,\r\n                \"long_x\": this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongX(), 0) : this.sections[i][0].getLongX(),\r\n                \"long_y\": !this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongY(), 0) : this.sections[i][0].getLongY(),\r\n                \"type\": \"STRAIGHT\"\r\n            }\r\n            sectionsJSON.push(jsonForStreet);\r\n        }\r\n        return sectionsJSON;\r\n    }\r\n\r\n    getSectionsAsJSON(){\r\n        return this.sectionsAsJSON;\r\n    }\r\n}","import { StraightStreet, TStreet, Intersection, Curve, StraightStreetLinker } from \"./Street\";\r\n\r\nconst TYPES_OF_STREETS = [\r\n    StraightStreet,\r\n    Curve,\r\n    TStreet,\r\n    Intersection\r\n];\r\n\r\nexport class StreetFactory{\r\n    \r\n    constructor(levelGrid, isInfiniteLevel){\r\n        this.levelGrid = levelGrid;\r\n        this.getNinePerNineGrid = isInfiniteLevel ? this.getNinePerNineGridInfinite : this.getNinePerNineGridFinite;\r\n    }\r\n\r\n    constructStreets(){\r\n        const straightStreetsArray = [];\r\n        const curvedStreetsArray = [];\r\n        //ararco desde la parte superior izq\r\n        for ( let i = 0; i < this.levelGrid.length ; i++ ){\r\n            for ( let j = 0; j < this.levelGrid[i].length ; j++ ){\r\n                const myCell = this.levelGrid[i][j];\r\n                if (myCell.filled){\r\n                    const streetObject = this.defineTypeOfStreet(i, j);\r\n                    if (streetObject.isStraight()){\r\n                        straightStreetsArray.push(streetObject);\r\n                    }\r\n                    else{\r\n                        curvedStreetsArray.push(streetObject);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        const conjunctedStraightStreets = this.linkStraightStreets(straightStreetsArray);\r\n        let finalArray = curvedStreetsArray.map(street => street.getAsJSON());\r\n        return [...finalArray, ...conjunctedStraightStreets];\r\n        //const finalArray = [...conjunctedStraightStreets, ...curvedStreetsArray];\r\n        //return finalArray.map(street => street.getAsJSON());\r\n    }\r\n\r\n    getNinePerNineGridInfinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            const rowArray = [];\r\n            //Si es negativo es la ultima, y sino es el modulo entre el index y la cant de filas.\r\n            const realRow = i < 0 ? this.levelGrid.length-1 : i % this.levelGrid.length;\r\n            for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                //Simil row pero para columna\r\n                const realColumn = y < 0 ? this.levelGrid[realRow].length-1 : y % this.levelGrid[realRow].length;\r\n                rowArray.push(this.levelGrid[realRow][realColumn]);\r\n            }\r\n            matrix.push(rowArray);\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    getNinePerNineGridFinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        const celda_vacia = {\r\n            \"filled\": false,\r\n        }\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            //Casos Filas Imaginarias vacías\r\n            if (i < 0 || i === this.levelGrid.length){\r\n                matrix.push([celda_vacia, celda_vacia, celda_vacia]);\r\n            }else{\r\n                const rowArray = [];\r\n                for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                    if (y < 0 || y === this.levelGrid[i].length){\r\n                        rowArray.push(celda_vacia);\r\n                    }else{\r\n                        rowArray.push(this.levelGrid[i][y]);\r\n                    }\r\n                }\r\n                matrix.push(rowArray);\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    /* Example:\r\n        | | | | | | | |\r\n        | | | x x x | |\r\n        | | | x Y x | |\r\n        | | | x x x | |\r\n        | | | | | | | |\r\n    */\r\n    defineTypeOfStreet(row, column){\r\n        const ninePerNineGrid = this.getNinePerNineGrid(row, column);\r\n        let typeDefined = false;\r\n        let typeResult = undefined;\r\n        for ( let i = 0; i < TYPES_OF_STREETS.length && !typeDefined; i++){\r\n            typeDefined = TYPES_OF_STREETS[i].isValidNinePerNineGrid(ninePerNineGrid);\r\n            typeResult = TYPES_OF_STREETS[i];\r\n        }\r\n        if (!typeDefined){\r\n            throw new Error(\"No se pudo definir el tipo de calle dentro de los tipos validos.\");\r\n        }\r\n        //Row 0 es la de abajo del todo. Invertimos la row.\r\n        return new typeResult(ninePerNineGrid, this.levelGrid.length - 1 - row, column);\r\n    }\r\n\r\n\r\n    linkStraightStreets(straightStreetsArray){\r\n        const linker = new StraightStreetLinker(straightStreetsArray);\r\n        return linker.getSectionsAsJSON();\r\n    }\r\n    \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\n\r\nexport class Intersection extends AbstractStreet{\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 2 )\r\n    }\r\n\r\n    determineStreetRotation(){\r\n        //No sense to rotate it\r\n        return 0;\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"INTERSECTION\";\r\n        return dict;\r\n    }\r\n}\r\n","import { StreetFactory } from \"./StreetFactory\";\r\n\r\n\r\nexport function downloadObjectAsJson(exportObj, exportName){\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n};\r\n\r\n\r\n\r\n\r\nfunction getCountSidesPainted(levelGrid, i, j){\r\n    let aux = 0;\r\n    for (let x = i-1; x <= i+1 && x < levelGrid.length; x++){\r\n        if (x >= 0 && x !== i){\r\n            aux += levelGrid[x][j].filled ? 1 : 0;\r\n        }\r\n    }\r\n    for(let y = j-1; y <= j+1 && y < levelGrid[i].length; y++){\r\n        if(y >= 0 && y !== j){\r\n            aux += levelGrid[i][y].filled ? 1 : 0;\r\n        }\r\n    }\r\n    return aux;\r\n}\r\n\r\nfunction validateGridNotInfinite(levelGrid){\r\n    let valid = true;\r\n    let wrongCells = [];\r\n    for (let i=0; i<levelGrid.length; i++){\r\n        for (let j=0; j<levelGrid[i].length; j++){\r\n            if (levelGrid[i][j].filled && getCountSidesPainted(levelGrid, i,j) <= 1){\r\n                valid = false;\r\n                wrongCells.push([i,j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        \"valid\": valid,\r\n        \"wrongCells\": wrongCells\r\n    }\r\n}\r\n\r\nfunction validateGridInfinite(){\r\n\r\n}\r\n\r\nexport function validateGrid(levelGrid, isInfinite){\r\n    \r\n    return (isInfinite ? validateGridInfinite(levelGrid) : validateGridNotInfinite(levelGrid));\r\n    \r\n}\r\n\r\nexport function generateJSONFromGrid(levelGrid){\r\n    \r\n    const streetFactory = new StreetFactory(levelGrid);\r\n    const streetsArray = streetFactory.constructStreets();\r\n    const objectsAndStreets = {\r\n        \"streets\": streetsArray\r\n    };\r\n    return objectsAndStreets;\r\n\r\n    \r\n}","import { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport MemoryIcon from '@mui/icons-material/Memory';\r\nimport { downloadObjectAsJson, validateGrid, generateJSONFromGrid } from '../Resources/LevelEditor';\r\n\r\nconst COLORS = {\r\n  \"FILLED\": \"darkgray\",\r\n  \"EMPTY\": \"white\",\r\n  \"WARNING\": 'orange',\r\n};\r\n\r\nconst WIDTH_GRID_VIEW = 600;\r\nconst HEIGHT_GRID_VIEW = 600;\r\nconst LEFT_CLICK = 0;\r\nconst RIGHT_CLICK = 2;\r\n\r\n\r\nexport const LevelGrid = ({gridDimensions}) => {\r\n\r\n  const [levelGrid, setLevelGrid] = useState([]);\r\n  const [click, setClick] = useState(false);\r\n  const [rightClick, setRightClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let finalGrid = [];\r\n    for(let i=0; i<gridDimensions.height; i++){\r\n      let currentRow = [];\r\n      for(let j=0; j<gridDimensions.width; j++){\r\n        let newCell = {\r\n          \"filled\": false,\r\n          \"div_color\": COLORS[\"EMPTY\"]\r\n        }\r\n        currentRow.push(newCell);\r\n      }\r\n      finalGrid.push(currentRow);\r\n    }\r\n    setLevelGrid(finalGrid);\r\n  }, [gridDimensions.width, gridDimensions.height]);\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", (event) => {\r\n      event.preventDefault();\r\n      if(event.button === LEFT_CLICK){\r\n        setClick(false);\r\n      }else if (event.button === RIGHT_CLICK){\r\n        setRightClick(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"contextmenu\", (event) => { event.preventDefault(); });\r\n  }, []);\r\n\r\n\r\n  const arrayContains = (array, insiderArray) => {\r\n    if (!insiderArray || !array){\r\n      return false;\r\n    }\r\n    for (let i=0; i<array.length; i++){\r\n      let equals = true;\r\n      for (let j=0; j<array[i].length; j++){\r\n        try{\r\n          if(array[i][j] !== insiderArray[j]){\r\n            equals = false;\r\n          }\r\n        }catch(exc){j=array[i].length; equals=false;}\r\n      }\r\n      if(equals) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const onSubmitLevel = () =>{\r\n    let result = validateGrid(levelGrid);\r\n    let vec_aux = [...levelGrid];\r\n    for( let i=0; i< levelGrid.length; i++ ){\r\n      for( let j=0; j < levelGrid[i].length; j++){\r\n        if (vec_aux[i][j].filled){\r\n          vec_aux[i][j].div_color = arrayContains(result.wrongCells, [i,j]) ? COLORS[\"WARNING\"] : COLORS[\"FILLED\"];\r\n        }\r\n        \r\n      }\r\n    }\r\n    setLevelGrid(vec_aux);\r\n    if (result.valid) {\r\n      downloadObjectAsJson(generateJSONFromGrid(levelGrid), \"Driving_Simulator_Custom_Level.json\");\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const onEnterHoverWithClickCell = (row, col) => {\r\n    if(click){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(rightClick){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n  \r\n  const onClickCell = (row, col, btn_click) => {\r\n    if(btn_click === LEFT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(btn_click === RIGHT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        width: WIDTH_GRID_VIEW,\r\n        height: HEIGHT_GRID_VIEW,\r\n        marginTop: 25,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n      onMouseDown = {(event) => {\r\n        event.preventDefault();\r\n        if(event.button === LEFT_CLICK){\r\n          setClick(true);\r\n        }else if (event.button === RIGHT_CLICK){\r\n          setRightClick(true);\r\n        }\r\n      }}\r\n    >\r\n      {levelGrid.map((row, idx_row) => {\r\n        return(\r\n          <div \r\n            className=\"row-level-grid\" \r\n            id={`row_${idx_row}`}\r\n            key={`row_${idx_row}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: HEIGHT_GRID_VIEW/gridDimensions.height,\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            {row.map((cell, idx_col) => {\r\n              return (\r\n                <div \r\n                  className=\"cell-level-grid\" \r\n                  key={`cell_${idx_row}_${idx_col}`}\r\n                  id={`cell_${idx_row}_${idx_col}`} \r\n                  style={{\r\n                    backgroundColor: cell[\"div_color\"],\r\n                    width: `${100/gridDimensions.width}%`,\r\n                    height: \"100%\",\r\n                    border: \"1px solid black\"\r\n                  }} \r\n                  //onMouseEnter = {() => onEnterHoverWithClickCell(idx_row, idx_col)}\r\n                  onMouseMove = {(event) => {\r\n                    event.preventDefault();\r\n                    onEnterHoverWithClickCell(idx_row, idx_col);\r\n                  }}\r\n                  onMouseUp = {(event) => {\r\n                    onClickCell(idx_row, idx_col, event.button);\r\n                  }}\r\n                  \r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:40}}>\r\n        <Button variant=\"contained\" onClick={onSubmitLevel}  color=\"success\">\r\n          <MemoryIcon/> Procesar nivel...\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { ItemsContext } from './LevelEditorContext/ItemsContext';\r\nimport { useState } from 'react';\r\nimport { InputsGrid } from './Components/InputsGrid';\r\n\r\nimport { LevelGrid } from './Components/LevelGrid';\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = useState(false);\r\n  const [openConfigs, setOpenConfigs] = useState(false);\r\n\r\n  const [itemsInGrid, setItemsInGrid] = useState([]);\r\n\r\n  const [lastSelectedItem, setLastSelectedItem] = useState(null);\r\n\r\n  const [gridDimensions, setGridDimensions] = useState({width:20, height:20});\r\n\r\n  React.useEffect(() => {\r\n    if (lastSelectedItem !== null){\r\n      setItemsInGrid(currentItems => [...currentItems, lastSelectedItem]);\r\n    }\r\n  }, [lastSelectedItem]);\r\n\r\n  return (\r\n    <>\r\n      <ItemsContext.Provider value={{lastSelectedItem, setLastSelectedItem}}>\r\n        <div>\r\n          <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n            <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n              <AddIcon/>\r\n            </IconButton>\r\n            <h1>Driving Simulator - Level Editor</h1>\r\n            <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n              <InputsGrid setGridDimensions={setGridDimensions} gridDimensions={gridDimensions}></InputsGrid>\r\n              <LevelGrid gridDimensions = {gridDimensions}/>\r\n              {itemsInGrid.map((item, idx) => {\r\n                return(\r\n                  <span key={idx}></span>\r\n                  /*<img \r\n                    key={idx} \r\n                    src={`${item.selectedItem}.png`} \r\n                    width={item.scale*75} \r\n                    height={item.scale*75} \r\n                    style={{\r\n                      top:item.positionY, \r\n                      left:item.positionX,\r\n                      position: \"absolute\",\r\n                      zIndex: item.zIndex.toString()\r\n                    }}\r\n                    onClick={() => {console.log(`OPEN CONFIGS OF idx: ${idx}, obj: ${JSON.stringify(itemsInGrid[idx])}`)}}\r\n                  />*/\r\n                );\r\n              })}\r\n          </div>\r\n          \r\n        </div>\r\n        <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n        <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n      </ItemsContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","//export const API_URL = \"https://backend-bata340.cloud.okteto.net\";\r\nexport const API_URL = \"http://localhost:8001\";\r\nexport const VALID_REGEX_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;","import { createContext } from \"react\";\r\n\r\nexport const SessionContext  = createContext(undefined);","\r\nconst { createHash } = require('crypto');\r\n\r\nexport const hash = (string) => {\r\n  return createHash('sha256').update(string).digest('hex');\r\n}","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants'\r\nimport { SessionHooks } from '../Sessions/SessionHooks';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const LoginForm = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const { setSessionWithResponse } = SessionHooks();\r\n\r\n  const postLogin = async () => {\r\n    try{\r\n        const APIResponse = await fetch(\r\n            `${API_URL}/users/login`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": hash(password)\r\n                })\r\n            }\r\n        );\r\n        if (APIResponse.status !== 200){\r\n            const json = await APIResponse.json();\r\n            const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n            let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n            throw new Error(error_msg);\r\n        }\r\n        return APIResponse.json();\r\n    }catch(e){\r\n        throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  const validateFields = () => {\r\n    const errors = []\r\n    if (password === \"\"){\r\n        errors.push(\"El campo contraseña se encuentra vacío.\");\r\n    }\r\n    if (email === \"\"){\r\n        errors.push(\"El campo email se encuentra vacío\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n        errors.push(\"El email establecido es inválido.\");\r\n      }\r\n    if(errors.length > 0){\r\n        setError(errors);\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n  }\r\n\r\n\r\n  const submitLogin = async (event) => {\r\n    event.preventDefault();\r\n    if(!validateFields()){\r\n        return;\r\n    }\r\n    try{\r\n        const loginResponse = await postLogin();\r\n        setSessionWithResponse(loginResponse);\r\n        /*TODO: DAR UN FEEDBACK DE SESION INICIADA CORRECTAMENTE ANTES DE REDIR*/\r\n        navigate(\"/\");\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n\r\n  const postLoginGoogle = async (token) => {\r\n    const APIResponse = await fetch(\r\n        `${API_URL}/users/login_google`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"token\": token\r\n            })\r\n        }\r\n    );\r\n    if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n    }\r\n    return APIResponse.json();\r\n  }\r\n\r\n  const submitGoogleLogin = async (token) => {\r\n    try{\r\n        const responseAPI = await postLoginGoogle(token);\r\n        setSessionWithResponse(responseAPI);\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitLogin}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Iniciar Sesión</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type=\"text\" \r\n                    onChange={(event) => setEmail(event.target.value)} \r\n                    value={email} \r\n                    name=\"email\"\r\n                    label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPassword(event.target.value)} \r\n                    value={password} \r\n                    name=\"password\"\r\n                    label=\"Contraseña\"\r\n                    InputProps={{ // <-- This is where the toggle button is added.\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">Iniciar Sesión</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/signup\"}>¿No posees una cuenta? Registrate aquí...</Link>\r\n            </div>\r\n            <div style={{marginTop:20, display:\"flex\", justifyContent:\"center\", textAlign:\"center\", alignContent:\"center\"}}>\r\n                <GoogleLogin\r\n                    onSuccess={credentialResponse => {\r\n                        const OAuthToken = credentialResponse.credential;\r\n                        submitGoogleLogin(OAuthToken);\r\n                    }}\r\n                    onError={() => {\r\n                        setError(['El inicio de sesión con Google ha fallado.']);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n","import { useContext } from 'react';\r\nimport { SessionContext } from './SessionContext';\r\n\r\nexport const SessionHooks = () => {\r\n  \r\n    const { session, setSession } = useContext(SessionContext);\r\n\r\n\r\n    const setSessionWithResponse = (loginResponse) => {\r\n        setSession({\r\n            user: loginResponse.user,\r\n            jwt: loginResponse.jwt\r\n        });\r\n    }\r\n\r\n    const getUser = () => {\r\n        return session.user ? session.user : undefined;\r\n    }\r\n\r\n    const getJWT = () => {\r\n        return session.jwt ? session.jwt : undefined;\r\n    }\r\n\r\n    return({\r\n        setSessionWithResponse,\r\n        getUser,\r\n        getJWT\r\n    })\r\n}\r\n","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\n\r\n\r\nexport const SignUpForm = () => {\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState(\"\");\r\n  const [nameToShow, setNameToShow] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const validateFields = () => {\r\n    const errorArray = [];\r\n    if (email === \"\" || password === \"\" || passwordConfirmation === \"\" || nameToShow === \"\"){\r\n      errorArray.push(\"Aún existen campos sin completar.\")\r\n    }\r\n    if (password !== passwordConfirmation){\r\n      errorArray.push(\"Las contraseñas establecidas no coinciden.\");\r\n    }\r\n    if (password.length < 8){\r\n      errorArray.push(\"La contraseña debe tener una longitud mínima de 8 caracteres.\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n      errorArray.push(\"El email establecido es inválido.\");\r\n    }\r\n    if(errorArray.length > 0){\r\n      setError(errorArray);\r\n      return false;\r\n    }else{\r\n      setError(undefined);\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  const postSignUp = async () => {\r\n    const fetchUrl = `${API_URL}/users/register`;\r\n    try{\r\n      const APIResponse = await fetch(\r\n        fetchUrl,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n              \"email\": email,\r\n              \"password\": hash(password),\r\n              \"name_to_show\": nameToShow\r\n          })\r\n        }\r\n      );\r\n      if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      return APIResponse.json();\r\n  }catch(e){\r\n      throw new Error(e);\r\n  }\r\n  }\r\n\r\n\r\n  const submitSignUp = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateFields()){\r\n      return;\r\n    }\r\n    // eslint-disable-next-line\r\n    const res = await postSignUp();\r\n    /*TODO: Mostrar dialog de creado exitoso, y despues mandarlo al login...*/\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitSignUp}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Crea tu cuenta</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setEmail(event.target.value)} \r\n                  value={email} \r\n                  name=\"email\"\r\n                  label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setNameToShow(event.target.value)} \r\n                  value={nameToShow} \r\n                  name=\"username\"\r\n                  label=\"Nombre para mostrar\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  onChange={(event) => setPassword(event.target.value)} \r\n                  value={password} \r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPasswordConfirmation(event.target.value)} \r\n                    value={passwordConfirmation} \r\n                    name=\"passwordConfirmation\"\r\n                    label=\"Repetir Contraseña\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">CREAR CUENTA</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/login\"}>¿Ya poses una cuenta? Inicia sesión...</Link>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n","import { SessionContext } from \"./SessionContext\";\r\nimport { useState } from 'react'\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nexport const SessionProvider = ( {childElement} ) => {\r\n  \r\n    const [session, setSession] = useState({\r\n        user: undefined,\r\n        jwt: undefined\r\n    });\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"18785041157-s9ga39r0i6up45radtj3soo6je1pneon.apps.googleusercontent.com\">\r\n            <SessionContext.Provider value={{session, setSession}}>\r\n                {childElement}\r\n            </SessionContext.Provider>\r\n        </GoogleOAuthProvider>\r\n    )\r\n}\r\n","import ThreeScene from \"./Scene/ThreeScene\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MainMenu } from \"./Menus/MainMenu\";\r\nimport { LevelEditor } from \"./Menus/LevelEditor\";\r\nimport {\r\n  HashRouter as Router,\r\n  Routes as Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { LoginForm } from \"./Menus/Components/LoginForm\";\r\nimport { SignUpForm } from \"./Menus/Components/SignUpForm\";\r\nimport { SessionProvider } from \"./Menus/Sessions/SessionProvider\";\r\n\r\nfunction App() {\r\n  const [json, setJson] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Driving Simulator\";\r\n    fetch(\"./invert.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setJson(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <SessionProvider\r\n      childElement={\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/scene\" element={json && <ThreeScene jsonLevel={json} />} />\r\n            <Route exact path=\"/\" element={<MainMenu />} />\r\n            <Route exact path=\"/level-editor\" element={<LevelEditor />} />\r\n            <Route exact path=\"/login\" element={<LoginForm />} />\r\n            <Route exact path=\"/signup\" element={<SignUpForm />} />\r\n          </Switch>\r\n        </Router>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n\r\n"],"sourceRoot":""}