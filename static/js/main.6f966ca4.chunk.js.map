{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/Models.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics.js","3DModels/StraightStreet.js","3DModels/Intersection.js","3DModels/Curve.js","3DModels/TStreet.js","3DModels/Checkpoint.js","Levels/LevelScore.js","Levels/LevelsFactory.js","addons/VRbutton.js","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/LevelEditorContext/ItemsContext.jsx","Menus/Components/ItemsDrawer.jsx","Menus/Components/InputsGrid.jsx","Menus/Resources/Street/AbstractStreet.js","Menus/Resources/Street/Curve.js","Menus/Resources/Street/StraightStreet.js","Menus/Resources/Street/TStreet.js","Menus/Resources/Street/StraightStreetLinker.js","Menus/Resources/StreetFactory.js","Menus/Resources/Street/Intersection.js","Menus/Resources/LevelEditor.js","Menus/Components/LevelGrid.jsx","Menus/LevelEditor.jsx","Menus/Constants/Constants.js","Menus/Sessions/SessionContext.jsx","Menus/Resources/Hasher.js","Menus/Components/LoginForm.jsx","Menus/Sessions/SessionHooks.jsx","Menus/Components/SignUpForm.jsx","Menus/Sessions/SessionProvider.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","constructor","car","this","handleAccelerate","valueClutch","valueAccelerator","accelerate","handleBrake","valueBrake","brake","doHorn","changeShift","valueShift","turnDirection","wheelAxesValue","turnOnCar","updateCar","update","changeShiftBox","mode","Observer","observedState","newState","Camera","renderer","super","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","handleResize","aspect","updateProjectionMatrix","setPositionRelativeToObject","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","rotationQuat","x","y","z","w","normalize","quaternion","getCameraInstance","addContainerToScene","scene","CarOffsetCamera","positionCamera","cameraOffsetRotated","positionToLookAt","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","async","loadAsync","threeDObject","objectName","scale","modelVariable","loadFBX","e","loadGLTF","name","getModel","animate","ModelsSingleton","carModel","building_1","building_2","building_3","building_4","changeMaterialsToBasic","children","i","length","child","isGroup","isMesh","newMaterial","prototype","call","material","receiveShadow","castShadow","pathToTextureRcvd","result","Models","static","loadModels","Error","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","generateRetrovisor","plane","retrovisor","Reflector","textureWidth","textureHeight","clipBias","multisample","rotateX","rotateY","generateLeftMirror","leftMirrorGeometry","leftMirror","container","Object3D","generateRightMirror","rightMirrorGeometry","rightMirror","generateMirrors","models","getInstance","moveCar","addPhysicsView","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","watchPhysicsColliders","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorOne","default","require","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","checkEvents","doActionByMapping","doActionsPedals","axes","doActionsWheel","doActionsDPad","doActionsButtons","buttons","pressed","doActionsShifter","LogitechG29ControllerSingleton","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","doActionsAxes","axe","doActionHotKeys","value","doActionsTriggers","XboxControllerSingleton","Observable","observers","attachObserver","observer","removeObserver","index","indexOf","splice","notifyObservers","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","width","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","updatePhysics","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","getRigidBody","setEngineForce","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringRotation","setSteeringValue","getVelocity","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","changeValueInRPMCurve","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","TurnedOnEngine","CarEngine","engineState","playbackRate","turnOn","Audio","play","setTimeout","soundEngine","AudioContext","webkitAudioContext","fetch","then","response","arrayBuffer","buffer","decodeAudioData","soundEngineSource","createBufferSource","loop","connect","destination","start","clutchIsPressed","handleEngineShutdown","shiftBox","shutDownEngine","isInConditionToAccelerate","engineCanApplyForce","rpmReturn","changeRPM","RPMModification","log","getCurrentRPM","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","isValidShift","shift","calculateNormalFactorRPM","newShift","oldVelocity","getValueForNewRPM","normalFactorRPM","XValue","getEngineForce","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactor","getCurrentShift","ManualBox","SemiAutomaticBox","Car","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","turnOnRightLight","turnOnLeftLight","positionAndRotation","getDataToAnimate","getLastRotation","getSpeed","GeneralPhysics","generateShape","getMotionState","getWorldTransform","setLinearVelocity","velocityVector","velVectorBT","applyForce","BoxPhysics","setMargin","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","undefined","load","map","materialBox","geometryPlane","box","cone","CylinderPhysics","btCylinderShape","CustomGeometryPhysics","triangle_mesh","btTriangleMesh","vectA","vectB","vectC","verticesPos","getAttribute","array","triangles","setX","setY","setZ","addTriangle","destroy","btBvhTriangleMeshShape","StraightStreet","pathToNormalMap","SIZE","SIDEWALK_HEIGHT","createSidewalkMesh","wrapS","wrapT","repeat","materialSidewalk","geometrySidewalk","createStreetMesh","mesh","clone","iter","model3D","loadBuildingBlock","parseInt","random","LONG","updateMatrix","updateMatrixWorld","matrixAutoUpdate","secondModel3D","rotationY","baseStreet","leftSidewalk","rightSidewalk","createBuildings","Intersection","SQUARE_SIZE","getLerpPoints","vec1","vec2","quantPoints","points","createSidewalkCurve","initialPoint","lerpPoints","pointsCurve","getPoints","secondLerpPoints","thirdLerpPoints","fourthLerpPoints","getGeometrySidewalk","geom","columnas","aux_vertices","indexes","uv1","uv2","uv3","accum_x","accum_z","uv","vertex","filas","j","vertexArr","Float32Array","uvArr","setIndex","setAttribute","computeVertexNormals","sidewalk","Curve","TOP_CENTER","createLongSidewalkCurve","fifthLerpPoints","sixthLerpPoints","getGeometryLongSidewalk","createLongSidewalkMesh","longSidewalk","TStreet","createStraightSidewalkMesh","createBuilding","Checkpoint","checkpointsData","RADIUS","stepHeartbeat","LEAST_OPACITY","MAX_OPACITY","newOpacity","opacity","transparent","checkpoint","LevelScore","initialScore","arguments","score","alterScore","isNaN","getCurrentScore","LevelFactory","levelScore","physicsToUpdate","objectsToAnimate","STREET_TYPES","createStreet","bind","createCurve","createTStreet","createIntersection","OBJECTS","createCone","forEach","phys","object","height","pathTexture","normalMapPath","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","buildAmmoPhysics","ramp","addToScene","conePhysics","threeObject","onCollide","console","street","streetPhysics","movingLeft","leftSidewalkPhysics","movingRight","rightSidewalkPhysics","tStreet","identity","movingOne","cornerPhysicsOne","movingTwo","cornerPhysicsTwo","intersection","cornerPhysicsThree","cornerPhysicsFour","curve","movingCorner","cornerPhysics","longSidePhysics","segmentsQuantity","buildStreetPhysics","buildIntersectionPhysics","buildCurvePhysics","buildTStreetPhysics","checkpoints","checkpointPhysics","removeRigidBody","rigidyBody","removeCollisionObject","remove","end","createCheckpoint","position_x","position_y","createRectangle","long","type","segments","json","streets","instantiateStreet","long_x","long_y","objects","obj","instantiateObject","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","outline","zIndex","xr","isSessionSupported","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","sessionInit","optionalFeatures","requestSession","setItem","showEnterVR","xrSessionIsGranted","click","catch","exception","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","ThreeScene","Component","state","velocity","gotAnyEvent","stats","Stats","alpha","powerPreference","antialias","setSize","shadowMap","enabled","clock","jsonLevel","props","generateGeneralElements","animation","handleWindowResize","generateEvents","addPlayerCar","generateLevel","addVR","createAmmo","addGeneralLights","setAnimationLoop","setPixelRatio","devicePixelRatio","setFramebufferScaleFactor","mount","appendChild","body","createButton","level","updateDataLevel","createLevelCustom","geomField","matField","meshField","setClearColor","showPanel","dom","removeInstance","event","numCamera","key","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","onEnterColission","addFunction","cp","obj0","obj1","castObject","wrapPointer","btManifoldPoint","get_m_userPersistentData","collisionContactID","set_m_userPersistentData","setContactProcessedCallback","render","begin","deltaTime","getDelta","stepSimulation","setState","_jsxs","_jsx","top","right","fontWeight","ref","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","MainMenu","navigate","useNavigate","_Fragment","className","fontSize","onClick","ConfigDrawer","_ref","openConfigs","handleDrawerClose","open","setOpen","React","useState","useEffect","DrawerHeader","styled","_ref2","theme","alignItems","spacing","mixins","toolbar","justifyContent","Grid","Drawer","sx","flexShrink","boxSizing","variant","anchor","ChevronRightIcon","paddingRight","Divider","ItemsContext","createContext","allUnselected","ItemsDrawer","openItems","setLastSelectedItem","lastSelectedItem","useContext","itemSelected","setItemSelected","paddingLeft","ChevronLeftIcon","flexDirection","Object","entries","_ref3","nameItem","isSelected","alt","src","item","dictSelection","selectedItem","positionX","positionY","handleSelection","InputsGrid","setGridDimensions","gridDimensions","InputWidth","setInputWidth","InputHeight","setInputHeight","direction","marginLeft","xs","step","onChange","target","replaceAll","Button","onSubmit","STANDARD_BOX_LONG","AbstractStreet","ninePerNineGrid","rowIndex","columnIndex","rightFilled","filled","topFilled","botFilled","leftFilled","determineStreetRotation","cell","rowCount","columnCount","sumValueForCell","isStraight","getAsJSON","getPositionAsRowAndColumn","getPositionX","getPositionY","getLongX","getLongY","POSSIBLE_ROTATIONS","StraightStreetLinker","arrayOfStreets","sections","segregateSections","sectionsAsJSON","linkSections","rows","cols","sectionsArray","streetRow","streetCol","isHorizontal","generateArraySubsections","finalArray","sectionsJSON","jsonForStreet","reduce","acum","elem","getSectionsAsJSON","TYPES_OF_STREETS","calculateNeighboursFilled","bot","dict","StreetFactory","levelGrid","isInfiniteLevel","getNinePerNineGrid","getNinePerNineGridInfinite","getNinePerNineGridFinite","constructStreets","straightStreetsArray","curvedStreetsArray","streetObject","defineTypeOfStreet","conjunctedStraightStreets","linkStraightStreets","indexRow","indexColumn","matrix","rowArray","realRow","realColumn","celda_vacia","row","column","typeResult","typeDefined","isValidNinePerNineGrid","getCountSidesPainted","aux","validateGrid","isInfinite","validateGridInfinite","valid","wrongCells","validateGridNotInfinite","COLORS","LevelGrid","setLevelGrid","setClick","rightClick","setRightClick","finalGrid","currentRow","newCell","preventDefault","arrayContains","insiderArray","equals","exc","marginTop","marginRight","onMouseDown","idx_row","idx_col","backgroundColor","onMouseMove","onEnterHoverWithClickCell","col","levelGridCopy","div_color","onMouseUp","onClickCell","btn_click","onSubmitLevel","vec_aux","exportObj","exportName","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","downloadObjectAsJson","generateJSONFromGrid","MemoryIcon","LevelEditor","setOpenItems","setOpenConfigs","itemsInGrid","setItemsInGrid","currentItems","Provider","IconButton","margin","AddIcon","SettingsIcon","idx","API_URL","VALID_REGEX_EMAIL","SessionContext","createHash","hash","string","digest","LoginForm","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","setSessionWithResponse","SessionHooks","loginResponse","user","jwt","getUser","getJWT","submitGoogleLogin","responseAPI","APIResponse","method","headers","token","status","endMSG","detail","msg","error_msg","statusText","postLoginGoogle","toString","validateFields","errors","match","postLogin","alignContent","maxWidth","Alert","severity","onClose","listerror","TextField","label","InputProps","endAdornment","InputAdornment","handleClickShowPassword","Visibility","VisibilityOff","Link","to","GoogleLogin","onSuccess","credentialResponse","OAuthToken","credential","onError","SignUpForm","passwordConfirmation","setPasswordConfirmation","nameToShow","setNameToShow","errorArray","fetchUrl","postSignUp","SessionProvider","childElement","GoogleOAuthProvider","clientId","App","setJson","title","data","Router","Switch","Route","exact","path","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.6f966ca4.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n    doHorn(){\r\n        this.car.doHorn();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.4;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 85, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") === \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                const rotationQuat = new THREE.Quaternion(this.observedState.rotation.x, this.observedState.rotation.y, this.observedState.rotation.z, this.observedState.rotation.w).normalize();\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), -5*Math.PI/180); //SUMAR ROTACION EXTRA SI USAMOS EL JOYSTICK DERECHO\r\n                this.group.quaternion.copy(rotationQuat);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    \r\n    addContainerToScene(scene){\r\n        scene.add(this.group);\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from 'three';\r\n\r\nclass ModelsSingleton{\r\n\r\n    constructor(){\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.carModel = null;\r\n        this.building_1 = null;\r\n        this.building_2 = null;\r\n        this.building_3 = null;\r\n        this.building_4 = null;\r\n    }\r\n\r\n\r\n    changeMaterialsToBasic(children){\r\n        for (let i=0; i < children.length; i++) {\r\n            const child = children[i];\r\n            \r\n            if(child.isGroup){\r\n                this.changeMaterialsToBasic(child.children);\r\n            }else if(child.isMesh){\r\n                const newMaterial = new THREE.MeshPhongMaterial();\r\n                THREE.MeshBasicMaterial.prototype.copy.call( newMaterial, child.material );\r\n                child.material = newMaterial;\r\n                child.receiveShadow = true;\r\n                child.castShadow = true;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async loadGLTF(pathToTextureRcvd){\r\n        let pathToTexture = pathToTextureRcvd;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        this.changeMaterialsToBasic(result.scene.children);\r\n        return result.scene;\r\n    }\r\n\r\n    async loadModels(){\r\n        this.carModel = this.loadGLTF('res/models/source/Mercedes.glb');\r\n        this.building_1 = this.loadGLTF('res/models/source/buildings/Building_1.glb');\r\n        this.building_2 = this.loadGLTF('res/models/source/buildings/Building_2.glb');\r\n        this.building_3 = this.loadGLTF('res/models/source/buildings/Building_3.glb');\r\n        this.building_4 = this.loadGLTF('res/models/source/buildings/Building_4.glb');\r\n        return \"OK\";\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default class Models{\r\n\r\n    static ModelsSingleton\r\n\r\n    static async getInstance(){\r\n        if (!Models.ModelsSingleton){\r\n            Models.ModelsSingleton = new ModelsSingleton();\r\n            let res = await Models.ModelsSingleton.loadModels();\r\n            if (res === \"OK\"){\r\n                return Models.ModelsSingleton;\r\n            }else{\r\n                throw new Error(\"Error al cargar los modelos.\");\r\n            }\r\n        }else{\r\n            return Models.ModelsSingleton;\r\n        }\r\n        \r\n    }\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector';\r\nimport { Object3D } from 'three';\r\nimport Models from './Models';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\n//const STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = 0.13\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        //super('res/models/source/AutoConInterior.glb');\r\n        super('res/models/source/Mercedes.glb');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n    }\r\n\r\n\r\n    generateRetrovisor(){\r\n        //const path = new THREE.Shape();\r\n        //path.absellipse(0,0,0.15,0.075,0, Math.PI*2, false,0);\r\n        //const ellipseGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const plane = new THREE.PlaneGeometry(0.145, 0.085);\r\n        const retrovisor = new Reflector(\r\n            plane,\r\n            //ellipseGeometry,\r\n            {\r\n                textureWidth: window.innerWidth,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: window.innerHeight,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0.35,\r\n                multisample: 4\r\n            }\r\n        );\r\n        retrovisor.rotateX( Math.PI-0.04 );\r\n        retrovisor.rotateY( 0.35 );\r\n        retrovisor.position.set(0.075,0.625,0.31);\r\n        this.threeDModel.add(retrovisor);\r\n    }\r\n\r\n\r\n    generateLeftMirror(){\r\n        const leftMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const leftMirror = new Reflector(\r\n            leftMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,//512\r\n                textureHeight: window.innerHeight,//512\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(leftMirror);\r\n        container.position.set(0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.13);\r\n        leftMirror.rotateY(-18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateRightMirror(){\r\n        const rightMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const rightMirror = new Reflector(\r\n            rightMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,\r\n                textureHeight: window.innerHeight,\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(rightMirror);\r\n        container.position.set(-0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.1);\r\n        rightMirror.rotateY(18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateMirrors(){\r\n        this.generateRetrovisor();\r\n        this.generateLeftMirror();\r\n        this.generateRightMirror();\r\n    }\r\n\r\n    async addToScene(scene){\r\n        const models = await Models.getInstance();\r\n        this.threeDModel = await models.carModel;\r\n        this.threeDModel.name = \"driverCar\";\r\n        this.threeDModel.position.x = POSITION[0];\r\n        this.threeDModel.position.y = POSITION[1];\r\n        this.threeDModel.position.z = POSITION[2];\r\n        this.threeDModel.scale.x = SCALE[0];\r\n        this.threeDModel.scale.y = SCALE[1];\r\n        this.threeDModel.scale.z = SCALE[2];\r\n        scene.add(this.threeDModel);\r\n        this.generateMirrors();\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        // let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        // let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        // let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        // let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'W222WheelFtR');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'W222WheelFtL');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'W222WheelBkR');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'W222WheelBkL');\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n        this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox') || gamepads[i].id.startsWith('xinput')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            this.globalControllerHandler.doHorn();\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n        this.playbackRate = 1.1;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        if(this.engineState instanceof TurnedOffEngine){\r\n            new Audio('./sounds/encendido.wav').play();\r\n            this.engineState = new TurnedOnEngine();\r\n            setTimeout(() => {\r\n                this.soundEngine = new (window.AudioContext || window.webkitAudioContext)();\r\n                fetch(\"./sounds/engine.wav\").then(\r\n                    response => response.arrayBuffer()\r\n                ).then(buffer => this.soundEngine.decodeAudioData(buffer)\r\n                ).then(buffer => {\r\n                    this.soundEngineSource = this.soundEngine.createBufferSource();\r\n                    this.soundEngineSource.buffer = buffer;\r\n                    this.soundEngineSource.loop = true;\r\n                    this.soundEngineSource.connect(this.soundEngine.destination);\r\n                    this.soundEngineSource.start();\r\n                });\r\n            }, 1300);\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4 } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst POSITION = [15,1,15];\r\nconst FACTOR_BRAKE_TO_FORCE = 300;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld){\r\n        super();\r\n        this.carEngine = new CarEngine();\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(POSITION[0], POSITION[1], POSITION[2]);\r\n        this.rotationQuaternion = new Vector4(0,0,0,1);\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        // this.carPhysics.buildAmmoPhysics();\r\n        \r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n    doHorn(){\r\n        new Audio(\"./sounds/bocina.wav\").play();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM()\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.castShadow = true;\r\n            cone.receiveShadow = true;\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class CustomGeometryPhysics extends GeneralPhysics{\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        // eslint-disable-next-line\r\n        let _triangle, triangle_mesh = new Ammo.btTriangleMesh();\r\n        //declare triangles position vectors\r\n        let vectA = new Ammo.btVector3(0, 0, 0);\r\n        let vectB = new Ammo.btVector3(0, 0, 0);\r\n        let vectC = new Ammo.btVector3(0, 0, 0);\r\n        //retrieve vertices positions from object\r\n        let verticesPos = this.shape.getAttribute('position').array;\r\n        let triangles = [];\r\n        for (let i = 0; i < verticesPos.length; i += 3) {\r\n            triangles.push({\r\n                x: verticesPos[i],\r\n                y: verticesPos[i + 1],\r\n                z: verticesPos[i + 2]\r\n            });\r\n        }\r\n        //use triangles data to draw ammo shape\r\n        for (let i = 0; i < triangles.length - 3; i += 3) {\r\n\r\n            vectA.setX(triangles[i].x);\r\n            vectA.setY(triangles[i].y);\r\n            vectA.setZ(triangles[i].z);\r\n\r\n            vectB.setX(triangles[i + 1].x);\r\n            vectB.setY(triangles[i + 1].y);\r\n            vectB.setZ(triangles[i + 1].z);\r\n\r\n            vectC.setX(triangles[i + 2].x);\r\n            vectC.setY(triangles[i + 2].y);\r\n            vectC.setZ(triangles[i + 2].z);\r\n\r\n            triangle_mesh.addTriangle(vectA, vectB, vectC, true);\r\n        }\r\n        Ammo.destroy(vectA);\r\n        Ammo.destroy(vectB);\r\n        Ammo.destroy(vectC);\r\n\r\n        var shape = new Ammo.btBvhTriangleMeshShape(triangle_mesh, true);\r\n        shape.setMargin(0);\r\n        return shape;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class StraightStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n    createSidewalkMesh(scale){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10*scale );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(scale){\r\n        const geometry = new THREE.BoxGeometry( 10*this.SIZE/24, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        \r\n        texture.repeat.set( 1, 2*scale );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsLeft_\"+iter;\r\n        secondModel3D.position.x = -10*this.SIZE/24;\r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh(scale);\r\n            const leftSidewalk = this.createSidewalkMesh(scale);\r\n            const rightSidewalk = this.createSidewalkMesh(scale);\r\n            baseStreet.position.set(0,0,0);\r\n            leftSidewalk.position.set(-8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            rightSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet).add(leftSidewalk).add(rightSidewalk)\r\n            for (let i=0; i<4*scale; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.scale.set(1.0, 1.0, scale);\r\n            leftSidewalk.scale.set(1.0, 1.0, scale);\r\n            rightSidewalk.scale.set(1.0, 1.0, scale);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            rightSidewalk.updateMatrix();\r\n            rightSidewalk.updateMatrixWorld();\r\n            rightSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            this.LONG = this.SIZE*scale;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\n\r\nexport default class Intersection extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<4; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else if(i===2){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }else if(i===3){\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                }else{\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class Curve extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24+0.12;\r\n        this.TOP_CENTER = [this.SIZE/2-this.SQUARE_SIZE, this.SIDEWALK_HEIGHT, -this.SIZE/2+this.SQUARE_SIZE];\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    createLongSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SIZE/2,0,-this.SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(\r\n            initialPoint, \r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            5\r\n            );\r\n        const secondLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const thirdLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const fourthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2 - this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE, this.SIZE/2-this.SQUARE_SIZE), \r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector2(-this.SIZE/2+this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n        );\r\n        let pointsCurve = curve.getPoints(30);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const fifthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2+this.SQUARE_SIZE, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const sixthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2),\r\n            5\r\n        );\r\n        return [\r\n            ...lerpPoints, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints,\r\n            ...pointsCurve,\r\n            ...fifthLerpPoints,\r\n            ...sixthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    getGeometryLongSidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createLongSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(this.TOP_CENTER[0], this.TOP_CENTER[1], this.TOP_CENTER[2]);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SIZE/2)/this.SIZE, (points[i].z+this.SIZE/2)/this.SIZE);\r\n            uv3.push((this.TOP_CENTER[0]+this.SIZE/2)/this.SIZE, (this.TOP_CENTER[2]+this.SIZE/2)/this.SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    createLongSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 10, 10 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometryLongSidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsCurve_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsCurveOtherSide_\"+iter;\r\n        secondModel3D.position.x = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;      \r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = 10*this.SIZE/24;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            const sidewalk = this.createSidewalkMesh();\r\n            sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n            sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n            sidewalk.updateMatrix();\r\n            sidewalk.updateMatrixWorld();\r\n            sidewalk.matrixAutoUpdate = false;\r\n            const longSidewalk = this.createLongSidewalkMesh();\r\n            longSidewalk.position.set(0,0,0);\r\n            longSidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n            longSidewalk.updateMatrix();\r\n            longSidewalk.updateMatrixWorld();\r\n            longSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(sidewalk).add(longSidewalk);\r\n            for (let i=0; i<3; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class TStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuilding(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D);\r\n    }\r\n\r\n\r\n    createStraightSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10 );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<2; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else{\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            for (let i=0; i<4; i++){\r\n                this.createBuilding(position, i);\r\n            }\r\n            const leftSidewalk = this.createStraightSidewalkMesh();\r\n            leftSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(leftSidewalk);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\n\r\nexport default class Checkpoint extends VisualEntity{\r\n\r\n    constructor(checkpointsData){\r\n        super(null);\r\n        this.checkpointsData = checkpointsData;\r\n        this.RADIUS = 1;\r\n        this.HEIGHT = 5;\r\n        this.observedState = null;\r\n        this.stepHeartbeat = -0.002;\r\n        this.LEAST_OPACITY = 0.25;\r\n        this.MAX_OPACITY = 0.5;\r\n    } \r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        const currentOpacity = this.threeDModel.children[0].material.opacity;\r\n        const newOpacity = currentOpacity - this.stepHeartbeat;\r\n        this.threeDModel.children[0].material.opacity = newOpacity;\r\n        if(newOpacity <= this.LEAST_OPACITY || newOpacity >= this.MAX_OPACITY){\r\n            this.stepHeartbeat *= -1;\r\n        }\r\n    }\r\n\r\n    \r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS, this.RADIUS, this.HEIGHT, 32 );\r\n            const material = new THREE.MeshBasicMaterial( { color: 0x00ff00, opacity: 0.4, transparent:true });\r\n            const checkpoint = new THREE.Mesh( geometry, material );\r\n            checkpoint.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(checkpoint);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS *= scale[0];\r\n            this.RADIUS *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","export default class LevelScore {\r\n\r\n    constructor(initialScore = 0){\r\n        this.score = initialScore;\r\n    }\r\n\r\n    alterScore(points){\r\n        if (isNaN(points)){\r\n            throw new Error(\"Solo se puede alterar el puntaje con números.\");\r\n        }\r\n        this.score += points;\r\n    }\r\n\r\n    getCurrentScore(){\r\n        return this.score;\r\n    }\r\n}","import * as THREE from \"three\";\r\nimport BoxPhysics from \"../LogicModel/Physics/PhysicsTypes/BoxPhysics\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport TrafficCone from \"../3DModels/TrafficCone\";\r\nimport CylinderPhysics from \"../LogicModel/Physics/PhysicsTypes/CylinderPhysics\";\r\nimport CustomGeometryPhysics from \"../LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics\";\r\nimport StraightStreet from \"../3DModels/StraightStreet\";\r\nimport Intersection from \"../3DModels/Intersection\";\r\nimport Curve from \"../3DModels/Curve\";\r\nimport TStreet from \"../3DModels/TStreet\";\r\nimport Checkpoint from \"../3DModels/Checkpoint\";\r\nimport LevelScore from \"./LevelScore\";\r\n\r\n\r\nconst SUM_FOR_CHECKPOINT = 1000;\r\nconst SUB_FOR_CONE = -100;\r\nconst INITIAL_SCORE = 0;\r\n\r\nexport default class LevelFactory {\r\n  constructor(scene, physicsWorld) {\r\n    this.scene = scene;\r\n    this.physicsWorld = physicsWorld;\r\n    this.levelScore = new LevelScore(INITIAL_SCORE);\r\n    this.physicsToUpdate = [];\r\n    this.objectsToAnimate = [];\r\n    this.STREET_TYPES = {\r\n      \"STRAIGHT\": this.createStreet.bind(this),\r\n      \"CURVE\": this.createCurve.bind(this),\r\n      \"T_STREET\": this.createTStreet.bind(this),\r\n      \"INTERSECTION\": this.createIntersection.bind(this)\r\n    };\r\n    this.OBJECTS = {\r\n      \"CONE\": this.createCone.bind(this)\r\n    };\r\n  }\r\n\r\n  updatePhysics() {\r\n    this.physicsToUpdate.forEach(function (phys) {\r\n      phys.updatePhysics();\r\n    });\r\n  }\r\n\r\n  animate() {\r\n    this.objectsToAnimate.forEach(function (object) {\r\n      object.animate();\r\n    });\r\n  }\r\n\r\n  async createRectangle(\r\n    position,\r\n    length,\r\n    width,\r\n    height,\r\n    rotation,\r\n    pathTexture,\r\n    Ammo,\r\n    normalMapPath = null\r\n  ) {\r\n    const texture = new THREE.TextureLoader().load(pathTexture);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(length, height);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n    });\r\n    if (normalMapPath) {\r\n      let normalTexture = new THREE.TextureLoader().load(normalMapPath);\r\n      normalTexture.repeat.set(length, height);\r\n      normalTexture.wrapS = THREE.RepeatWrapping;\r\n      normalTexture.wrapT = THREE.RepeatWrapping;\r\n      floorMaterial.normalMap = normalTexture;\r\n      floorMaterial.normalScale.set(10, 10);\r\n    }\r\n    const rampa = new THREE.BoxGeometry(length, width, height);\r\n    rampa.rotateX(rotation);\r\n    const quaternionRamp = new THREE.Quaternion();\r\n    quaternionRamp.setFromAxisAngle(new THREE.Vector3(1, 0, 0), rotation);\r\n\r\n    let rampPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      quaternionRamp, //Quaternion2\r\n      new Ammo.btVector3(0, 0, 0), //Inertia\r\n      0, //Mass\r\n      new THREE.Vector3(length, width, height), //Shape\r\n      this.physicsWorld, //Physics World\r\n      1000 // friction\r\n    );\r\n\r\n    await rampPhysics.buildAmmoPhysics();\r\n    //this.physicsToUpdate.push(rampPhysics);\r\n    let ramp = new THREE.Mesh(rampa, floorMaterial);\r\n    ramp.position.set(position[0], position[1], position[2]);\r\n    this.scene.add(ramp);\r\n  }\r\n\r\n  async createCone(position, Ammo, rotationY) {\r\n    let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n    cone = await cone.addToScene(this.scene, \"trafficCone\", position, [0.5, 0.5, 0.5]);\r\n    let conePhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationY),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      10,\r\n      new THREE.Vector3(\r\n        cone.RADIUS_BOTTOM,\r\n        cone.HEIGHT / 2,\r\n        cone.RADIUS_BOTTOM\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await conePhysics.buildAmmoPhysics();\r\n    conePhysics.rigidBody.threeObject = cone;\r\n    conePhysics.rigidBody.onCollide = () => {\r\n      this.levelScore.alterScore(SUB_FOR_CONE);\r\n      console.log(\"New score: \", this.levelScore.getCurrentScore());\r\n    };\r\n    this.physicsToUpdate.push(conePhysics);\r\n    conePhysics.attachObserver(cone);\r\n    this.objectsToAnimate.push(cone);\r\n  }\r\n\r\n  async buildStreetPhysics(position, street, Ammo, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(street.SIZE, 0.1, street.LONG),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingLeft = new THREE.Vector3(\r\n      (-8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let leftSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingLeft.x,\r\n        position[1] + movingLeft.y,\r\n        position[2] + movingLeft.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await leftSidewalkPhysics.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + street.SIDEWALK_HEIGHT / 2 + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildTStreetPhysics(position, Ammo, tStreet, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingOne = new THREE.Vector3(\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n        0,\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2\r\n      ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingOne.x,\r\n        position[1] + movingOne.y,\r\n        position[2] + movingOne.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const movingTwo = new THREE.Vector3(\r\n      -tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n      0,\r\n      tStreet.SIZE / 2 - tStreet.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingTwo.x,\r\n        position[1] + movingTwo.y,\r\n        position[2] + movingTwo.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * tStreet.SIZE) / 24,\r\n      tStreet.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * tStreet.SIZE) / 24,\r\n        tStreet.SIDEWALK_HEIGHT,\r\n        tStreet.SIZE\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildIntersectionPhysics(position, Ammo, intersection) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const cornerPhysicsThree = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsThree.buildAmmoPhysics();\r\n    const cornerPhysicsFour = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsFour.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildCurvePhysics(position, Ammo, curve, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingCorner = new THREE.Vector3(\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2,\r\n      0,\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingCorner.x,\r\n        position[1] + movingCorner.y,\r\n        position[2] + movingCorner.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysics.buildAmmoPhysics();\r\n    const longSidePhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometryLongSidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await longSidePhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async createStreet(position, Ammo, rotationY, segmentsQuantity) {\r\n    let street = new StraightStreet(\"textures/road.jpg\");\r\n    await street.addToScene(\r\n      this.scene,\r\n      \"street\",\r\n      position,\r\n      segmentsQuantity,\r\n      rotationY\r\n    );\r\n    await this.buildStreetPhysics(position, street, Ammo, rotationY);\r\n  }\r\n\r\n  async createIntersection(position, Ammo) {\r\n    let intersection = new Intersection(\"textures/CleanRoadNoBorder.jpg\");\r\n    await intersection.addToScene(this.scene, \"intersection\", position);\r\n    await this.buildIntersectionPhysics(position, Ammo, intersection);\r\n  }\r\n\r\n  async createCurve(position, Ammo, rotationY) {\r\n    let curve = new Curve(\"textures/CleanRoadNoBorder.jpg\");\r\n    await curve.addToScene(this.scene, \"curve\", position, rotationY);\r\n    await this.buildCurvePhysics(position, Ammo, curve, rotationY);\r\n  }\r\n\r\n  async createTStreet(position, Ammo, rotationY) {\r\n    let tStreet = new TStreet(\"textures/CleanRoadNoBorder.jpg\");\r\n    await tStreet.addToScene(this.scene, \"tStreet\", position, rotationY);\r\n    await this.buildTStreetPhysics(position, Ammo, tStreet, rotationY);\r\n  }\r\n\r\n\r\n  async createCheckpoint(position, checkpoints){\r\n    let checkpoint = new Checkpoint(checkpoints);\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await checkpoint.addToScene(this.scene, \"checkpoint\", position, [1,1,1]);\r\n    let checkpointPhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      1,\r\n      new THREE.Vector3(\r\n        checkpoint.RADIUS,\r\n        checkpoint.HEIGHT / 2,\r\n        checkpoint.RADIUS\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    this.physicsToUpdate.push(checkpointPhysics);\r\n    await checkpointPhysics.buildAmmoPhysics();\r\n    checkpointPhysics.rigidBody.threeObject = checkpoint;\r\n    checkpointPhysics.rigidBody.onCollide = async () => {\r\n      this.physicsWorld.removeRigidBody( checkpointPhysics.rigidyBody );\r\n      this.physicsWorld.removeCollisionObject( checkpointPhysics.rigidBody );\r\n      this.levelScore.alterScore(SUM_FOR_CHECKPOINT);\r\n      console.log(\"New score: \", this.levelScore.getCurrentScore());\r\n      this.scene.remove( checkpoint.threeDModel );\r\n      const lastElemUsed = checkpoints.shift();\r\n      if (lastElemUsed.end){\r\n        //TODO: Fin?\r\n      } else if(checkpoints.length > 0){\r\n        await this.createCheckpoint([checkpoints[0].position_x, 1, checkpoints[0].position_y], checkpoints);\r\n      }\r\n    };\r\n    checkpointPhysics.attachObserver(checkpoint);\r\n    this.objectsToAnimate.push(checkpoint);\r\n  }\r\n\r\n  async createLevel0() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.createRectangle(\r\n      [10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 8,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [-10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 4,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [0, 0, 0],\r\n      100,\r\n      0.1,\r\n      100,\r\n      0,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createCone([0, 0.5, 10], Ammo);\r\n    this.createCone([0, 0.5, 30], Ammo);\r\n    this.createCone([0, 0.5, 20], Ammo);\r\n  }\r\n\r\n\r\n  async instantiateStreet(position, rotation, long, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    let segments = (long[0] === 30 ? long[1] : long[0])/30;\r\n    await this.STREET_TYPES[type]([position[0], 0, position[1]], Ammo, rotation, segments);\r\n  }\r\n\r\n\r\n  async instantiateObject(position, rotation, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await this.OBJECTS[type]([position[0], 0.5, position[1]], Ammo, rotation);\r\n  }\r\n\r\n  async createLevelCustom(json) {\r\n    \r\n    for( let i=0 ; i<json.streets.length; i++ ){\r\n      let street = json.streets[i];\r\n      await this.instantiateStreet(\r\n        [street.position_x,street.position_y], \r\n        street.rotation, \r\n        [street.long_x, street.long_y], \r\n        street.type\r\n      );\r\n    }\r\n    for( let i=0 ; i<json.objects.length; i++){\r\n      let obj = json.objects[i];\r\n      await this.instantiateObject(\r\n        [obj.position_x,obj.position_y], \r\n        obj.rotation, \r\n        obj.type\r\n      );\r\n    }\r\n    await this.createCheckpoint(\r\n      [json.checkpoints[0].position_x, 1, json.checkpoints[0].position_y],\r\n      json.checkpoints\r\n    );\r\n    return {\r\n      physicsToUpdate: this.physicsToUpdate,\r\n      objectsToAnimate: this.objectsToAnimate\r\n    };\r\n    // json.checkpoints.forEach --> Instancio y guardo en un array\r\n    // onCollide de un checkpoint --> saco ese de la escena y agrego uno nuevo (El que le sigue)\r\n    // Si el checkpoint es el ultimo --> Fin de nivel? Solo si esta marcado con un bool de fin nivel o algo asi\r\n  }\r\n}\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Camera from \"../Camera/Camera\";\r\nimport CarOffsetCamera from \"../Camera/CarOffsetCamera\";\r\nimport OrbitalCamera from \"../Camera/OribtalCamera\";\r\nimport CarModel from \"../3DModels/CarModel\";\r\nimport LogitechG29ControllerSingleton from \"../LogicModel/ControllerMapping/LogitechG29Controller\";\r\nimport XboxControllerSingleton from \"../LogicModel/ControllerMapping/XboxController\";\r\nimport Car from \"../LogicModel/CarLogic/Car\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport { Vector3 } from \"three\";\r\nimport LevelFactory from \"../Levels/LevelsFactory\";\r\nimport { VRButton } from \"../addons/VRbutton\";\r\nimport Stats from \"stats.js\";\r\n\r\nexport default class ThreeScene extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentRPM: 0,\r\n      velocity: 0,\r\n      currentShift: 0,\r\n    };\r\n    this.physicsToUpdate = [];\r\n    localStorage.setItem(\"VR\", false);\r\n    this.gotAnyEvent = false;\r\n    this.stats = new Stats();\r\n    this.objectsToAnimate = [];\r\n    this.scene = new THREE.Scene();\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      powerPreference: \"high-performance\",\r\n      antialias: true,\r\n    });\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.clock = new THREE.Clock();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.jsonLevel = this.props.jsonLevel;\r\n    this.generateGeneralElements = this.generateGeneralElements.bind(this);\r\n    this.animation = this.animation.bind(this);\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n    this.generateEvents = this.generateEvents.bind(this);\r\n    this.addPlayerCar = this.addPlayerCar.bind(this);\r\n    this.generateLevel = this.generateLevel.bind(this);\r\n    this.addVR = this.addVR.bind(this);\r\n\r\n    await this.generateGeneralElements();\r\n    await this.createAmmo();\r\n    await this.addGeneralLights();\r\n    await this.generateLevel();\r\n    await this.addPlayerCar();\r\n    this.generateEvents();\r\n    this.addVR();\r\n    this.renderer.setAnimationLoop(this.animation);\r\n  }\r\n\r\n  async addVR() {\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.renderer.xr.enabled = true;\r\n    this.renderer.xr.setFramebufferScaleFactor(0.75);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    document.body.appendChild(VRButton.createButton(this.renderer));\r\n  }\r\n\r\n  async generateLevel() {\r\n    this.level = new LevelFactory(this.scene, this.physicsWorld);\r\n    let updateDataLevel = await this.level.createLevelCustom(this.jsonLevel);\r\n    this.objectsToAnimate = [\r\n      ...this.objectsToAnimate,\r\n      ...updateDataLevel.objectsToAnimate,\r\n    ];\r\n    this.physicsToUpdate = [\r\n      ...this.physicsToUpdate,\r\n      ...updateDataLevel.physicsToUpdate,\r\n    ];\r\n    const geomField = new THREE.BoxGeometry(10000, 10000);\r\n    const texture = new THREE.TextureLoader().load(\"./textures/pasto.jpeg\");\r\n    texture.repeat.set(500, 500);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    const matField = new THREE.MeshBasicMaterial({ map: texture });\r\n    const meshField = new THREE.Mesh(geomField, matField);\r\n    meshField.position.set(0, -1, 0);\r\n    meshField.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\r\n    this.scene.add(meshField);\r\n  }\r\n\r\n  async generateGeneralElements() {\r\n    this.renderer.setClearColor(0x87cefa, 1);\r\n    this.camera = new Camera(this.renderer);\r\n    this.camera.addContainerToScene(this.scene);\r\n    this.stats.showPanel(0);\r\n    document.body.appendChild(this.stats.dom);\r\n  }\r\n\r\n  async addGeneralLights() {\r\n    this.scene.add(new THREE.AmbientLight(0xffffff, 0.5));\r\n  }\r\n\r\n  async addPlayerCar() {\r\n    this.carLogic = new Car(this.physicsWorld);\r\n    await this.carLogic.carPhysics.buildAmmoPhysics();\r\n    let carModel = new CarModel();\r\n    this.carLogic.carPhysics.rigidBody.threeObject = carModel;\r\n    this.carLogic.attachObserver(carModel);\r\n    this.carLogic.attachObserver(this.camera);\r\n    this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n    this.carLogic.notifyObservers();\r\n  }\r\n\r\n  generateEvents() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    window.addEventListener(\"gamepaddisconnected\", function (e) {\r\n      LogitechG29ControllerSingleton.removeInstance();\r\n    });\r\n\r\n    document.addEventListener(\r\n      \"keydown\",\r\n      (event) => {\r\n        var numCamera = event.key;\r\n        this.carLogic.removeObserver(this.camera);\r\n        switch (numCamera) {\r\n          case \"1\":\r\n            this.camera = new Camera(this.renderer);\r\n            this.camera.addContainerToScene(this.scene);\r\n            break;\r\n          case \"2\":\r\n            this.camera = new OrbitalCamera(this.renderer);\r\n            break;\r\n          case \"3\":\r\n            this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n            break;\r\n          case \"4\":\r\n            this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n            break;\r\n          case \"5\":\r\n            this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.carLogic.notifyObservers();\r\n      },\r\n      false\r\n    );\r\n  }\r\n\r\n  async createAmmo() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.tempTransform = new Ammo.btTransform();\r\n    let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n    let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n    let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n    let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n    this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(\r\n      dispatcher,\r\n      overlappingPairCache,\r\n      solver,\r\n      collisionConfiguratation\r\n    );\r\n    this.physicsWorld.setGravity(new Ammo.btVector3(0, -9.8, 0));\r\n\r\n    const onEnterColission = Ammo.addFunction(async (cp, obj0, obj1) => {\r\n      let Ammo = await AmmoInstance.getInstance();\r\n      obj0 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj0, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      obj1 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj1, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      if (\r\n        obj0.threeObject &&\r\n        obj1.threeObject &&\r\n        (obj0.threeObject.threeDModel.name === \"driverCar\" ||\r\n          obj1.threeObject.threeDModel.name === \"driverCar\")\r\n      ) {\r\n        cp = Ammo.wrapPointer(cp, Ammo.btManifoldPoint);\r\n        const userPersistentData = cp.get_m_userPersistentData();\r\n        if (userPersistentData === 0) {\r\n            obj0.onCollide ? obj0.onCollide() : obj1.onCollide();\r\n            //Se cambia el contactId para denotar que la colision es constante. Para no restar puntos infinitamente.\r\n            const collisionContactID = 1; \r\n            cp.set_m_userPersistentData(collisionContactID);\r\n       }\r\n      }\r\n    });\r\n    this.physicsWorld.setContactProcessedCallback(onEnterColission);\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.camera.handleResize();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n  }\r\n\r\n  animation() {\r\n    this.stats.begin();\r\n    let deltaTime = this.clock.getDelta();\r\n    this.physicsWorld.stepSimulation(deltaTime, 10);\r\n    this.objectsToAnimate.forEach(function (object) {\r\n      object.animate();\r\n    });\r\n    this.physicsToUpdate.forEach(function (phys) {\r\n      phys.updatePhysics();\r\n    });\r\n    this.camera.setPositionRelativeToObject();\r\n    XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n    this.setState({\r\n      velocity: this.carLogic.getSpeed(),\r\n      currentRPM: this.carLogic.getCurrentRPM(),\r\n      currentShift: this.carLogic.getCurrentShift(),\r\n    });\r\n    this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n    this.stats.end();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100vw\" }}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            right: \"10px\",\r\n            color: \"red\",\r\n            width: \"175px\",\r\n          }}\r\n          id=\"Acelerador\"\r\n        >\r\n          <p style={{ zIndex: 20, display: \"float\", fontWeight: \"bold\" }}>\r\n            Cambio Actual: {parseInt(this.state.currentShift)}\r\n          </p>\r\n        </div>\r\n        <div\r\n          ref={(mount) => {\r\n            this.mount = mount;\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <div id=\"button-box\" style={{position:\"absolute\", top:\"5%\", right:\"5%\"}}>\r\n          <div className={\"MainMenuTitle\"}>\r\n            <h1 style={{textAlign:\"center\", fontSize:\"7rem\"}}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/scene\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/configs\")}\r\n            >\r\n              Configuración\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"right\", paddingRight:30}}>Configurations</h3>\r\n                        </div>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const ItemsContext = createContext();\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport { ItemsContext } from '../LevelEditorContext/ItemsContext';\r\n\r\n\r\nconst allUnselected = {\r\n    \"cone\": null,\r\n    \"trapecio\": null,\r\n    \"street\": null\r\n};\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const {setLastSelectedItem, lastSelectedItem} = React.useContext(ItemsContext);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    //const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    const [itemSelected, setItemSelected] = React.useState(allUnselected);\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        const dictSelection = {...allUnselected};\r\n        dictSelection[item] = \"selected\";\r\n        setItemSelected(dictSelection);\r\n        setLastSelectedItem({\r\n            selectedItem: item,\r\n            scale: 1.0,\r\n            positionX: 0.0,\r\n            positionY: 0.0,\r\n            zIndex: lastSelectedItem ? lastSelectedItem.zIndex + 1 : 1\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"left\", paddingLeft:10}}>Items</h3>\r\n                        </div>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <Grid style={{justifyContent: \"center\", display: \"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n                        {\r\n                            Object.entries(itemSelected).map(([nameItem, isSelected]) => {\r\n                                return (\r\n                                    <img \r\n                                        alt={`${nameItem}`}\r\n                                        key={nameItem}\r\n                                        src={`${nameItem}.png`} \r\n                                        width={75}\r\n                                        height={75} \r\n                                        className={`imageLevelEditor ${isSelected}`} \r\n                                        onClick={() => handleSelection(nameItem)}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport {useState} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst MAX_WIDTH_INPUT = 40;\r\nconst MAX_HEIGHT_INPUT = 40;\r\n\r\nexport const InputsGrid = ({setGridDimensions, gridDimensions}) => {\r\n    const [InputWidth, setInputWidth] = useState(gridDimensions.width);\r\n    const [InputHeight, setInputHeight] = useState(gridDimensions.height);\r\n\r\n    const onSubmit = () =>{\r\n      setGridDimensions(\r\n        {\r\n          width: InputWidth, \r\n          height: InputHeight\r\n        }\r\n      );\r\n    }\r\n  return (\r\n    <Grid container  direction=\"row\" width={\"80%\"} marginLeft={'10%'}\r\n    justifyContent=\"space-evenly\"\r\n    alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={2}>\r\n        <p>Ancho:</p>\r\n          <input \r\n            value={InputWidth} \r\n            type=\"number\" \r\n            step=\"1\" \r\n          onChange={\r\n              (event) => {\r\n                let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                setInputWidth(value > MAX_WIDTH_INPUT ? MAX_WIDTH_INPUT : value);\r\n              }\r\n        } \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={2}>\r\n          <div>\r\n            <p>Alto:</p>\r\n            <input \r\n              value={InputHeight} \r\n              type=\"number\" \r\n              step=\"1\" \r\n              onChange={\r\n                (event) => {\r\n                  let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                  setInputHeight(value > MAX_HEIGHT_INPUT ? MAX_HEIGHT_INPUT : value);\r\n                  \r\n                }\r\n              }\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button variant=\"contained\" onClick={onSubmit}>Actualizar</Button>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n","\r\nconst STANDARD_BOX_LONG = 30;\r\n\r\nexport class AbstractStreet{\r\n\r\n    constructor(ninePerNineGrid, rowIndex, columnIndex){\r\n        const rightFilled = ninePerNineGrid[1][2].filled;\r\n        const topFilled = ninePerNineGrid[0][1].filled;\r\n        const botFilled = ninePerNineGrid[2][1].filled;\r\n        const leftFilled = ninePerNineGrid[1][0].filled;\r\n        this.rotation = this.determineStreetRotation(topFilled, leftFilled, botFilled, rightFilled);\r\n        this.long = [\r\n            STANDARD_BOX_LONG, \r\n            STANDARD_BOX_LONG\r\n        ];\r\n        this.position = [\r\n            rowIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2, \r\n            columnIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2\r\n        ];\r\n    }\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //To implement by each son\r\n    }\r\n\r\n    static sumValueForCell(cell){\r\n        return cell.filled ? 1 : 0\r\n    }\r\n\r\n    static calculateNeighboursFilled(ninePerNineGrid){\r\n        let rowCount = 0;\r\n        let columnCount = 0;\r\n        rowCount += AbstractStreet.sumValueForCell(ninePerNineGrid[1][0]) + AbstractStreet.sumValueForCell(ninePerNineGrid[1][2]);\r\n        columnCount += AbstractStreet.sumValueForCell(ninePerNineGrid[0][1]) + AbstractStreet.sumValueForCell(ninePerNineGrid[2][1]);\r\n        return [rowCount, columnCount];\r\n    }\r\n\r\n    isStraight(){\r\n        return false;\r\n    }\r\n\r\n\r\n    determineStreetRotation(){\r\n        //To be defined by sons\r\n    }\r\n\r\n    getAsJSON(){\r\n        return {\r\n            \"position_x\": this.position[0],\r\n            \"position_y\": this.position[1],\r\n            \"rotation\": this.rotation,\r\n            \"long_x\": this.long[0],\r\n            \"long_y\": this.long[1]\r\n        }\r\n    }\r\n\r\n    getPositionAsRowAndColumn(){\r\n        const row = (this.position[0] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        const col = (this.position[1] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        return [row, col];\r\n    }\r\n\r\n\r\n    getPositionX(){\r\n        return this.position[0];\r\n    }\r\n\r\n    getPositionY(){\r\n        return this.position[1];\r\n    }\r\n\r\n    getLongX(){\r\n        return this.long[0];\r\n    }\r\n\r\n    getLongY(){\r\n        return this.long[1];\r\n    }\r\n   \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_TO_LEFT\": Math.PI*3/2,\r\n    \"LEFT_TO_BOT\": 0,\r\n    \"BOT_TO_RIGHT\": Math.PI/2,\r\n    \"RIGHT_TO_TOP\": Math.PI\r\n}\r\n\r\nexport class Curve extends AbstractStreet{\r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //Tiene que tener solo 2 lindantes, y no ser en misma direccion.\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return (rowCount === 1 && columnCount === 1);\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left){\r\n            return POSSIBLE_ROTATIONS[\"TOP_TO_LEFT\"];\r\n        }\r\n        if(left && bot){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_TO_BOT\"];\r\n        }\r\n        if(bot && right){\r\n            return POSSIBLE_ROTATIONS[\"BOT_TO_RIGHT\"];\r\n        }\r\n        if(right && top){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_TO_TOP\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"CURVE\";\r\n        return dict;\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"HORIZONTAL\": 0,\r\n    \"VERTICAL\": Math.PI/2\r\n}\r\n\r\nexport class StraightStreet extends AbstractStreet {\r\n    \r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        \r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);\r\n        return(columnCount === 2 && rowCount === 0 )|| (columnCount === 0 && rowCount === 2 )\r\n\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && bot){\r\n            return POSSIBLE_ROTATIONS[\"VERTICAL\"];\r\n        }\r\n        if(left && right){\r\n            return POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n        }\r\n    }\r\n\r\n    isStraight(){\r\n        return true;\r\n    }\r\n\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"STRAIGHT\";\r\n        return dict;\r\n    }\r\n\r\n\r\n    isHorizontal(){\r\n        return this.rotation === POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_SINGLE\": Math.PI,\r\n    \"LEFT_SINGLE\": Math.PI*3/2,\r\n    \"BOT_SINGLE\": 0,\r\n    \"RIGHT_SINGLE\": Math.PI/2\r\n}\r\nexport class TStreet extends AbstractStreet {\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 1 )|| (columnCount === 1 && rowCount === 2 );\r\n    }\r\n    \r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left && right){\r\n            return POSSIBLE_ROTATIONS[\"TOP_SINGLE\"];\r\n        }\r\n        if(left && bot && top){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_SINGLE\"];\r\n        }\r\n        if(bot && right && left){\r\n            return POSSIBLE_ROTATIONS[\"BOT_SINGLE\"];\r\n        }\r\n        if(right && top && bot){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_SINGLE\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"T_STREET\";\r\n        return dict;\r\n    }\r\n\r\n}","export class StraightStreetLinker{\r\n\r\n    constructor(arrayOfStreets){\r\n        this.sections = this.segregateSections(arrayOfStreets);\r\n        this.sectionsAsJSON = this.linkSections();\r\n    }\r\n\r\n    //Genero un array para cada tramo recto, que contenga todas las StraightStreets de ese tramo\r\n    //Cada array de seccion va dentro de un array general y eso retornamos\r\n    segregateSections(arrayOfStreets){\r\n        // Recorro array de streets --> Armo un hashMap de filas, y otro de columnas.\r\n        // Para cada fila o columna, separar las subsecciones correspondientes.\r\n        const rows = {};\r\n        const cols = {};\r\n        let sectionsArray = [];\r\n\r\n        for(let i = 0; i < arrayOfStreets.length; i++){\r\n            let [streetRow, streetCol] = arrayOfStreets[i].getPositionAsRowAndColumn();\r\n            if( arrayOfStreets[i].isHorizontal() ){\r\n                if( !(streetRow in rows) ){\r\n                    rows[streetRow] = [];\r\n                }\r\n                rows[streetRow].push({\"idx\":streetCol, \"street\":arrayOfStreets[i]});\r\n            }\r\n            else{\r\n                if( !(streetCol in cols) ){\r\n                    cols[streetCol] = [];\r\n                }\r\n                cols[streetCol].push({\"idx\":streetRow, \"street\":arrayOfStreets[i]});\r\n            }\r\n        }\r\n        for(const [, value] of Object.entries(rows)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        for(const [, value] of Object.entries(cols)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        return sectionsArray;\r\n        \r\n    }\r\n\r\n\r\n    generateArraySubsections(array){\r\n        const finalArray = [];\r\n        //Sort de array por idx creciente... CREEMOS que ya viene sorteado - VERIFICAR.\r\n        for ( let i=0; i<array.length; i++){\r\n            //Primer elemento, o no son lindantes\r\n            if( i === 0 || (Math.abs(array[i][\"idx\"] - array[i-1][\"idx\"]) > 1)){\r\n                finalArray.push([array[i][\"street\"]]);\r\n            }else{\r\n                finalArray[finalArray.length - 1].push(array[i][\"street\"]);\r\n            }\r\n        }\r\n        return finalArray;\r\n    }\r\n\r\n\r\n    linkSections(){\r\n        const sectionsJSON = [];\r\n        for(let i = 0; i < this.sections.length; i++){\r\n            //Rotation is the same for all of them\r\n            const jsonForStreet = {\r\n                \"position_x\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionX(), 0)/this.sections[i].length,\r\n                \"position_y\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionY(), 0)/this.sections[i].length ,\r\n                \"rotation\": this.sections[i][0].rotation,\r\n                \"long_x\": this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongX(), 0) : this.sections[i][0].getLongX(),\r\n                \"long_y\": !this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongY(), 0) : this.sections[i][0].getLongY(),\r\n                \"type\": \"STRAIGHT\"\r\n            }\r\n            sectionsJSON.push(jsonForStreet);\r\n        }\r\n        return sectionsJSON;\r\n    }\r\n\r\n    getSectionsAsJSON(){\r\n        return this.sectionsAsJSON;\r\n    }\r\n}","import { StraightStreet, TStreet, Intersection, Curve, StraightStreetLinker } from \"./Street\";\r\n\r\nconst TYPES_OF_STREETS = [\r\n    StraightStreet,\r\n    Curve,\r\n    TStreet,\r\n    Intersection\r\n];\r\n\r\nexport class StreetFactory{\r\n    \r\n    constructor(levelGrid, isInfiniteLevel){\r\n        this.levelGrid = levelGrid;\r\n        this.getNinePerNineGrid = isInfiniteLevel ? this.getNinePerNineGridInfinite : this.getNinePerNineGridFinite;\r\n    }\r\n\r\n    constructStreets(){\r\n        const straightStreetsArray = [];\r\n        const curvedStreetsArray = [];\r\n        //ararco desde la parte superior izq\r\n        for ( let i = 0; i < this.levelGrid.length ; i++ ){\r\n            for ( let j = 0; j < this.levelGrid[i].length ; j++ ){\r\n                const myCell = this.levelGrid[i][j];\r\n                if (myCell.filled){\r\n                    const streetObject = this.defineTypeOfStreet(i, j);\r\n                    if (streetObject.isStraight()){\r\n                        straightStreetsArray.push(streetObject);\r\n                    }\r\n                    else{\r\n                        curvedStreetsArray.push(streetObject);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        const conjunctedStraightStreets = this.linkStraightStreets(straightStreetsArray);\r\n        let finalArray = curvedStreetsArray.map(street => street.getAsJSON());\r\n        return [...finalArray, ...conjunctedStraightStreets];\r\n        //const finalArray = [...conjunctedStraightStreets, ...curvedStreetsArray];\r\n        //return finalArray.map(street => street.getAsJSON());\r\n    }\r\n\r\n    getNinePerNineGridInfinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            const rowArray = [];\r\n            //Si es negativo es la ultima, y sino es el modulo entre el index y la cant de filas.\r\n            const realRow = i < 0 ? this.levelGrid.length-1 : i % this.levelGrid.length;\r\n            for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                //Simil row pero para columna\r\n                const realColumn = y < 0 ? this.levelGrid[realRow].length-1 : y % this.levelGrid[realRow].length;\r\n                rowArray.push(this.levelGrid[realRow][realColumn]);\r\n            }\r\n            matrix.push(rowArray);\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    getNinePerNineGridFinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        const celda_vacia = {\r\n            \"filled\": false,\r\n        }\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            //Casos Filas Imaginarias vacías\r\n            if (i < 0 || i === this.levelGrid.length){\r\n                matrix.push([celda_vacia, celda_vacia, celda_vacia]);\r\n            }else{\r\n                const rowArray = [];\r\n                for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                    if (y < 0 || y === this.levelGrid[i].length){\r\n                        rowArray.push(celda_vacia);\r\n                    }else{\r\n                        rowArray.push(this.levelGrid[i][y]);\r\n                    }\r\n                }\r\n                matrix.push(rowArray);\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    /* Example:\r\n        | | | | | | | |\r\n        | | | x x x | |\r\n        | | | x Y x | |\r\n        | | | x x x | |\r\n        | | | | | | | |\r\n    */\r\n    defineTypeOfStreet(row, column){\r\n        const ninePerNineGrid = this.getNinePerNineGrid(row, column);\r\n        let typeDefined = false;\r\n        let typeResult = undefined;\r\n        for ( let i = 0; i < TYPES_OF_STREETS.length && !typeDefined; i++){\r\n            typeDefined = TYPES_OF_STREETS[i].isValidNinePerNineGrid(ninePerNineGrid);\r\n            typeResult = TYPES_OF_STREETS[i];\r\n        }\r\n        if (!typeDefined){\r\n            throw new Error(\"No se pudo definir el tipo de calle dentro de los tipos validos.\");\r\n        }\r\n        //Row 0 es la de abajo del todo. Invertimos la row.\r\n        return new typeResult(ninePerNineGrid, this.levelGrid.length - 1 - row, column);\r\n    }\r\n\r\n\r\n    linkStraightStreets(straightStreetsArray){\r\n        const linker = new StraightStreetLinker(straightStreetsArray);\r\n        return linker.getSectionsAsJSON();\r\n    }\r\n    \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\n\r\nexport class Intersection extends AbstractStreet{\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 2 )\r\n    }\r\n\r\n    determineStreetRotation(){\r\n        //No sense to rotate it\r\n        return 0;\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"INTERSECTION\";\r\n        return dict;\r\n    }\r\n}\r\n","import { StreetFactory } from \"./StreetFactory\";\r\n\r\n\r\nexport function downloadObjectAsJson(exportObj, exportName){\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n};\r\n\r\n\r\n\r\n\r\nfunction getCountSidesPainted(levelGrid, i, j){\r\n    let aux = 0;\r\n    for (let x = i-1; x <= i+1 && x < levelGrid.length; x++){\r\n        if (x >= 0 && x !== i){\r\n            aux += levelGrid[x][j].filled ? 1 : 0;\r\n        }\r\n    }\r\n    for(let y = j-1; y <= j+1 && y < levelGrid[i].length; y++){\r\n        if(y >= 0 && y !== j){\r\n            aux += levelGrid[i][y].filled ? 1 : 0;\r\n        }\r\n    }\r\n    return aux;\r\n}\r\n\r\nfunction validateGridNotInfinite(levelGrid){\r\n    let valid = true;\r\n    let wrongCells = [];\r\n    for (let i=0; i<levelGrid.length; i++){\r\n        for (let j=0; j<levelGrid[i].length; j++){\r\n            if (levelGrid[i][j].filled && getCountSidesPainted(levelGrid, i,j) <= 1){\r\n                valid = false;\r\n                wrongCells.push([i,j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        \"valid\": valid,\r\n        \"wrongCells\": wrongCells\r\n    }\r\n}\r\n\r\nfunction validateGridInfinite(){\r\n\r\n}\r\n\r\nexport function validateGrid(levelGrid, isInfinite){\r\n    \r\n    return (isInfinite ? validateGridInfinite(levelGrid) : validateGridNotInfinite(levelGrid));\r\n    \r\n}\r\n\r\nexport function generateJSONFromGrid(levelGrid){\r\n    \r\n    const streetFactory = new StreetFactory(levelGrid);\r\n    const streetsArray = streetFactory.constructStreets();\r\n    const objectsAndStreets = {\r\n        \"streets\": streetsArray\r\n    };\r\n    return objectsAndStreets;\r\n\r\n    \r\n}","import { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport MemoryIcon from '@mui/icons-material/Memory';\r\nimport { downloadObjectAsJson, validateGrid, generateJSONFromGrid } from '../Resources/LevelEditor';\r\n\r\nconst COLORS = {\r\n  \"FILLED\": \"darkgray\",\r\n  \"EMPTY\": \"white\",\r\n  \"WARNING\": 'orange',\r\n};\r\n\r\nconst WIDTH_GRID_VIEW = 600;\r\nconst HEIGHT_GRID_VIEW = 600;\r\nconst LEFT_CLICK = 0;\r\nconst RIGHT_CLICK = 2;\r\n\r\n\r\nexport const LevelGrid = ({gridDimensions}) => {\r\n\r\n  const [levelGrid, setLevelGrid] = useState([]);\r\n  const [click, setClick] = useState(false);\r\n  const [rightClick, setRightClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let finalGrid = [];\r\n    for(let i=0; i<gridDimensions.height; i++){\r\n      let currentRow = [];\r\n      for(let j=0; j<gridDimensions.width; j++){\r\n        let newCell = {\r\n          \"filled\": false,\r\n          \"div_color\": COLORS[\"EMPTY\"]\r\n        }\r\n        currentRow.push(newCell);\r\n      }\r\n      finalGrid.push(currentRow);\r\n    }\r\n    setLevelGrid(finalGrid);\r\n  }, [gridDimensions.width, gridDimensions.height]);\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", (event) => {\r\n      event.preventDefault();\r\n      if(event.button === LEFT_CLICK){\r\n        setClick(false);\r\n      }else if (event.button === RIGHT_CLICK){\r\n        setRightClick(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"contextmenu\", (event) => { event.preventDefault(); });\r\n  }, []);\r\n\r\n\r\n  const arrayContains = (array, insiderArray) => {\r\n    if (!insiderArray || !array){\r\n      return false;\r\n    }\r\n    for (let i=0; i<array.length; i++){\r\n      let equals = true;\r\n      for (let j=0; j<array[i].length; j++){\r\n        try{\r\n          if(array[i][j] !== insiderArray[j]){\r\n            equals = false;\r\n          }\r\n        }catch(exc){j=array[i].length; equals=false;}\r\n      }\r\n      if(equals) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const onSubmitLevel = () =>{\r\n    let result = validateGrid(levelGrid);\r\n    let vec_aux = [...levelGrid];\r\n    for( let i=0; i< levelGrid.length; i++ ){\r\n      for( let j=0; j < levelGrid[i].length; j++){\r\n        if (vec_aux[i][j].filled){\r\n          vec_aux[i][j].div_color = arrayContains(result.wrongCells, [i,j]) ? COLORS[\"WARNING\"] : COLORS[\"FILLED\"];\r\n        }\r\n        \r\n      }\r\n    }\r\n    setLevelGrid(vec_aux);\r\n    if (result.valid) {\r\n      downloadObjectAsJson(generateJSONFromGrid(levelGrid), \"Driving_Simulator_Custom_Level.json\");\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const onEnterHoverWithClickCell = (row, col) => {\r\n    if(click){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(rightClick){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n  \r\n  const onClickCell = (row, col, btn_click) => {\r\n    if(btn_click === LEFT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(btn_click === RIGHT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        width: WIDTH_GRID_VIEW,\r\n        height: HEIGHT_GRID_VIEW,\r\n        marginTop: 25,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n      onMouseDown = {(event) => {\r\n        event.preventDefault();\r\n        if(event.button === LEFT_CLICK){\r\n          setClick(true);\r\n        }else if (event.button === RIGHT_CLICK){\r\n          setRightClick(true);\r\n        }\r\n      }}\r\n    >\r\n      {levelGrid.map((row, idx_row) => {\r\n        return(\r\n          <div \r\n            className=\"row-level-grid\" \r\n            id={`row_${idx_row}`}\r\n            key={`row_${idx_row}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: HEIGHT_GRID_VIEW/gridDimensions.height,\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            {row.map((cell, idx_col) => {\r\n              return (\r\n                <div \r\n                  className=\"cell-level-grid\" \r\n                  key={`cell_${idx_row}_${idx_col}`}\r\n                  id={`cell_${idx_row}_${idx_col}`} \r\n                  style={{\r\n                    backgroundColor: cell[\"div_color\"],\r\n                    width: `${100/gridDimensions.width}%`,\r\n                    height: \"100%\",\r\n                    border: \"1px solid black\"\r\n                  }} \r\n                  //onMouseEnter = {() => onEnterHoverWithClickCell(idx_row, idx_col)}\r\n                  onMouseMove = {(event) => {\r\n                    event.preventDefault();\r\n                    onEnterHoverWithClickCell(idx_row, idx_col);\r\n                  }}\r\n                  onMouseUp = {(event) => {\r\n                    onClickCell(idx_row, idx_col, event.button);\r\n                  }}\r\n                  \r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:40}}>\r\n        <Button variant=\"contained\" onClick={onSubmitLevel}  color=\"success\">\r\n          <MemoryIcon/> Procesar nivel...\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { ItemsContext } from './LevelEditorContext/ItemsContext';\r\nimport { useState } from 'react';\r\nimport { InputsGrid } from './Components/InputsGrid';\r\n\r\nimport { LevelGrid } from './Components/LevelGrid';\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = useState(false);\r\n  const [openConfigs, setOpenConfigs] = useState(false);\r\n\r\n  const [itemsInGrid, setItemsInGrid] = useState([]);\r\n\r\n  const [lastSelectedItem, setLastSelectedItem] = useState(null);\r\n\r\n  const [gridDimensions, setGridDimensions] = useState({width:20, height:20});\r\n\r\n  React.useEffect(() => {\r\n    if (lastSelectedItem !== null){\r\n      setItemsInGrid(currentItems => [...currentItems, lastSelectedItem]);\r\n    }\r\n  }, [lastSelectedItem]);\r\n\r\n  return (\r\n    <>\r\n      <ItemsContext.Provider value={{lastSelectedItem, setLastSelectedItem}}>\r\n        <div>\r\n          <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n            <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n              <AddIcon/>\r\n            </IconButton>\r\n            <h1>Driving Simulator - Level Editor</h1>\r\n            <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n              <InputsGrid setGridDimensions={setGridDimensions} gridDimensions={gridDimensions}></InputsGrid>\r\n              <LevelGrid gridDimensions = {gridDimensions}/>\r\n              {itemsInGrid.map((item, idx) => {\r\n                return(\r\n                  <span key={idx}></span>\r\n                  /*<img \r\n                    key={idx} \r\n                    src={`${item.selectedItem}.png`} \r\n                    width={item.scale*75} \r\n                    height={item.scale*75} \r\n                    style={{\r\n                      top:item.positionY, \r\n                      left:item.positionX,\r\n                      position: \"absolute\",\r\n                      zIndex: item.zIndex.toString()\r\n                    }}\r\n                    onClick={() => {console.log(`OPEN CONFIGS OF idx: ${idx}, obj: ${JSON.stringify(itemsInGrid[idx])}`)}}\r\n                  />*/\r\n                );\r\n              })}\r\n          </div>\r\n          \r\n        </div>\r\n        <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n        <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n      </ItemsContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","//export const API_URL = \"https://backend-bata340.cloud.okteto.net\";\r\nexport const API_URL = \"http://localhost:8001\";\r\nexport const VALID_REGEX_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;","import { createContext } from \"react\";\r\n\r\nexport const SessionContext  = createContext(undefined);","\r\nconst { createHash } = require('crypto');\r\n\r\nexport const hash = (string) => {\r\n  return createHash('sha256').update(string).digest('hex');\r\n}","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants'\r\nimport { SessionHooks } from '../Sessions/SessionHooks';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const LoginForm = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const { setSessionWithResponse } = SessionHooks();\r\n\r\n  const postLogin = async () => {\r\n    try{\r\n        const APIResponse = await fetch(\r\n            `${API_URL}/users/login`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": hash(password)\r\n                })\r\n            }\r\n        );\r\n        if (APIResponse.status !== 200){\r\n            const json = await APIResponse.json();\r\n            const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n            let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n            throw new Error(error_msg);\r\n        }\r\n        return APIResponse.json();\r\n    }catch(e){\r\n        throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  const validateFields = () => {\r\n    const errors = []\r\n    if (password === \"\"){\r\n        errors.push(\"El campo contraseña se encuentra vacío.\");\r\n    }\r\n    if (email === \"\"){\r\n        errors.push(\"El campo email se encuentra vacío\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n        errors.push(\"El email establecido es inválido.\");\r\n      }\r\n    if(errors.length > 0){\r\n        setError(errors);\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n  }\r\n\r\n\r\n  const submitLogin = async (event) => {\r\n    event.preventDefault();\r\n    if(!validateFields()){\r\n        return;\r\n    }\r\n    try{\r\n        const loginResponse = await postLogin();\r\n        setSessionWithResponse(loginResponse);\r\n        /*TODO: DAR UN FEEDBACK DE SESION INICIADA CORRECTAMENTE ANTES DE REDIR*/\r\n        navigate(\"/\");\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n\r\n  const postLoginGoogle = async (token) => {\r\n    const APIResponse = await fetch(\r\n        `${API_URL}/users/login_google`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"token\": token\r\n            })\r\n        }\r\n    );\r\n    if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n    }\r\n    return APIResponse.json();\r\n  }\r\n\r\n  const submitGoogleLogin = async (token) => {\r\n    try{\r\n        const responseAPI = await postLoginGoogle(token);\r\n        setSessionWithResponse(responseAPI);\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitLogin}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Iniciar Sesión</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type=\"text\" \r\n                    onChange={(event) => setEmail(event.target.value)} \r\n                    value={email} \r\n                    name=\"email\"\r\n                    label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPassword(event.target.value)} \r\n                    value={password} \r\n                    name=\"password\"\r\n                    label=\"Contraseña\"\r\n                    InputProps={{ // <-- This is where the toggle button is added.\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">Iniciar Sesión</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/signup\"}>¿No posees una cuenta? Registrate aquí...</Link>\r\n            </div>\r\n            <div style={{marginTop:20, display:\"flex\", justifyContent:\"center\", textAlign:\"center\", alignContent:\"center\"}}>\r\n                <GoogleLogin\r\n                    onSuccess={credentialResponse => {\r\n                        const OAuthToken = credentialResponse.credential;\r\n                        submitGoogleLogin(OAuthToken);\r\n                    }}\r\n                    onError={() => {\r\n                        setError(['El inicio de sesión con Google ha fallado.']);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n","import { useContext } from 'react';\r\nimport { SessionContext } from './SessionContext';\r\n\r\nexport const SessionHooks = () => {\r\n  \r\n    const { session, setSession } = useContext(SessionContext);\r\n\r\n\r\n    const setSessionWithResponse = (loginResponse) => {\r\n        setSession({\r\n            user: loginResponse.user,\r\n            jwt: loginResponse.jwt\r\n        });\r\n    }\r\n\r\n    const getUser = () => {\r\n        return session.user ? session.user : undefined;\r\n    }\r\n\r\n    const getJWT = () => {\r\n        return session.jwt ? session.jwt : undefined;\r\n    }\r\n\r\n    return({\r\n        setSessionWithResponse,\r\n        getUser,\r\n        getJWT\r\n    })\r\n}\r\n","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\n\r\n\r\nexport const SignUpForm = () => {\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState(\"\");\r\n  const [nameToShow, setNameToShow] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const validateFields = () => {\r\n    const errorArray = [];\r\n    if (email === \"\" || password === \"\" || passwordConfirmation === \"\" || nameToShow === \"\"){\r\n      errorArray.push(\"Aún existen campos sin completar.\")\r\n    }\r\n    if (password !== passwordConfirmation){\r\n      errorArray.push(\"Las contraseñas establecidas no coinciden.\");\r\n    }\r\n    if (password.length < 8){\r\n      errorArray.push(\"La contraseña debe tener una longitud mínima de 8 caracteres.\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n      errorArray.push(\"El email establecido es inválido.\");\r\n    }\r\n    if(errorArray.length > 0){\r\n      setError(errorArray);\r\n      return false;\r\n    }else{\r\n      setError(undefined);\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  const postSignUp = async () => {\r\n    const fetchUrl = `${API_URL}/users/register`;\r\n    try{\r\n      const APIResponse = await fetch(\r\n        fetchUrl,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n              \"email\": email,\r\n              \"password\": hash(password),\r\n              \"name_to_show\": nameToShow\r\n          })\r\n        }\r\n      );\r\n      if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      return APIResponse.json();\r\n  }catch(e){\r\n      throw new Error(e);\r\n  }\r\n  }\r\n\r\n\r\n  const submitSignUp = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateFields()){\r\n      return;\r\n    }\r\n    // eslint-disable-next-line\r\n    const res = await postSignUp();\r\n    /*TODO: Mostrar dialog de creado exitoso, y despues mandarlo al login...*/\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitSignUp}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Crea tu cuenta</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setEmail(event.target.value)} \r\n                  value={email} \r\n                  name=\"email\"\r\n                  label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setNameToShow(event.target.value)} \r\n                  value={nameToShow} \r\n                  name=\"username\"\r\n                  label=\"Nombre para mostrar\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  onChange={(event) => setPassword(event.target.value)} \r\n                  value={password} \r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPasswordConfirmation(event.target.value)} \r\n                    value={passwordConfirmation} \r\n                    name=\"passwordConfirmation\"\r\n                    label=\"Repetir Contraseña\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">CREAR CUENTA</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/login\"}>¿Ya poses una cuenta? Inicia sesión...</Link>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n","import { SessionContext } from \"./SessionContext\";\r\nimport { useState } from 'react'\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nexport const SessionProvider = ( {childElement} ) => {\r\n  \r\n    const [session, setSession] = useState({\r\n        user: undefined,\r\n        jwt: undefined\r\n    });\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"18785041157-s9ga39r0i6up45radtj3soo6je1pneon.apps.googleusercontent.com\">\r\n            <SessionContext.Provider value={{session, setSession}}>\r\n                {childElement}\r\n            </SessionContext.Provider>\r\n        </GoogleOAuthProvider>\r\n    )\r\n}\r\n","import ThreeScene from \"./Scene/ThreeScene\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MainMenu } from \"./Menus/MainMenu\";\r\nimport { LevelEditor } from \"./Menus/LevelEditor\";\r\nimport {\r\n  HashRouter as Router,\r\n  Routes as Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { LoginForm } from \"./Menus/Components/LoginForm\";\r\nimport { SignUpForm } from \"./Menus/Components/SignUpForm\";\r\nimport { SessionProvider } from \"./Menus/Sessions/SessionProvider\";\r\n\r\nfunction App() {\r\n  const [json, setJson] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Driving Simulator\";\r\n    fetch(\"./invert.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setJson(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <SessionProvider\r\n      childElement={\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/scene\" element={json && <ThreeScene jsonLevel={json} />} />\r\n            <Route exact path=\"/\" element={<MainMenu />} />\r\n            <Route exact path=\"/level-editor\" element={<LevelEditor />} />\r\n            <Route exact path=\"/login\" element={<LoginForm />} />\r\n            <Route exact path=\"/signup\" element={<SignUpForm />} />\r\n          </Switch>\r\n        </Router>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n\r\n"],"sourceRoot":""}