{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/Models.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","3DModels/StraightStreet.js","3DModels/Intersection.js","Levels/LevelsFactory.js","addons/VRbutton.js","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/LevelEditorContext/ItemsContext.jsx","Menus/Components/ItemsDrawer.jsx","Menus/Components/InputsGrid.jsx","Menus/Resources/Street/AbstractStreet.js","Menus/Resources/Street/Curve.js","Menus/Resources/Street/StraightStreet.js","Menus/Resources/Street/TStreet.js","Menus/Resources/Street/StraightStreetLinker.js","Menus/Resources/StreetFactory.js","Menus/Resources/Street/Intersection.js","Menus/Resources/LevelEditor.js","Menus/Components/LevelGrid.jsx","Menus/LevelEditor.jsx","Menus/Constants/Constants.js","Menus/Sessions/SessionContext.jsx","Menus/Resources/Hasher.js","Menus/Components/LoginForm.jsx","Menus/Sessions/SessionHooks.jsx","Menus/Components/SignUpForm.jsx","Menus/Sessions/SessionProvider.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","constructor","car","this","handleAccelerate","valueClutch","valueAccelerator","accelerate","handleBrake","valueBrake","brake","changeShift","valueShift","turnDirection","wheelAxesValue","turnOnCar","updateCar","update","changeShiftBox","mode","Observer","observedState","newState","Camera","renderer","super","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","handleResize","aspect","updateProjectionMatrix","setPositionRelativeToObject","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","rotationQuat","x","y","z","w","normalize","quaternion","getCameraInstance","addContainerToScene","scene","CarOffsetCamera","positionCamera","cameraOffsetRotated","positionToLookAt","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","async","loadAsync","threeDObject","objectName","scale","modelVariable","loadFBX","e","loadGLTF","name","getModel","animate","ModelsSingleton","carModel","building_1","building_2","building_3","building_4","changeMaterialsToBasic","children","i","length","child","isGroup","isMesh","material","pathToTextureRcvd","result","Models","static","loadModels","Error","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","generateRetrovisor","plane","retrovisor","Reflector","textureWidth","textureHeight","clipBias","multisample","rotateX","rotateY","generateLeftMirror","leftMirrorGeometry","leftMirror","container","Object3D","generateRightMirror","rightMirrorGeometry","rightMirror","generateMirrors","models","getInstance","moveCar","addPhysicsView","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","watchPhysicsColliders","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorTwo","rotationYVectorOne","default","require","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","checkEvents","doActionByMapping","doActionsPedals","axes","doActionsWheel","doActionsDPad","doActionsButtons","buttons","pressed","doActionsShifter","LogitechG29ControllerSingleton","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","doActionsAxes","axe","doActionHotKeys","value","doActionsTriggers","XboxControllerSingleton","Observable","observers","attachObserver","observer","removeObserver","index","indexOf","splice","notifyObservers","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","width","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","updatePhysics","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","getRigidBody","setEngineForce","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringRotation","setSteeringValue","getVelocity","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","changeValueInRPMCurve","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","TurnedOnEngine","CarEngine","engineState","turnOn","clutchIsPressed","handleEngineShutdown","shiftBox","shutDownEngine","isInConditionToAccelerate","engineCanApplyForce","rpmReturn","changeRPM","RPMModification","log","getCurrentRPM","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","isValidShift","shift","calculateNormalFactorRPM","newShift","oldVelocity","getValueForNewRPM","normalFactorRPM","XValue","getEngineForce","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactor","getCurrentShift","ManualBox","SemiAutomaticBox","Car","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","buildAmmoPhysics","turnOnRightLight","turnOnLeftLight","positionAndRotation","getDataToAnimate","getLastRotation","getSpeed","GeneralPhysics","generateShape","setMargin","getMotionState","getWorldTransform","setLinearVelocity","velocityVector","velVectorBT","applyForce","BoxPhysics","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","undefined","load","map","materialBox","geometryPlane","box","cone","CylinderPhysics","btCylinderShape","StraightStreet","pathToNormalMap","SIZE","SIDEWALK_HEIGHT","createSidewalkMesh","wrapS","wrapT","repeat","materialSidewalk","geometrySidewalk","createStreetMesh","clone","iter","model3D","loadBuildingBlock","parseInt","random","LONG","updateMatrix","updateMatrixWorld","matrixAutoUpdate","secondModel3D","baseStreet","leftSidewalk","rightSidewalk","createBuildings","Intersection","SQUARE_SIZE","getLerpPoints","vec1","vec2","quantPoints","points","createSidewalkCurve","initialPoint","lerpPoints","pointsCurve","getPoints","secondLerpPoints","thirdLerpPoints","fourthLerpPoints","getGeometrySidewalk","geom","columnas","aux_vertices","indexes","uv1","uv2","uv3","accum_x","accum_z","uv","vertex","filas","j","vertexArr","Float32Array","uvArr","setIndex","setAttribute","sidewalk","LevelFactory","physicsToUpdate","objectsToAnimate","forEach","phys","object","height","pathTexture","normalMapPath","arguments","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","ramp","addToScene","conePhysics","street","streetPhysics","leftSidewalkPhysics","rightSidewalkPhysics","segmentsQuantity","buildStreetPhysics","intersection","createRectangle","createCone","createStreet","createIntersection","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","opacity","outline","zIndex","xr","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","sessionInit","optionalFeatures","requestSession","setItem","end","showEnterVR","xrSessionIsGranted","click","catch","exception","console","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","ThreeScene","Component","state","gotAnyEvent","stats","Stats","alpha","powerPreference","antialias","setSize","setClearColor","showPanel","body","appendChild","dom","clock","createAmmo","ambientLight","level","createLevelCustom","animation","bind","handleWindowResize","generateEvents","setPixelRatio","devicePixelRatio","enabled","setFramebufferScaleFactor","mount","createButton","setAnimationLoop","removeInstance","event","numCamera","key","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","render","begin","deltaTime","getDelta","stepSimulation","setState","_jsxs","_jsx","top","right","fontWeight","ref","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","MainMenu","navigate","useNavigate","_Fragment","className","fontSize","onClick","ConfigDrawer","_ref","openConfigs","handleDrawerClose","open","setOpen","React","useState","useEffect","DrawerHeader","styled","_ref2","theme","alignItems","spacing","mixins","toolbar","justifyContent","Grid","Drawer","sx","flexShrink","boxSizing","variant","anchor","ChevronRightIcon","paddingRight","Divider","ItemsContext","createContext","allUnselected","ItemsDrawer","openItems","setLastSelectedItem","lastSelectedItem","useContext","itemSelected","setItemSelected","paddingLeft","ChevronLeftIcon","flexDirection","Object","entries","_ref3","nameItem","isSelected","alt","src","item","dictSelection","selectedItem","positionX","positionY","handleSelection","InputsGrid","setGridDimensions","gridDimensions","InputWidth","setInputWidth","InputHeight","setInputHeight","direction","marginLeft","xs","type","step","onChange","target","replaceAll","Button","onSubmit","STANDARD_BOX_LONG","AbstractStreet","ninePerNineGrid","rowIndex","columnIndex","rightFilled","filled","topFilled","botFilled","leftFilled","determineStreetRotation","long","cell","rowCount","columnCount","sumValueForCell","isStraight","getAsJSON","getPositionAsRowAndColumn","getPositionX","getPositionY","getLongX","getLongY","POSSIBLE_ROTATIONS","StraightStreetLinker","arrayOfStreets","sections","segregateSections","sectionsAsJSON","linkSections","rows","cols","sectionsArray","streetRow","streetCol","isHorizontal","generateArraySubsections","array","finalArray","sectionsJSON","jsonForStreet","reduce","acum","elem","getSectionsAsJSON","TYPES_OF_STREETS","calculateNeighboursFilled","bot","dict","StreetFactory","levelGrid","isInfiniteLevel","getNinePerNineGrid","getNinePerNineGridInfinite","getNinePerNineGridFinite","constructStreets","straightStreetsArray","curvedStreetsArray","streetObject","defineTypeOfStreet","conjunctedStraightStreets","linkStraightStreets","indexRow","indexColumn","matrix","rowArray","realRow","realColumn","celda_vacia","row","column","typeResult","typeDefined","isValidNinePerNineGrid","getCountSidesPainted","aux","validateGrid","isInfinite","validateGridInfinite","valid","wrongCells","validateGridNotInfinite","COLORS","LevelGrid","setLevelGrid","setClick","rightClick","setRightClick","finalGrid","currentRow","newCell","preventDefault","arrayContains","insiderArray","equals","exc","marginTop","marginRight","onMouseDown","idx_row","idx_col","backgroundColor","onMouseMove","onEnterHoverWithClickCell","col","levelGridCopy","div_color","onMouseUp","onClickCell","btn_click","onSubmitLevel","vec_aux","exportObj","exportName","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","remove","downloadObjectAsJson","generateJSONFromGrid","MemoryIcon","LevelEditor","setOpenItems","setOpenConfigs","itemsInGrid","setItemsInGrid","currentItems","Provider","IconButton","margin","AddIcon","SettingsIcon","idx","API_URL","VALID_REGEX_EMAIL","SessionContext","createHash","hash","string","digest","LoginForm","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","setSessionWithResponse","SessionHooks","loginResponse","user","jwt","getUser","getJWT","submitGoogleLogin","responseAPI","APIResponse","fetch","method","headers","token","status","json","endMSG","detail","msg","error_msg","statusText","postLoginGoogle","toString","validateFields","errors","match","postLogin","alignContent","maxWidth","Alert","severity","onClose","listerror","TextField","label","InputProps","endAdornment","InputAdornment","handleClickShowPassword","Visibility","VisibilityOff","Link","to","GoogleLogin","onSuccess","credentialResponse","OAuthToken","credential","onError","SignUpForm","passwordConfirmation","setPasswordConfirmation","nameToShow","setNameToShow","errorArray","res","fetchUrl","postSignUp","SessionProvider","childElement","GoogleOAuthProvider","clientId","App","title","Router","Switch","Route","exact","path","ReactDOM","createRoot","getElementById"],"mappings":";sIAAA,+CAAe,MAAMA,EAGjBC,YAAYC,GACRC,KAAKD,IAAMA,CACf,CAGAE,iBAAiBC,EAAaC,GAC1BH,KAAKD,IAAIK,WAAWF,EAAaC,EACrC,CAGAE,YAAYH,EAAaI,GACrBN,KAAKD,IAAIQ,MAAML,EAAaI,EAChC,CAGAE,YAAYN,EAAaO,GACrBT,KAAKD,IAAIS,YAAYN,EAAaO,EACtC,CAGAC,cAAcC,GACVX,KAAKD,IAAIW,cAAcC,EAC3B,CAGAC,YACIZ,KAAKD,IAAIa,WACb,CAGAC,YACIb,KAAKD,IAAIe,QACb,CAGAC,eAAeC,GACXhB,KAAKD,IAAIgB,eAAeC,EAC5B,E,8YCvCW,MAAMC,EAEjBnB,cACIE,KAAKkB,cAAgB,IACzB,CAEAJ,OAAOK,GACHnB,KAAKkB,cAAgBC,CACzB,ECFW,MAAMC,UAAeH,EAGhCnB,YAAYuB,GACRC,QACAtB,KAAKuB,OAAS,IAAIC,KAAyB,GAAIC,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KAC5F3B,KAAK4B,MAAS,IAAIJ,KAClBxB,KAAK6B,aAAc,IAAIL,MAAiBM,IAAI9B,KAAKuB,QACjDvB,KAAK4B,MAAME,IAAI9B,KAAK6B,aACpB7B,KAAKqB,SAAWA,CACpB,CAGAU,eACI/B,KAAKuB,OAAOS,OAASP,OAAOC,WAAWD,OAAOE,YAC9C3B,KAAKuB,OAAOU,wBAChB,CAGAC,8BACI,MAAMC,EAAe,IAAIC,KArBd,GAFA,IACA,IAuBX,GAAyB,MAAtBpC,KAAKkB,cAIJ,GAHAiB,EAAaE,gBAAgBrC,KAAKkB,cAAcoB,UAChDtC,KAAK4B,MAAMW,SAASC,KAAKxC,KAAKkB,cAAcqB,UAAUT,IAAIK,GAEvB,SAA/BM,aAAaC,QAAQ,MAAiB,CACtC,IAAIC,EAAqB,IAAIP,KAAQ,GAAG,KAAK,GAC7CO,EAAmBN,gBAAgBrC,KAAKkB,cAAcoB,UACtDtC,KAAK4B,MAAMW,SAAST,IAAIa,GACxB3C,KAAK4B,MAAMgB,0BAA0B5C,KAAKkB,cAAcoB,UACxDtC,KAAK6B,YAAYgB,yBAAyB,IAAIT,KAAQ,EAAE,EAAE,GAAIU,KAAKC,IACnE/C,KAAKuB,OAAOyB,OAAO,IAAIZ,KAAQ,EAAE,EAAE,GACvC,KAAK,CACD,MAAMa,EAAe,IAAIzB,KAAiBxB,KAAKkB,cAAcoB,SAASY,EAAGlD,KAAKkB,cAAcoB,SAASa,EAAGnD,KAAKkB,cAAcoB,SAASc,EAAGpD,KAAKkB,cAAcoB,SAASe,GAAGC,YACtKtD,KAAK6B,YAAYgB,yBAAyB,IAAIT,KAAQ,EAAE,EAAE,IAAK,EAAEU,KAAKC,GAAG,KACzE/C,KAAK4B,MAAM2B,WAAWf,KAAKS,EAC/B,MAEAjD,KAAKuB,OAAOyB,OAAO,IAAIZ,KAAQ,EAAE,EAAE,GAE3C,CAGAoB,oBACI,OAAOxD,KAAKuB,MAChB,CAGAkC,oBAAoBC,GAChBA,EAAM5B,IAAI9B,KAAK4B,MACnB,ECnDW,MAAM+B,UAAwB1C,EAGzCnB,YAAY8D,GACRtC,QACAtB,KAAK4D,eAAiBA,EACtB5D,KAAKuB,OAAS,IAAIC,KAAyB,GAAIC,OAAOC,WAAaD,OAAOE,YAAa,GAAK,IAChG,CAGAI,eACI/B,KAAKuB,OAAOS,OAASP,OAAOC,WAAWD,OAAOE,YAC9C3B,KAAKuB,OAAOU,wBAChB,CAGAC,8BACI,MAAMC,EAAe,IAAIC,KAAQpC,KAAK4D,eAAeV,EAAGlD,KAAK4D,eAAeT,EAAGnD,KAAK4D,eAAeR,GACnG,GAAyB,MAAtBpD,KAAKkB,cAAsB,CAC1B,IAAI2C,EAAsB1B,EAAaE,gBAAgBrC,KAAKkB,cAAcoB,UAC1EtC,KAAKuB,OAAOgB,SAASC,KAAKxC,KAAKkB,cAAcqB,UAAUT,IAAI+B,GAC3D,IAAIC,EAAmB,IAAI1B,KAAQpC,KAAKkB,cAAcqB,SAASW,EAAGlD,KAAKkB,cAAcqB,SAASY,EAAGnD,KAAKkB,cAAcqB,SAASa,GAC7HpD,KAAKuB,OAAOyB,OAAOc,EACvB,MACI9D,KAAKuB,OAAOyB,OAAO,IAAIZ,KAAQ,EAAE,EAAE,IACnCpC,KAAKuB,OAAOgB,SAASC,KAAKL,EAElC,CAGAqB,oBACI,OAAOxD,KAAKuB,MAChB,E,aChCW,MAAMwC,UAAsB9C,EAEvCnB,YAAYuB,GACRC,QACAtB,KAAKuB,OAAS,IAAIC,KAAyB,GAAIC,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KAC5F3B,KAAKqB,SAAWA,EAChBrB,KAAKgE,SAAW,IAAIC,IAAcjE,KAAKuB,OAAQvB,KAAKqB,SAAS6C,YAC7DlE,KAAKgE,SAASG,eAAgB,EAC9BnE,KAAKgE,SAASI,cAAgB,IAC9BpE,KAAKgE,SAASK,YAAa,EAC3BrE,KAAKuB,OAAOgB,SAAS+B,IAAI,EAAE,IAAI,EACnC,CAEAvC,eACI/B,KAAKuB,OAAOS,OAASP,OAAOC,WAAWD,OAAOE,YAC9C3B,KAAKuB,OAAOU,wBAChB,CAEAuB,oBACI,OAAOxD,KAAKuB,MAChB,CAEAW,8BACIlC,KAAKgE,SAASlD,SACW,MAAtBd,KAAKkB,cACJlB,KAAKuB,OAAOyB,OAAOhD,KAAKkB,cAAwB,UAEhDlB,KAAKuB,OAAOyB,OAAO,IAAIZ,KAAQ,EAAE,EAAE,GAE3C,E,qBC/BW,MAAMmC,UAAqBtD,EAEtCnB,YAAY0E,GACRlD,QACAtB,KAAKyE,UAAY,IAAIC,IACrB1E,KAAK2E,WAAa,IAAIC,IACtB5E,KAAK6E,YAAc,KACnB7E,KAAKwE,cAAgBA,CACzB,CAEAM,gBACI,IAAIN,EAAgBxE,KAAKwE,cAOzB,aANqBxE,KAAKyE,UAAUM,UAChCP,GACA,SAAWQ,GACP,OAAOA,CACX,GAIR,CAEAF,iBACI,IAAIN,EAAgBxE,KAAKwE,cAOzB,aANqBxE,KAAK2E,WAAWI,UACjCP,GACA,SAAWQ,GACP,OAAOA,CACX,GAIR,CAEAF,iBAAiBpB,EAAOuB,EAAY1C,EAAU2C,GAC1C,IAAIlF,KAAK6E,YAAY,CACjB,IAAIM,EACJ,IACIA,QAAuBnF,KAAKoF,UAC5BpF,KAAK6E,YAAcM,CACvB,CAAC,MAAME,GACHF,QAAuBnF,KAAKsF,WAC5BtF,KAAK6E,YAAcM,EAAczB,KACrC,CACA1D,KAAK6E,YAAYU,KAAON,EACxBjF,KAAK6E,YAAYtC,SAASW,EAAIX,EAAS,GACvCvC,KAAK6E,YAAYtC,SAASY,EAAIZ,EAAS,GACvCvC,KAAK6E,YAAYtC,SAASa,EAAIb,EAAS,GACvCvC,KAAK6E,YAAYK,MAAMhC,EAAIgC,EAAM,GACjClF,KAAK6E,YAAYK,MAAM/B,EAAI+B,EAAM,GACjClF,KAAK6E,YAAYK,MAAM9B,EAAI8B,EAAM,GACjCxB,EAAM5B,IAAI9B,KAAK6E,YACnB,CACA,OAAO7E,IACX,CAEAwF,WACI,OAAOxF,KAAK6E,WAChB,CAGAY,UACI,OAAO,IACX,E,YChEJ,MAAMC,EAEF5F,cACIE,KAAK2E,WAAa,IAAIC,IACtB5E,KAAK2F,SAAW,KAChB3F,KAAK4F,WAAa,KAClB5F,KAAK6F,WAAa,KAClB7F,KAAK8F,WAAa,KAClB9F,KAAK+F,WAAa,IACtB,CAGAC,uBAAuBC,GACnB,IAAK,IAAIC,EAAE,EAAGA,EAAID,EAASE,OAAQD,IAAK,CACpC,MAAME,EAAQH,EAASC,GAEpBE,EAAMC,QACLrG,KAAKgG,uBAAuBI,EAAMH,UAC7BG,EAAME,SACXF,EAAMG,UAAW,IAAI/E,KAA0BgB,KAAK4D,EAAMG,UAGlE,CACJ,CAGAzB,eAAe0B,GACX,IAAIhC,EAAgBgC,EACpB,MAAMC,QAAezG,KAAK2E,WAAWI,UACjCP,GACA,SAAWQ,GACP,OAAOA,CACX,IAGJ,OADAhF,KAAKgG,uBAAuBS,EAAO/C,MAAMuC,UAClCQ,EAAO/C,KAClB,CAEAoB,mBAMI,OALA9E,KAAK2F,SAAW3F,KAAKsF,SAAS,kCAC9BtF,KAAK4F,WAAa5F,KAAKsF,SAAS,8CAChCtF,KAAK6F,WAAa7F,KAAKsF,SAAS,8CAChCtF,KAAK8F,WAAa9F,KAAKsF,SAAS,8CAChCtF,KAAK+F,WAAa/F,KAAKsF,SAAS,8CACzB,IACX,EAKW,MAAMoB,EAIjBC,2BACI,GAAKD,EAAOhB,gBASR,OAAOgB,EAAOhB,gBANd,GAFAgB,EAAOhB,gBAAkB,IAAIA,EAEjB,aADIgB,EAAOhB,gBAAgBkB,aAEnC,OAAOF,EAAOhB,gBAEd,MAAM,IAAImB,MAAM,+BAM5B,EC/DJ,MAAMC,EAAQ,CAAC,EAAK,EAAK,GACnBC,EAAW,CAAC,EAAE,EAAE,GAChBC,EAAwB,IACxBC,EAAmB,EAAE,KAOZ,MAAMC,UAAiB3C,EAGlCzE,cAEIwB,MAAM,kCACNtB,KAAK2F,SAAW,KAChB3F,KAAKmH,SAAW,KAChBnH,KAAKoH,kBAAoB,EACzBpH,KAAKqH,qBAAuB,EAC5BrH,KAAKsH,qBAAuB,EAC5BtH,KAAKuH,qBAAuB,EAC5BvH,KAAKwH,qBAAuB,EAC5BxH,KAAKyH,gBAAkB,CAC3B,CAGAC,qBAII,MAAMC,EAAQ,IAAInG,KAAoB,KAAO,MACvCoG,EAAa,IAAIC,IACnBF,EAEA,CACIG,aAAcrG,OAAOC,WACrBqG,cAAetG,OAAOE,YACtBqG,SAAU,IACVC,YAAa,IAGrBL,EAAWM,QAASpF,KAAKC,GAAG,KAC5B6E,EAAWO,QAAS,KACpBP,EAAWrF,SAAS+B,IAAI,KAAM,KAAM,KACpCtE,KAAK6E,YAAY/C,IAAI8F,EACzB,CAGAQ,qBACI,MAAMC,EAAqB,IAAI7G,KAAoB,IAAM,IACnD8G,EAAa,IAAIT,IACnBQ,EACA,CACIP,aAAcrG,OAAOC,WACrBqG,cAAetG,OAAOE,YACtBqG,SAAU,EACVC,YAAa,IAGrB,IAAIM,EAAY,IAAIC,KACpBD,EAAUzG,IAAIwG,GACdC,EAAUhG,SAAS+B,IAAI,IAAM,KAAO,KACpCiE,EAAUL,QAAiB,IAARpF,KAAKC,IACxBuF,EAAWH,SAAS,GAAGrF,KAAKC,GAAG,KAC/B/C,KAAK6E,YAAY/C,IAAIyG,EACzB,CAGAE,sBACI,MAAMC,EAAsB,IAAIlH,KAAoB,IAAM,IACpDmH,EAAc,IAAId,IACpBa,EACA,CACIZ,aAAcrG,OAAOC,WACrBqG,cAAetG,OAAOE,YACtBqG,SAAU,EACVC,YAAa,IAGrB,IAAIM,EAAY,IAAIC,KACpBD,EAAUzG,IAAI6G,GACdJ,EAAUhG,SAAS+B,KAAK,IAAM,KAAO,KACrCiE,EAAUL,QAAiB,GAARpF,KAAKC,IACxB4F,EAAYR,QAAQ,GAAGrF,KAAKC,GAAG,KAC/B/C,KAAK6E,YAAY/C,IAAIyG,EACzB,CAGAK,kBACI5I,KAAK0H,qBACL1H,KAAKoI,qBACLpI,KAAKyI,qBACT,CAEA3D,iBAAiBpB,GACb,MAAMmF,QAAenC,EAAOoC,cAW5B,OAVA9I,KAAK6E,kBAAoBgE,EAAOlD,SAChC3F,KAAK6E,YAAYU,KAAO,YACxBvF,KAAK6E,YAAYtC,SAASW,EAAI6D,EAAS,GACvC/G,KAAK6E,YAAYtC,SAASY,EAAI4D,EAAS,GACvC/G,KAAK6E,YAAYtC,SAASa,EAAI2D,EAAS,GACvC/G,KAAK6E,YAAYK,MAAMhC,EAAI4D,EAAM,GACjC9G,KAAK6E,YAAYK,MAAM/B,EAAI2D,EAAM,GACjC9G,KAAK6E,YAAYK,MAAM9B,EAAI0D,EAAM,GACjCpD,EAAM5B,IAAI9B,KAAK6E,aACf7E,KAAK4I,kBACE5I,IACX,CAGAyF,UACIzF,KAAK+I,SAET,CAGAC,eAAetF,GACX1D,KAAKiJ,aAAe,IAAI7G,KAAQ,EAAE,KAAK,GAEvC,MAAM8G,EAAW,IAAI1H,IAAmBxB,KAAKiJ,aAAa/F,EAAGlD,KAAKiJ,aAAa9F,EAAGnD,KAAKiJ,aAAa7F,GAC9F+F,EAAU,IAAI3H,IAAyB,CAAC4H,MAAO,MACrDpJ,KAAKqJ,cAAgB,IAAI7H,IAAY0H,EAAUC,GAC/CnJ,KAAKqJ,cAAc9G,SAAS+B,IAAK,EAAE,EAAE,GACrCZ,EAAM5B,IAAI9B,KAAKqJ,eAEf,MAAMC,EAAgB,IAAI9H,IAAwB,IAAM,IAAM,IAAM,GAAI,IACxE8H,EAAcC,QAAQzG,KAAKC,GAAK,GAChC,MAAMyG,EAAe,IAAIhI,IAAyB,CAAC4H,MAAO,WAC1DpJ,KAAKyJ,WAAc,IAAIjI,IAAY8H,EAAeE,GAClDxJ,KAAKyJ,WAAWlH,SAAS+B,IAAK,EAAE,EAAE,GAClCZ,EAAM5B,IAAI9B,KAAKyJ,YAEfzJ,KAAK0J,WAAc,IAAIlI,IAAY8H,EAAeE,GAClDxJ,KAAK0J,WAAWnH,SAAS+B,IAAK,EAAE,EAAE,GAClCZ,EAAM5B,IAAI9B,KAAK0J,YAEf1J,KAAK2J,WAAc,IAAInI,IAAY8H,EAAeE,GAClDxJ,KAAK2J,WAAWpH,SAAS+B,IAAK,EAAE,EAAE,GAClCZ,EAAM5B,IAAI9B,KAAK2J,YAEf3J,KAAK4J,WAAc,IAAIpI,IAAY8H,EAAeE,GAClDxJ,KAAK4J,WAAWrH,SAAS+B,IAAK,EAAE,EAAE,GAClCZ,EAAM5B,IAAI9B,KAAK4J,WACnB,CAGAC,wBAE6B,MAAtB7J,KAAKkB,gBACJlB,KAAKqJ,cAAc9G,SAAS+B,IACxBtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,GAEnCpD,KAAKqJ,cAAc9F,WAAWe,IAC1BtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,EAC/BpD,KAAKkB,cAAwB,SAAEmC,GAGnCrD,KAAKyJ,WAAWlH,SAAS+B,IACrBtE,KAAKkB,cAAc4I,WAAW,GAAa,SAAE5G,EAC7ClD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE3G,EAC7CnD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE1G,GAEjDpD,KAAKyJ,WAAWlG,WAAWe,IACvBtE,KAAKkB,cAAc4I,WAAW,GAAa,SAAE5G,EAC7ClD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE3G,EAC7CnD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE1G,EAC7CpD,KAAKkB,cAAc4I,WAAW,GAAa,SAAEzG,GAGjDrD,KAAK0J,WAAWnH,SAAS+B,IACrBtE,KAAKkB,cAAc4I,WAAW,GAAa,SAAE5G,EAC7ClD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE3G,EAC7CnD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE1G,GAEjDpD,KAAK0J,WAAWnG,WAAWe,IACvBtE,KAAKkB,cAAc4I,WAAW,GAAa,SAAE5G,EAC7ClD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE3G,EAC7CnD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE1G,EAC7CpD,KAAKkB,cAAc4I,WAAW,GAAa,SAAEzG,GAGjDrD,KAAK2J,WAAWpH,SAAS+B,IACrBtE,KAAKkB,cAAc4I,WAAW,GAAa,SAAE5G,EAC7ClD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE3G,EAC7CnD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE1G,GAEjDpD,KAAK2J,WAAWpG,WAAWe,IACvBtE,KAAKkB,cAAc4I,WAAW,GAAa,SAAE5G,EAC7ClD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE3G,EAC7CnD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE1G,EAC7CpD,KAAKkB,cAAc4I,WAAW,GAAa,SAAEzG,GAGjDrD,KAAK4J,WAAWrH,SAAS+B,IACrBtE,KAAKkB,cAAc4I,WAAW,GAAa,SAAE5G,EAC7ClD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE3G,EAC7CnD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE1G,GAEjDpD,KAAK4J,WAAWrG,WAAWe,IACvBtE,KAAKkB,cAAc4I,WAAW,GAAa,SAAE5G,EAC7ClD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE3G,EAC7CnD,KAAKkB,cAAc4I,WAAW,GAAa,SAAE1G,EAC7CpD,KAAKkB,cAAc4I,WAAW,GAAa,SAAEzG,GAGzD,CAGA0F,UAC6B,MAAtB/I,KAAKkB,gBACJlB,KAAK6E,YAAYkF,SAASC,YAAchK,KAAKkB,cAA2B,YACxElB,KAAK6E,YAAYtC,SAAS+B,IACtBtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,GAGnCpD,KAAK6E,YAAYtB,WAAWe,IACxBtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,EAC/BpD,KAAKkB,cAAwB,SAAEmC,GAEnCrD,KAAKoH,kBAAoBpH,KAAKkB,cAAyB,UACvDlB,KAAKiK,eACLjK,KAAKkK,sBACLlK,KAAKmK,uBAEb,CAGAD,sBACI,IAAIE,EAAgBpK,KAAK6E,YAAYoB,SAASoE,MAAKC,GAAgB,mBAAXA,EAAE/E,OACtDgF,EAAiB,IAAInI,KAAQ,EAAE,EAAE,GAAGoI,eAAe,IAAIpI,KAAQ,EAAE,EAAE,GAxOlC,KAyOrCgI,EAAcK,aAAaF,EAAgBvK,KAAKuH,sBAChD6C,EAAcK,aAAaF,EAAwD,IAAxCvK,KAAKkB,cAAiC,kBAAM,IAAI4B,KAAKC,GAAG,GACnG/C,KAAKuH,qBAAgE,KAAxCvH,KAAKkB,cAAiC,kBAAM,IAAI4B,KAAKC,GAAG,CACzF,CAGAoH,uBACI,IAAIO,EAAoB1K,KAAK6E,YAAYoB,SAASoE,MAAKC,GAAgB,YAAXA,EAAE/E,OAC1DoF,EAAe3K,KAAK6E,YAAYoB,SAASoE,MAAKC,GAAgB,SAAXA,EAAE/E,OACzD,MAAMqF,GAAkB9H,KAAK+H,IAAI7K,KAAKkB,cAAwB,WAAI,IAAI4B,KAAKC,GAAG,KAjP3D,IAkPb+H,GAAkB9K,KAAKkB,cAAmB,KAAG,IAAI4B,KAAKC,GAAG,KAjPjD,IAkPd2H,EAAkBD,aAAa,IAAIrI,KAAQ,EAAE,EAAE,IAAKpC,KAAKwH,sBACzDkD,EAAkBD,aAAa,IAAIrI,KAAQ,EAAE,EAAE,GAAIwI,GACnDD,EAAaF,aAAa,IAAIrI,KAAQ,EAAE,EAAE,IAAKpC,KAAKyH,iBACpDkD,EAAaF,aAAa,IAAIrI,KAAQ,EAAE,EAAE,GAAI0I,GAC9C9K,KAAKwH,qBAAuBoD,EAC5B5K,KAAKyH,gBAAkBqD,CAC3B,CAGAb,eAKI,IAAIc,EAAkB/K,KAAK6E,YAAYoB,SAASoE,MAAKC,GAAgB,iBAAXA,EAAE/E,OACxDyF,EAAiBhL,KAAK6E,YAAYoB,SAASoE,MAAKC,GAAgB,iBAAXA,EAAE/E,OACvD0F,EAAiBjL,KAAK6E,YAAYoB,SAASoE,MAAKC,GAAgB,iBAAXA,EAAE/E,OACvD2F,EAAgBlL,KAAK6E,YAAYoB,SAASoE,MAAKC,GAAgB,iBAAXA,EAAE/E,OAEtD4F,EAAqB,IAAI/I,KAAQ,EAAE,EAAE,GAAGoI,eACxC,IAAIpI,KAAQ,EAAE,EAAE,GAChBpC,KAAKqH,sBAEL+D,EAAqB,IAAIhJ,KAAQ,EAAE,EAAE,GAAGoI,eACxC,IAAIpI,KAAQ,EAAE,EAAE,IACfpC,KAAKqH,sBAIV2D,EAAeP,aAAaW,EAAoBpL,KAAKsH,sBACrDyD,EAAgBN,aAAaU,EAAoBnL,KAAKsH,sBAGtD0D,EAAe9C,QAAQlI,KAAKkB,cAAwB,SAAI+F,EAvRhC,GAwRxB8D,EAAgB7C,QAAQlI,KAAKkB,cAAwB,SAAI+F,EAxRjC,GAyRxBgE,EAAe/C,QAAQlI,KAAKkB,cAAwB,SAAI+F,EAzRhC,GA0RxBiE,EAAchD,QAAQlI,KAAKkB,cAAwB,SAAI+F,EA1R/B,GA4RxBkE,EAAqB,IAAI/I,KAAQ,EAAE,EAAE,GAAGoI,eACpC,IAAIpI,KAAQ,EAAE,EAAE,GAChBpC,KAAKqH,qBAAuBrH,KAAKkB,cAAwB,SAAI+F,EA9RzC,GAgSxBmE,EAAqB,IAAIhJ,KAAQ,EAAE,EAAE,GAAGoI,eACpC,IAAIpI,KAAQ,EAAE,EAAE,IACfpC,KAAKqH,qBAAuBrH,KAAKkB,cAAwB,SAAI+F,EAlS1C,GAsSxB+D,EAAeP,aAAaW,GAAqBpL,KAAKkB,cAAiC,kBAAE8F,GACzF+D,EAAgBN,aAAaU,GAAqBnL,KAAKkB,cAAiC,kBAAE8F,GAC1FhH,KAAKsH,qBAAuBtH,KAAKkB,cAAiC,kBAAE8F,EAEpEhH,KAAKqH,sBAAwBrH,KAAKkB,cAAwB,SAAI+F,EA1StC,EA2SrBjH,KAAKqH,sBAAgC,EAARvE,KAAKC,KACjC/C,KAAKqH,sBAAgC,EAARvE,KAAKC,GAE1C,ECzTJ,MAAQsI,QAASxL,GAA6ByL,EAAQ,KAatD,MAAMC,EACFzL,YAAYqH,GACRnH,KAAKmH,SAAWA,EAChB,MAAMqE,EAAWC,UAAUC,YAAcD,UAAUC,cAAiBD,UAAUE,kBAAoBF,UAAUE,oBAAsB,GAClI3L,KAAK4L,QAAU,KACf,IAAK,IAAI1F,EAAI,EAAGA,EAAIsF,EAASrF,OAAQD,IAC/BsF,EAAStF,IACPsF,EAAStF,GAAG2F,GAAGC,WAAW,oCAC5B9L,KAAK4L,QAAUJ,EAAStF,IAI9BlG,KAAK+L,QAAU,EACf/L,KAAKgM,aAAe,EACpBhM,KAAKiM,aAAe,EACpBjM,KAAKkM,eAAiB,EACtBlM,KAAKmM,YAAc,EACnBnM,KAAKoM,WAAa,EAClBpM,KAAKqM,SAAW,EAChBrM,KAAKsM,SAAW,EAChBtM,KAAKuM,YAAc,EACnBvM,KAAKwM,cAAgB,EACrBxM,KAAKyM,SAAW,GAChBzM,KAAK0M,SAAW,GAChB1M,KAAK2M,WAAa,GAClB3M,KAAK4M,YAAc,GACnB5M,KAAK6M,WAAa,GAClB7M,KAAK8M,YAAc,GACnB9M,KAAK+M,WAAa,GAClB/M,KAAKgN,WAAa,GAClBhN,KAAKiN,aAAe,GACpBjN,KAAKkN,WAAa,GAClBlN,KAAKmN,YAAc,GACnBnN,KAAKoN,kBAAoB,GACzBpN,KAAKqN,iBAAmB,GACxBrN,KAAKsN,MAAQ,GACbtN,KAAKuN,SAAW,GAEhBvN,KAAKwN,eAAiB,GACtB,IAAI,IAAItH,EAAE,EAAGA,GAAK,GAAIA,IAClBlG,KAAKwN,eAAeC,MAAK,GAG7BzN,KAAK0N,UAAY,EACjB1N,KAAK2N,OAAS,EACd3N,KAAK4N,YAAc,EACnB5N,KAAKO,MAAQ,EACbP,KAAK6N,KAAO,EAGZ7N,KAAK8N,aA5DG,EA6DR9N,KAAK+N,cA3DK,mBA4DV/N,KAAKgO,cA1DK,kBA2DVhO,KAAKiO,gBAzDM,kBA2DXjO,KAAKkO,YAAc,GACnB,IAAI,IAAIhI,EAAE,EAAGA,GAAK,EAAGA,IACjBlG,KAAKkO,YAAYT,MAAK,GAG1BzN,KAAKmO,wBAA0B,IAAItO,EAAyBsH,EAChE,CAGAiH,sBACI,MAAM5C,EAAWC,UAAUC,YAAcD,UAAUC,cAAiBD,UAAUE,kBAAoBF,UAAUE,oBAAsB,GAClI,IAAK,IAAIzF,EAAI,EAAGA,EAAIsF,EAASrF,OAAQD,IAC7BsF,EAAStF,IACPsF,EAAStF,GAAG2F,GAAGC,WAAW,oCAC5B9L,KAAK4L,QAAUJ,EAAStF,GAIpC,CAGAmI,cACIrO,KAAK4L,QAAU,KACf5L,KAAKoO,sBACc,MAAhBpO,KAAK4L,SACJ5L,KAAKsO,oBAETtO,KAAKmO,wBAAwBtN,WACjC,CAGA0N,kBACI,IAAIZ,EAAW3N,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,SAAW,EAC7CpN,EAAUP,KAAK4L,QAAQ4C,KAAKxO,KAAKO,QAAU,EAC/CA,EAAS,GAAKA,EAAQ,GAAK,EAC3B,IAAIqN,EAAgB5N,KAAK4L,QAAQ4C,KAAKxO,KAAK4N,cAAgB,EAC3DA,EAAe,GAAKA,EAAc,GAAK,EACvC5N,KAAKmO,wBAAwBlO,iBAAiB0N,EAAQC,GACtD5N,KAAKmO,wBAAwB9N,YAAYsN,EAAQpN,EACrD,CAGAkO,iBACIzO,KAAKmO,wBAAwBzN,cAAcV,KAAK4L,QAAQ4C,KAAKxO,KAAK0N,WACtE,CAGAgB,gBACI,GAlHiB,qBAkHd1O,KAAK4L,QAAQ4C,KAAKxO,KAAK6N,MAEnB7N,KAAK4L,QAAQ4C,KAAKxO,KAAK6N,QAAU7N,KAAK+N,eAAkB/N,KAAKkO,YAhHlD,GAkHJlO,KAAK4L,QAAQ4C,KAAKxO,KAAK6N,QAAU7N,KAAK+N,gBAC5C/N,KAAKkO,YAnHK,IAmH4B,GAFtClO,KAAKkO,YAjHK,IAiH4B,EAKvClO,KAAK4L,QAAQ4C,KAAKxO,KAAK6N,QAAU7N,KAAKgO,eAAkBhO,KAAKkO,YApHlD,GAsHJlO,KAAK4L,QAAQ4C,KAAKxO,KAAK6N,QAAU7N,KAAKgO,gBAC5ChO,KAAKkO,YAvHK,IAuH4B,GAFtClO,KAAKkO,YArHK,IAqH4B,EAKvClO,KAAK4L,QAAQ4C,KAAKxO,KAAK6N,QAAU7N,KAAKiO,gBAAmBjO,KAAKkO,YAxHlD,GA0HLlO,KAAK4L,QAAQ4C,KAAKxO,KAAK6N,QAAU7N,KAAKiO,iBAC5CjO,KAAKkO,YA3HM,IA2H4B,GAFvClO,KAAKkO,YAzHM,IAyH4B,EAKxClO,KAAK4L,QAAQ4C,KAAKxO,KAAK6N,QAAU7N,KAAK8N,aAAgB9N,KAAKkO,YApIlD,GAsIFlO,KAAK4L,QAAQ4C,KAAKxO,KAAK6N,QAAU7N,KAAK8N,cAC5C9N,KAAKkO,YAvIG,IAuI4B,GAFpClO,KAAKkO,YArIG,IAqI4B,OAKxC,IAAI,IAAIhI,EAAI,EAAGA,EAAIlG,KAAKkO,YAAY/H,OAAQD,IACxClG,KAAKkO,YAAYhI,IAAK,CAGlC,CAGAyI,mBAEQ3O,KAAK4L,QAAQgD,QAAQ5O,KAAK+L,SAAS8C,UAAY7O,KAAKwN,eAAexN,KAAK+L,SACxE/L,KAAKwN,eAAexN,KAAK+L,UAAW,EAC9B/L,KAAK4L,QAAQgD,QAAQ5O,KAAK+L,SAAS8C,UACzC7O,KAAKwN,eAAexN,KAAK+L,UAAW,GAIpC/L,KAAK4L,QAAQgD,QAAQ5O,KAAKkM,gBAAgB2C,UAAY7O,KAAKwN,eAAexN,KAAKkM,gBAC/ElM,KAAKwN,eAAexN,KAAKkM,iBAAkB,EACrClM,KAAK4L,QAAQgD,QAAQ5O,KAAKkM,gBAAgB2C,UAChD7O,KAAKwN,eAAexN,KAAKkM,iBAAkB,GAI3ClM,KAAK4L,QAAQgD,QAAQ5O,KAAKiM,cAAc4C,UAAY7O,KAAKwN,eAAexN,KAAKiM,cAC7EjM,KAAKwN,eAAexN,KAAKiM,eAAgB,EACnCjM,KAAK4L,QAAQgD,QAAQ5O,KAAKiM,cAAc4C,UAC9C7O,KAAKwN,eAAexN,KAAKiM,eAAgB,GAIzCjM,KAAK4L,QAAQgD,QAAQ5O,KAAKgM,cAAc6C,UAAY7O,KAAKwN,eAAexN,KAAKgM,cAC7EhM,KAAKwN,eAAexN,KAAKgM,eAAgB,EACnChM,KAAK4L,QAAQgD,QAAQ5O,KAAKgM,cAAc6C,UAC9C7O,KAAKwN,eAAexN,KAAKgM,eAAgB,GAIzChM,KAAK4L,QAAQgD,QAAQ5O,KAAKuN,UAAUsB,UAAY7O,KAAKwN,eAAexN,KAAKuN,UACzEvN,KAAKwN,eAAexN,KAAKuN,WAAY,EAC/BvN,KAAK4L,QAAQgD,QAAQ5O,KAAKuN,UAAUsB,UAC1C7O,KAAKwN,eAAexN,KAAKuN,WAAY,GAIrCvN,KAAK4L,QAAQgD,QAAQ5O,KAAKkN,YAAY2B,UAAY7O,KAAKwN,eAAexN,KAAKkN,YAC3ElN,KAAKwN,eAAexN,KAAKkN,aAAc,EACjClN,KAAK4L,QAAQgD,QAAQ5O,KAAKkN,YAAY2B,UAC5C7O,KAAKwN,eAAexN,KAAKkN,aAAc,GAIvClN,KAAK4L,QAAQgD,QAAQ5O,KAAKmN,aAAa0B,UAAY7O,KAAKwN,eAAexN,KAAKmN,aAC5EnN,KAAKwN,eAAexN,KAAKmN,cAAe,EAClCnN,KAAK4L,QAAQgD,QAAQ5O,KAAKmN,aAAa0B,UAC7C7O,KAAKwN,eAAexN,KAAKmN,cAAe,GAIxCnN,KAAK4L,QAAQgD,QAAQ5O,KAAKsM,UAAUuC,UAAY7O,KAAKwN,eAAexN,KAAKsM,UACzEtM,KAAKwN,eAAexN,KAAKsM,WAAY,EAC/BtM,KAAK4L,QAAQgD,QAAQ5O,KAAKsM,UAAUuC,UAC1C7O,KAAKwN,eAAexN,KAAKsM,WAAY,GAIrCtM,KAAK4L,QAAQgD,QAAQ5O,KAAK0M,UAAUmC,UAAY7O,KAAKwN,eAAexN,KAAK0M,UACzE1M,KAAKwN,eAAexN,KAAK0M,WAAY,EAC/B1M,KAAK4L,QAAQgD,QAAQ5O,KAAK0M,UAAUmC,UAC1C7O,KAAKwN,eAAexN,KAAK0M,WAAY,GAIrC1M,KAAK4L,QAAQgD,QAAQ5O,KAAKqM,UAAUwC,UAAY7O,KAAKwN,eAAexN,KAAKqM,WACzErM,KAAKmO,wBAAwBvN,YAC7BZ,KAAKwN,eAAexN,KAAKqM,WAAY,GAC/BrM,KAAK4L,QAAQgD,QAAQ5O,KAAKqM,UAAUwC,UAC1C7O,KAAKwN,eAAexN,KAAKqM,WAAY,GAIrCrM,KAAK4L,QAAQgD,QAAQ5O,KAAKyM,UAAUoC,UAAY7O,KAAKwN,eAAexN,KAAKyM,UAC7EzM,KAAKwN,eAAexN,KAAKyM,WAAY,EAC3BzM,KAAK4L,QAAQgD,QAAQ5O,KAAKyM,UAAUoC,UAC1C7O,KAAKwN,eAAexN,KAAKyM,WAAY,GAIrCzM,KAAK4L,QAAQgD,QAAQ5O,KAAKsN,OAAOuB,UAAY7O,KAAKwN,eAAexN,KAAKsN,OACtEtN,KAAKwN,eAAexN,KAAKsN,QAAS,EAC5BtN,KAAK4L,QAAQgD,QAAQ5O,KAAKsN,OAAOuB,UACvC7O,KAAKwN,eAAexN,KAAKsN,QAAS,GAIlCtN,KAAK4L,QAAQgD,QAAQ5O,KAAKuM,aAAasC,UAAY7O,KAAKwN,eAAexN,KAAKuM,aAC5EvM,KAAKwN,eAAexN,KAAKuM,cAAe,EAClCvM,KAAK4L,QAAQgD,QAAQ5O,KAAKuM,aAAasC,UAC7C7O,KAAKwN,eAAexN,KAAKuM,cAAe,GAIxCvM,KAAK4L,QAAQgD,QAAQ5O,KAAKwM,eAAeqC,UAAY7O,KAAKwN,eAAexN,KAAKwM,eAC9ExM,KAAKwN,eAAexN,KAAKwM,gBAAiB,EACpCxM,KAAK4L,QAAQgD,QAAQ5O,KAAKwM,eAAeqC,UAC/C7O,KAAKwN,eAAexN,KAAKwM,gBAAiB,GAI1CxM,KAAK4L,QAAQgD,QAAQ5O,KAAKoM,YAAYyC,UAAY7O,KAAKwN,eAAexN,KAAKoM,YAC3EpM,KAAKwN,eAAexN,KAAKoM,aAAc,EACjCpM,KAAK4L,QAAQgD,QAAQ5O,KAAKoM,YAAYyC,UAC5C7O,KAAKwN,eAAexN,KAAKoM,aAAc,GAIvCpM,KAAK4L,QAAQgD,QAAQ5O,KAAKmM,aAAa0C,UAAY7O,KAAKwN,eAAexN,KAAKmM,aAC5EnM,KAAKwN,eAAexN,KAAKmM,cAAe,EAClCnM,KAAK4L,QAAQgD,QAAQ5O,KAAKmM,aAAa0C,UAC7C7O,KAAKwN,eAAexN,KAAKmM,cAAe,GAIxCnM,KAAK4L,QAAQgD,QAAQ5O,KAAKqN,kBAAkBwB,UAAY7O,KAAKwN,eAAexN,KAAKqN,kBACjFrN,KAAKwN,eAAexN,KAAKqN,mBAAoB,EACvCrN,KAAK4L,QAAQgD,QAAQ5O,KAAKqN,kBAAkBwB,UAClD7O,KAAKwN,eAAexN,KAAKqN,mBAAoB,GAE7CrN,KAAK4L,QAAQgD,QAAQ5O,KAAKoN,mBAAmByB,UAAY7O,KAAKwN,eAAexN,KAAKoN,mBAClFpN,KAAKwN,eAAexN,KAAKoN,oBAAqB,EACxCpN,KAAK4L,QAAQgD,QAAQ5O,KAAKoN,mBAAmByB,UACnD7O,KAAKwN,eAAexN,KAAKoN,oBAAqB,EAEtD,CAGA0B,mBACQ9O,KAAK4L,QAAQgD,QAAQ5O,KAAK2M,YAAYkC,UAAY7O,KAAKwN,eAAexN,KAAK2M,aAC3E3M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK2M,aAAc,IACjC3M,KAAK4L,QAAQgD,QAAQ5O,KAAK2M,YAAYkC,SAAW7O,KAAKwN,eAAexN,KAAK2M,cAChF3M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK2M,aAAc,GAEvC3M,KAAK4L,QAAQgD,QAAQ5O,KAAK4M,aAAaiC,UAAY7O,KAAKwN,eAAexN,KAAK4M,cAC5E5M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK4M,cAAe,IAClC5M,KAAK4L,QAAQgD,QAAQ5O,KAAK4M,aAAaiC,SAAW7O,KAAKwN,eAAexN,KAAK4M,eACjF5M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK4M,cAAe,GAExC5M,KAAK4L,QAAQgD,QAAQ5O,KAAK6M,YAAYgC,UAAY7O,KAAKwN,eAAexN,KAAK6M,aAC3E7M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK6M,aAAc,IACjC7M,KAAK4L,QAAQgD,QAAQ5O,KAAK6M,YAAYgC,SAAW7O,KAAKwN,eAAexN,KAAK6M,cAChF7M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK6M,aAAc,GAEvC7M,KAAK4L,QAAQgD,QAAQ5O,KAAK8M,aAAa+B,UAAY7O,KAAKwN,eAAexN,KAAK8M,cAC5E9M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK8M,cAAe,IAClC9M,KAAK4L,QAAQgD,QAAQ5O,KAAK8M,aAAa+B,SAAW7O,KAAKwN,eAAexN,KAAK8M,eACjF9M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK8M,cAAe,GAExC9M,KAAK4L,QAAQgD,QAAQ5O,KAAK+M,YAAY8B,UAAY7O,KAAKwN,eAAexN,KAAK+M,aAC3E/M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK+M,aAAc,IACjC/M,KAAK4L,QAAQgD,QAAQ5O,KAAK+M,YAAY8B,SAAW7O,KAAKwN,eAAexN,KAAK+M,cAChF/M,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAK+M,aAAc,GAEvC/M,KAAK4L,QAAQgD,QAAQ5O,KAAKgN,YAAY6B,UAAY7O,KAAKwN,eAAexN,KAAKgN,aAC3EhN,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAKgN,aAAc,IACjChN,KAAK4L,QAAQgD,QAAQ5O,KAAKgN,YAAY6B,SAAW7O,KAAKwN,eAAexN,KAAKgN,cAChFhN,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAKgN,aAAc,GAEvChN,KAAK4L,QAAQgD,QAAQ5O,KAAKiN,cAAc4B,UAAY7O,KAAKwN,eAAexN,KAAKiN,eAC7EjN,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,SAAU,GAC1E3N,KAAKwN,eAAexN,KAAKiN,eAAgB,IACnCjN,KAAK4L,QAAQgD,QAAQ5O,KAAKiN,cAAc4B,SAAW7O,KAAKwN,eAAexN,KAAKiN,gBAClFjN,KAAKmO,wBAAwB3N,YAAYR,KAAK4L,QAAQ4C,KAAKxO,KAAK2N,QAAS,GACzE3N,KAAKwN,eAAexN,KAAKiN,eAAgB,EAEjD,CAGAqB,oBACItO,KAAKuO,kBACLvO,KAAKyO,iBACLzO,KAAK0O,gBACL1O,KAAK2O,mBACL3O,KAAK8O,kBACT,EAMW,MAAMC,EAIjBjP,cACI,MAAM,IAAI+G,MAAM,0DACpB,CAEAF,mBAAmBQ,GAIf,OAHK4H,EAA+BC,WAChCD,EAA+BC,SAAW,IAAIzD,EAAsBpE,IAEjE4H,EAA+BC,QAC1C,EClWJ,MAAQ3D,QAASxL,GAA6ByL,EAAQ,KAEhD2D,EAAc,GAIpB,MAAMC,EACFpP,YAAYqP,GACR,MAAM3D,EAAWC,UAAUC,YAAcD,UAAUC,cAAiBD,UAAUE,kBAAoBF,UAAUE,oBAAsB,GAClI3L,KAAK4L,QAAU,KACf,IAAK,IAAI1F,EAAI,EAAGA,EAAIsF,EAASrF,OAAQD,IAC/BsF,EAAStF,KACPsF,EAAStF,GAAG2F,GAAGC,WAAW,SAAWN,EAAStF,GAAG2F,GAAGC,WAAW,aACjE9L,KAAK4L,QAAUJ,EAAStF,IAI9BlG,KAAKoP,QAAU,EACfpP,KAAKqP,QAAU,EACfrP,KAAK+L,QAAU,EACf/L,KAAKsP,QAAU,EACftP,KAAKuP,SAAW,EAChBvP,KAAKwP,SAAW,EAChBxP,KAAKsM,SAAW,EAChBtM,KAAKqM,SAAW,EAChBrM,KAAKuM,YAAc,EACnBvM,KAAKyP,aAAe,EACpBzP,KAAK0M,SAAW,GAChB1M,KAAKyM,SAAW,GAChBzM,KAAK0P,MAAQ,GACb1P,KAAK2P,QAAU,GACf3P,KAAK4P,QAAU,GACf5P,KAAK6P,SAAW,GAChB7P,KAAK8P,WAAa,GAClB9P,KAAK+P,cAAgB,GACrB/P,KAAKgQ,YAAc,EACnB,IAAI,IAAI9J,EAAI,EAAGA,GAAK,GAAIA,IACpBlG,KAAK+P,cAActC,MAAK,GAG5BzN,KAAKiQ,SAAW,EAChBjQ,KAAKkQ,SAAW,EAChBlQ,KAAKmQ,UAAY,EACjBnQ,KAAKoQ,UAAY,EACjBpQ,KAAKmO,wBAA0B,IAAItO,EAAyBsP,EAChE,CAEAf,sBACI,MAAM5C,EAAWC,UAAUC,YAAcD,UAAUC,cAAiBD,UAAUE,kBAAoBF,UAAUE,oBAAsB,GAClI,IAAK,IAAIzF,EAAI,EAAGA,EAAIsF,EAASrF,OAAQD,IAC7BsF,EAAStF,IACPsF,EAAStF,GAAG2F,GAAGC,WAAW,UAC5B9L,KAAK4L,QAAUJ,EAAStF,GAIpC,CAEAmI,cACIrO,KAAK4L,QAAU,KACf5L,KAAKoO,sBACc,MAAhBpO,KAAK4L,SACJ5L,KAAKsO,oBAETtO,KAAKmO,wBAAwBtN,WACjC,CAEAwP,gBAGI,GAFGvN,KAAK+H,IAAI7K,KAAK4L,QAAQ4C,KAAKxO,KAAKkQ,WAEhCpN,KAAK+H,IAAI7K,KAAK4L,QAAQ4C,KAAKxO,KAAKiQ,YAAchB,EAAY,CACzD,IAAIqB,EAAQtQ,KAAK4L,QAAQ4C,KAAKxO,KAAKiQ,WAAa,EAChDjQ,KAAKmO,wBAAwBzN,cAAc4P,EAC/C,MACItQ,KAAKmO,wBAAwBzN,cAAc,GAE5CoC,KAAK+H,IAAI7K,KAAK4L,QAAQ4C,KAAKxO,KAAKoQ,YAEhCtN,KAAK+H,IAAI7K,KAAK4L,QAAQ4C,KAAKxO,KAAKmQ,WAEvC,CAEAI,kBACIvQ,KAAKmO,wBAAwBlO,iBA/EX,EA+E+CD,KAAK4L,QAAQgD,QAAQ5O,KAAKqM,UAAUmE,OACrGxQ,KAAKmO,wBAAwB9N,YAjFf,EAiF0CL,KAAK4L,QAAQgD,QAAQ5O,KAAKsM,UAAUkE,MAChG,CAEAC,oBACQzQ,KAAK4L,QAAQgD,QAAQ5O,KAAKqM,UAAUwC,QAGpC7O,KAAK4L,QAAQgD,QAAQ5O,KAAKsM,UAAUuC,OAE5C,CAIAF,mBAEQ3O,KAAK4L,QAAQgD,QAAQ5O,KAAKwP,UAAUX,UAAY7O,KAAK+P,cAAc/P,KAAKwP,WACrExP,KAAKgQ,aAAe,IACnBhQ,KAAKgQ,aAAe,EACpBhQ,KAAKmO,wBAAwB3N,YAnGvB,EAmGkDR,KAAKgQ,cAEjEhQ,KAAK+P,cAAc/P,KAAKwP,WAAY,GAC9BxP,KAAK4L,QAAQgD,QAAQ5O,KAAKwP,UAAUX,UAE1C7O,KAAK+P,cAAc/P,KAAKwP,WAAY,GAGpCxP,KAAK4L,QAAQgD,QAAQ5O,KAAKuP,UAAUV,UAAY7O,KAAK+P,cAAc/P,KAAKuP,WACrEvP,KAAKgQ,aAAe,IACnBhQ,KAAKgQ,aAAe,EACpBhQ,KAAKmO,wBAAwB3N,YA9GvB,EA8GkDR,KAAKgQ,cAEjEhQ,KAAK+P,cAAc/P,KAAKuP,WAAY,GAC9BvP,KAAK4L,QAAQgD,QAAQ5O,KAAKuP,UAAUV,UAC1C7O,KAAK+P,cAAc/P,KAAKuP,WAAY,GAGpCvP,KAAK4L,QAAQgD,QAAQ5O,KAAKuM,aAAasC,UAAY7O,KAAK+P,cAAc/P,KAAKuM,aAC3EvM,KAAK+P,cAAc/P,KAAKuM,cAAe,EACjCvM,KAAK4L,QAAQgD,QAAQ5O,KAAKuM,aAAasC,UAC7C7O,KAAK+P,cAAc/P,KAAKuM,cAAe,GAGvCvM,KAAK4L,QAAQgD,QAAQ5O,KAAK0P,OAAOb,UAAY7O,KAAK+P,cAAc/P,KAAK0P,OACrE1P,KAAK+P,cAAc/P,KAAK0P,QAAS,EAC3B1P,KAAK4L,QAAQgD,QAAQ5O,KAAK0P,OAAOb,UACvC7O,KAAK+P,cAAc/P,KAAK0P,QAAS,GAGjC1P,KAAK4L,QAAQgD,QAAQ5O,KAAK2P,SAASd,UAAY7O,KAAK+P,cAAc/P,KAAK2P,SACvE3P,KAAK+P,cAAc/P,KAAK2P,UAAW,EAC7B3P,KAAK4L,QAAQgD,QAAQ5O,KAAK2P,SAASd,UACzC7O,KAAK+P,cAAc/P,KAAK2P,UAAW,GAGnC3P,KAAK4L,QAAQgD,QAAQ5O,KAAK4P,SAASf,UAAY7O,KAAK+P,cAAc/P,KAAK4P,SACvE5P,KAAK+P,cAAc/P,KAAK4P,UAAW,EAC7B5P,KAAK4L,QAAQgD,QAAQ5O,KAAK4P,SAASf,UACzC7O,KAAK+P,cAAc/P,KAAK4P,UAAW,GAGnC5P,KAAK4L,QAAQgD,QAAQ5O,KAAK6P,UAAUhB,UAAY7O,KAAK+P,cAAc/P,KAAK6P,UACxE7P,KAAK+P,cAAc/P,KAAK6P,WAAY,EAC9B7P,KAAK4L,QAAQgD,QAAQ5O,KAAK6P,UAAUhB,UAC1C7O,KAAK+P,cAAc/P,KAAK6P,WAAY,GAGpC7P,KAAK4L,QAAQgD,QAAQ5O,KAAKoP,SAASP,UAAY7O,KAAK+P,cAAc/P,KAAKoP,SACvEpP,KAAK+P,cAAc/P,KAAKoP,UAAW,EAC7BpP,KAAK4L,QAAQgD,QAAQ5O,KAAKoP,SAASP,UACzC7O,KAAK+P,cAAc/P,KAAKoP,UAAW,GAGnCpP,KAAK4L,QAAQgD,QAAQ5O,KAAKqP,SAASR,UAAY7O,KAAK+P,cAAc/P,KAAKqP,SACvErP,KAAK+P,cAAc/P,KAAKqP,UAAW,EAC7BrP,KAAK4L,QAAQgD,QAAQ5O,KAAKqP,SAASR,UACzC7O,KAAK+P,cAAc/P,KAAKqP,UAAW,GAGnCrP,KAAK4L,QAAQgD,QAAQ5O,KAAKsP,SAAST,UAAY7O,KAAK+P,cAAc/P,KAAKsP,SACvEtP,KAAK+P,cAAc/P,KAAKsP,UAAW,EAC7BtP,KAAK4L,QAAQgD,QAAQ5O,KAAKsP,SAAST,UACzC7O,KAAK+P,cAAc/P,KAAKsP,UAAW,GAGnCtP,KAAK4L,QAAQgD,QAAQ5O,KAAK+L,SAAS8C,UAAY7O,KAAK+P,cAAc/P,KAAK+L,SACvE/L,KAAK+P,cAAc/P,KAAK+L,UAAW,EAC7B/L,KAAK4L,QAAQgD,QAAQ5O,KAAK+L,SAAS8C,UACzC7O,KAAK+P,cAAc/P,KAAK+L,UAAW,GAGnC/L,KAAK4L,QAAQgD,QAAQ5O,KAAKyM,UAAUoC,UAAY7O,KAAK+P,cAAc/P,KAAKyM,UACxEzM,KAAK+P,cAAc/P,KAAKyM,WAAY,EAC9BzM,KAAK4L,QAAQgD,QAAQ5O,KAAKyM,UAAUoC,UAC1C7O,KAAK+P,cAAc/P,KAAKyM,WAAY,GAGpCzM,KAAK4L,QAAQgD,QAAQ5O,KAAK0M,UAAUmC,UAAY7O,KAAK+P,cAAc/P,KAAK0M,UACxE1M,KAAK+P,cAAc/P,KAAK0M,WAAY,EAC9B1M,KAAK4L,QAAQgD,QAAQ5O,KAAK0M,UAAUmC,UAC1C7O,KAAK+P,cAAc/P,KAAK0M,WAAY,GAGpC1M,KAAK4L,QAAQgD,QAAQ5O,KAAK0P,OAAOb,UAAY7O,KAAK+P,cAAc/P,KAAK0P,OACrE1P,KAAK+P,cAAc/P,KAAK0P,QAAS,EAC3B1P,KAAK4L,QAAQgD,QAAQ5O,KAAK0P,OAAOb,UACvC7O,KAAK+P,cAAc/P,KAAK0P,QAAS,GAGjC1P,KAAK4L,QAAQgD,QAAQ5O,KAAK2P,SAASd,UAAY7O,KAAK+P,cAAc/P,KAAK2P,SACvE3P,KAAK+P,cAAc/P,KAAK2P,UAAW,EAC7B3P,KAAK4L,QAAQgD,QAAQ5O,KAAK2P,SAASd,UACzC7O,KAAK+P,cAAc/P,KAAK2P,UAAW,GAInC3P,KAAK4L,QAAQgD,QAAQ5O,KAAK4P,SAASf,UAAY7O,KAAK+P,cAAc/P,KAAK4P,SACvE5P,KAAK+P,cAAc/P,KAAK4P,UAAW,EAC7B5P,KAAK4L,QAAQgD,QAAQ5O,KAAK4P,SAASf,UACzC7O,KAAK+P,cAAc/P,KAAK4P,UAAW,GAGnC5P,KAAK4L,QAAQgD,QAAQ5O,KAAK6P,UAAUhB,UAAY7O,KAAK+P,cAAc/P,KAAK6P,UACxE7P,KAAK+P,cAAc/P,KAAK6P,WAAY,EAC9B7P,KAAK4L,QAAQgD,QAAQ5O,KAAK6P,UAAUhB,UAC1C7O,KAAK+P,cAAc/P,KAAK6P,WAAY,GAGpC7P,KAAK4L,QAAQgD,QAAQ5O,KAAK8P,YAAYjB,UAAY7O,KAAK+P,cAAc/P,KAAK8P,aAC1E9P,KAAKmO,wBAAwBpN,eAAe,aAC5Cf,KAAK+P,cAAc/P,KAAK8P,aAAc,GAChC9P,KAAK4L,QAAQgD,QAAQ5O,KAAK8P,YAAYjB,UAC5C7O,KAAK+P,cAAc/P,KAAK8P,aAAc,GAGtC9P,KAAK4L,QAAQgD,QAAQ5O,KAAKyP,cAAcZ,UAAY7O,KAAK+P,cAAc/P,KAAKyP,eAC5EzP,KAAKmO,wBAAwBvN,YAC7BZ,KAAK+P,cAAc/P,KAAKyP,eAAgB,GAClCzP,KAAK4L,QAAQgD,QAAQ5O,KAAKyP,cAAcZ,UAC9C7O,KAAK+P,cAAc/P,KAAKyP,eAAgB,EAEhD,CAEAnB,oBACItO,KAAKuQ,kBACLvQ,KAAKqQ,gBACLrQ,KAAKyQ,oBACLzQ,KAAK2O,kBACT,EAGW,MAAM+B,EAIjB5Q,cACI,MAAM,IAAI+G,MAAM,0DACpB,CAEAF,mBAAmBwI,GAIf,OAHKuB,EAAwB1B,WACzB0B,EAAwB1B,SAAW,IAAIE,EAAeC,IAEnDuB,EAAwB1B,QACnC,ECxPW,MAAM2B,EAEjB7Q,cACIE,KAAK4Q,UAAY,EACrB,CAEAC,eAAeC,GACX9Q,KAAK4Q,UAAUnD,KAAKqD,EACxB,CAEAC,eAAeD,GACX,IAAIE,EAAQhR,KAAK4Q,UAAUK,QAAQH,GAChCE,GAAS,GACRhR,KAAK4Q,UAAUM,OAAOF,EAAO,EAErC,CAEAG,gBAAgBC,GACZ,IAAK,IAAIlL,EAAI,EAAGA,EAAIlG,KAAK4Q,UAAUzK,OAAQD,IACvClG,KAAK4Q,UAAU1K,GAAGpF,OAAOsQ,EAEjC,E,sBCnBW,MAAMC,EAIjBvR,cACI,MAAM,IAAI+G,MAAM,0DACpB,CAEAF,2BAII,OAHI0K,EAAaC,uBACbD,EAAaC,2BAA6BC,OAEvCF,EAAaC,oBACxB,EAbiBD,EAEVC,qBAAuB,KCWnB,MAAME,EAGjB1R,YAAYyC,EAAUgB,EAAYkO,EAASC,EAAMC,EAAOC,EAAcC,GAClE7R,KAAKuC,SAAWA,EAChBvC,KAAKuD,WAAaA,EAClBvD,KAAKyR,QAAUA,EACfzR,KAAK0R,KAAOA,EACZ1R,KAAK2R,MAAQA,EACb3R,KAAK4R,aAAeA,EACpB5R,KAAK6R,SAAWA,CACpB,CAGA/M,yBAEI,IAAIyM,QAAaF,EAAavI,cAC9B9I,KAAKyR,QAAU,IAAIF,EAAKO,UAAU9R,KAAKyR,QAAQvO,EAAGlD,KAAKyR,QAAQtO,EAAGnD,KAAKyR,QAAQrO,GAC/EpD,KAAKuR,KAAOA,EACZ,IAAIQ,EAAY,IAAIR,EAAKS,YACzBD,EAAUE,cACVF,EAAUG,UAAU,IAAIX,EAAKO,UAAU9R,KAAKuC,SAASW,EAAGlD,KAAKuC,SAASY,EAAGnD,KAAKuC,SAASa,IACvF2O,EAAUI,YAAY,IAAIZ,EAAKa,aAAapS,KAAKuD,WAAWL,EAAGlD,KAAKuD,WAAWJ,EAAGnD,KAAKuD,WAAWH,EAAGpD,KAAKuD,WAAWF,IAErHrD,KAAKqS,cAAgB,IAAId,EAAKS,YAE9B,IAAIM,EAAc,IAAIf,EAAKgB,qBAAqBR,GAE5CJ,EAAQ,IAAIJ,EAAKiB,WAAW,IAAIjB,EAAKO,UAAU9R,KAAK2R,MAAMzO,EAAE,EAAGlD,KAAK2R,MAAMxO,EAAE,EAAGnD,KAAK2R,MAAMvO,EAAE,IAChGuO,EAAMc,sBAAsBzS,KAAK0R,KAAM1R,KAAKyR,SAE5C,IAAIiB,EAAgB,IAAInB,EAAKoB,4BAA4B3S,KAAK0R,KAAMY,EAAaX,EAAO3R,KAAKyR,SAC7FzR,KAAK4S,UAAY,IAAIrB,EAAKsB,YAAYH,GAEtC1S,KAAK4S,UAAUE,YAAY9S,KAAK6R,UAChC7R,KAAK4S,UAAUG,mBAAkC,GAAf/S,KAAK6R,UACvC7R,KAAK4R,aAAaoB,aAAahT,KAAK4S,WAEpC5S,KAAKiT,OAAS,IAAIjT,KAAKuR,KAAK2B,gBAC5B,IAAIC,EAAY,IAAInT,KAAKuR,KAAK6B,0BAA0BpT,KAAK4R,cAC7D5R,KAAKqT,QAAU,IAAIrT,KAAKuR,KAAK+B,iBAAiBtT,KAAKiT,OAAQjT,KAAK4S,UAAWO,GAC3EnT,KAAKqT,QAAQE,oBAAoB,EAAG,EAAG,GACvCvT,KAAK4R,aAAa4B,UAAUxT,KAAKqT,SAiBjCrT,KAAKyT,UAAS,EAAM,IAAIzT,KAAKuR,KAAKO,UAdf,IASQ,GAFE,MARX,IAYI,IApEX,EAMD,GAkEV9R,KAAKyT,UAAS,EAAM,IAAIzT,KAAKuR,KAAKO,WAff,IASQ,GAFE,MARX,IAYI,IAnEV,GAIF,GAoEV9R,KAAKyT,UAAS,EAAO,IAAIzT,KAAKuR,KAAKO,UAAU,IAXnB,IAJE,MAFV,IAIG,IA1DX,EAIA,GAoEV9R,KAAKyT,UAAS,EAAO,IAAIzT,KAAKuR,KAAKO,WAbV,IACC,IAJE,MAFV,IAIG,IAzDV,GAED,GAuEN9R,KAAK0R,KAAO,GACZ1R,KAAK4S,UAAUc,mBAlEE,EAoEzB,CAGAD,SAASE,EAASC,EAAKC,EAAQC,EAAO9C,EAAO+C,GACzC,IAAIC,EAAoB,IAAIhU,KAAKuR,KAAKO,UAAU,GAAI,EAAG,GACnDmC,EAAc,IAAIjU,KAAKuR,KAAKO,WAAW,EAAG,EAAG,GAO7CoC,EAAYlU,KAAKqT,QAAQI,SACzBG,EACAI,EACAC,EARuB,GAUvBJ,EACA7T,KAAKiT,OACLU,GAGJO,EAAUC,0BAhBgB,GAiB1BD,EAAUE,8BAbc,KAcxBF,EAAUG,+BAbkB,KAc5BH,EAAUI,mBAhBK,KAiBfJ,EAAUK,oBAlBU,GAoBxB,CAGAC,gBACI,IAAIC,EAAc,CACd,QAAW,CACP,SAAY,KACZ,SAAY,MAEhB,OAAU,IAEd,IAAK,IAAIvO,EAAE,EAAGA,EAAIlG,KAAKqT,QAAQqB,eAAgBxO,IAAI,CAC/ClG,KAAKqT,QAAQsB,qBAAqBzO,GAAG,GACrC,IAAI0O,EAAe5U,KAAKqT,QAAQwB,oBAAoB3O,GAChD3D,EAAWqS,EAAaE,YACxBxS,EAAWsS,EAAaG,cAC5BN,EAAYO,OAAOvH,KAAK,CACpB,SAAY,IAAIrL,KAAQG,EAASW,IAAKX,EAASY,IAAKZ,EAASa,KAC7D,SAAY,IAAI6R,KAAQ3S,EAASY,IAAKZ,EAASa,IAAKb,EAASc,IAAKd,EAASe,MAEnF,CACA,IAAI6R,EAAwBlV,KAAKqT,QAAQ8B,2BAErC5S,EAAW2S,EAAsBJ,YACjCxS,EAAW4S,EAAsBH,cAKrC,OAJAN,EAAYW,QAAU,CAClB,SAAY,IAAIhT,KAAQG,EAASW,IAAKX,EAASY,IAAKZ,EAASa,KAC7D,SAAY,IAAI6R,KAAQ3S,EAASY,IAAKZ,EAASa,IAAKb,EAASc,IAAKd,EAASe,MAExEoR,CACX,CAGAY,eACI,OAAOrV,KAAK4S,SAChB,CAGA0C,eAAgBC,GACZvV,KAAKqT,QAAQmC,iBAAkBD,EAhJrB,GAiJVvV,KAAKqT,QAAQmC,iBAAkBD,EAhJpB,EAiJf,CAGAhV,MAAMD,GACF,IAAImV,EAAW3S,KAAK+H,IAAI7K,KAAKqT,QAAQqC,yBACjCC,EAhJe,IAgJwBF,EAC1B,IAAbA,IACAE,EAAgB,GAEpBrV,GAAcqV,EACd3V,KAAKqT,QAAQuC,SAAStV,EAAW,EA9JtB,GA+JXN,KAAKqT,QAAQuC,SAAStV,EAAW,EA9JrB,GA+JZN,KAAKqT,QAAQuC,SAAStV,EA9JZ,GA+JVN,KAAKqT,QAAQuC,SAAStV,EA9JX,EA+Jf,CAGAuV,oBAAqBvT,GACjBtC,KAAKqT,QAAQyC,kBA/JH,GA+JoBxT,EAtKnB,GAuKXtC,KAAKqT,QAAQyC,kBAhKH,GAgKoBxT,EAtKlB,EAuKhB,CAGAyT,cACI,OAAO/V,KAAKqT,QAAQqC,uBACxB,EChLG,MAAMM,EAAU,IAGVC,EAA0B,IAEhC,MAAMC,EACTC,sBAAsBC,EAAYC,EAAcC,EAAYC,GAExD,IAAIC,EAEJ,GAAGH,EAAa,CAIZG,EAbO,GAUqBJ,EAFdE,EAIkBN,EAEpC,MACIQ,EAdO,KAccJ,EAazB,OAXAG,GAA0CC,GACjB,IACrBD,EAAqB,IAEjBA,EAAqB,IACzBA,EAAqB,GAMlB,CAFPD,EAAaN,GAAW,EAAIlT,KAAK2T,KAAKF,EAAmBN,IAErCM,EACxB,EC1BW,MAAMG,UAAwBR,EAEzC9V,WAAWD,EAAkBmW,EAAYC,GACrC,OAAOvW,KAAKmW,sBALM,GAKmC,EAAMG,EAAYC,EAC3E,CAEAhW,MAAMD,EAAYgW,EAAYC,GAC1B,OAAOvW,KAAKmW,sBAAsB7V,GAAY,EAAOgW,EAAYC,EACrE,ECVW,MAAMI,UAAuBT,EAExC9V,WAAWD,EAAkBmW,EAAYC,GACrC,OAAOvW,KAAKmW,sBAAsBhW,GAAkB,EAAMmW,EAAYC,EAC1E,CAEAhW,MAAMD,EAAYgW,EAAYC,GAC1B,OAAOvW,KAAKmW,sBAAsB7V,GAAY,EAAOgW,EAAYC,EACrE,ECHW,MAAMK,EAGjB9W,cACIE,KAAK6W,YAAc,IAAIH,EACvB1W,KAAKsW,WAAa,EAClBtW,KAAKuW,mBAAqB,CAC9B,CAGAO,SACI9W,KAAK6W,YAAc,IAAIF,CAC3B,CAGAI,gBAAgB7W,GACZ,OAAOA,GAlB4B,GAmBvC,CAGA8W,qBAAqB9W,EAAY+W,GAE1BA,EAASC,eAAehX,EAAYF,KAAKsW,aACrCtW,KAAK6W,uBAAuBF,IAC3B3W,KAAK6W,YAAc,IAAIH,EAInC,CAGAS,0BAA0BjX,GACtB,OAASF,KAAKsW,YAnCY,IAmCgCtW,KAAK+W,gBAAgB7W,IAAiBF,KAAK+W,gBAAgB7W,EACzH,CAGAkX,oBAAoBlX,GAChB,OAAQF,KAAKsW,YAxCa,IAwC+BtW,KAAK+W,gBAAgB7W,EAClF,CAGAE,WAAWF,EAAaC,EAAkB8W,GACtC,IAAII,EAAYrX,KAAK6W,YAAYzW,WAAWD,EAAkBH,KAAKsW,WAAYtW,KAAKuW,oBACpFvW,KAAKsW,WAAae,EAAU,GAC5BrX,KAAKuW,mBAAqBc,EAAU,GACpCrX,KAAKgX,qBAAqB9W,EAAY+W,EAC1C,CAGA1W,MAAML,EAAaI,EAAW2W,GAC1B,IAAII,EAAYrX,KAAK6W,YAAYtW,MAAMD,EAAYN,KAAKsW,WAAYtW,KAAKuW,oBACzEvW,KAAKsW,WAAae,EAAU,GAC5BrX,KAAKuW,mBAAqBc,EAAU,GACpCrX,KAAKgX,qBAAqB9W,EAAY+W,EAC1C,CAGAK,UAAUC,GACNvX,KAAKsW,WAAaiB,GACZvX,KAAKsW,WAAWN,EAAU,EAAK,GACjChW,KAAKuW,oBAAsBzT,KAAK0U,KAAMxX,KAAKsW,WAAWN,EAAU,GAAKC,EAClEjW,KAAKuW,mBAAqB,IACzBvW,KAAKuW,mBAAqB,IAEzBvW,KAAKsW,aAAeN,IACzBhW,KAAKuW,mBAAqBN,IAElC,CAGAwB,gBACI,OAAOzX,KAAKsW,UAChB,ECzEW,MAAMoB,EAEjB5X,YAAY6X,GACR3X,KAAK4X,QAAU,EACf5X,KAAK6X,SAAW,EAChB7X,KAAK8X,MAAQ,EACb9X,KAAK+X,OAAS,EACd/X,KAAKgY,MAAQ,EACbhY,KAAKiY,OAAS,EACdjY,KAAKkY,MAAQ,EACblY,KAAKmY,MAAQ,EACbnY,KAAKoY,YAAc,CAACpY,KAAK6X,QAAS7X,KAAK4X,QAAS5X,KAAK8X,MAAO9X,KAAK+X,OAAQ/X,KAAKgY,MAAOhY,KAAKiY,OAAQjY,KAAKkY,MAAOlY,KAAKmY,OAEnHnY,KAAKqY,aAAerY,KAAK4X,QACzB5X,KAAK2X,UAAYA,EAEjB3X,KAAKsY,uBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAClDtY,KAAKuY,uBAAyB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAEzD,CAEAC,aAAaC,GACT,GAAIzY,KAAKoY,YAAYnH,QAAQwH,IAAU,EACnC,OAAO,EAEP,MAAM,IAAI5R,MAAM,SAAW4R,EAAQ,iBAE3C,CAGAC,yBAAyBC,EAASC,GAC9B,OAASA,EAAc5Y,KAAKsY,uBAAuBxV,KAAK+H,IAAI8N,GAAY,KACnE3Y,KAAKuY,uBAAuBzV,KAAK+H,IAAI8N,GAAY,GAAK3Y,KAAKsY,uBAAuBxV,KAAK+H,IAAI8N,GAAY,GAChH,CAGAE,kBAAkBF,EAAUC,GACxB,GAAGD,IAAa3Y,KAAK4X,SAAY9U,KAAK+H,IAAI8N,KAAc3Y,KAAK8X,OAAShV,KAAK+H,IAAI+N,GAAe,EAC1F,OAAO5Y,KAAK2X,UAAUF,gBAE1B,GAAGkB,IAAa3Y,KAAK6X,SAAWe,EAAc,EAC1C,OAAO,EAEX,GAAGD,EAAW,GAAKC,EAAc,EAC7B,OAAO,EAEX,IAAIE,EAAkB9Y,KAAK0Y,yBAAyBC,EAAUC,GAC9D,GAAKE,EAAkB,EACnB,OAAO9C,EACN,CACD,IAAI+C,EAASD,EAAkB7C,EAC/B,OAAQD,GAAW,EAAIlT,KAAK2T,KAAKsC,EAAO9C,GAC5C,CACJ,CAGAc,gBAAgB7W,GACZ,OAAOA,IA3D4B,GA4DvC,CAGAgX,iBACI,OAAO,CACX,CAGA8B,eAAeC,EAAiB/Y,GAC5B+Y,EAAkBnW,KAAK+H,IAAIoO,GAC3B,IAAI3C,EAAatW,KAAK2X,UAAUF,gBAEhC,GAAGzX,KAAKqY,eAAiBrY,KAAK4X,QAC1B,OAAO,EAGX,IAAIsB,GAAyBhZ,EAAc,GAAG,EAC1CiZ,EAA2BnZ,KAAKsY,uBAAuBxV,KAAK+H,IAAI7K,KAAKqY,cAAgB,IAAM,EAAIvV,KAAK2T,IAA2B,GAAtByC,IAQzGE,GAAgB,GAJWH,EAAkBE,IADzBnZ,KAAKuY,uBAAuBzV,KAAK+H,IAAI7K,KAAKqY,cAAgB,GAAKc,KAKrC,EAQlD,OANGC,EAAe,IACdA,EAAe,GAzFH,EA4FqBpZ,KAAKqY,aACJ/B,EAAa8C,CAGvD,CAEA5Y,cACI,CAIJ6Y,kBACI,OAAOrZ,KAAKqY,YAChB,EC1GW,MAAMiB,UAAkB5B,EAGnClX,YAAYN,EAAayY,EAAUM,GAC/B,IAAGjZ,KAAKwY,aAAaG,KAAa3Y,KAAK+W,gBAAgB7W,GAInD,MAAM,IAAI2G,MAAM,+CAHhB7G,KAAKqY,aAAeM,EACpB3Y,KAAK2X,UAAUL,UAAUtX,KAAK6Y,kBAAkBF,EAAUM,EAAiB/Y,GAInF,CAGAgX,eAAehX,EAAaoW,GACxB,OAAQtW,KAAK+W,gBAAgB7W,IAAgBoW,EAfnB,GAgB9B,ECfW,MAAMiD,UAAyB7B,EAE1ClX,YAAYN,EAAayY,EAAUM,GAC5BjZ,KAAKwY,aAAaG,KACjB3Y,KAAKqY,aAAeM,EACpB3Y,KAAK2X,UAAUL,UAAUtX,KAAK6Y,kBAAkBF,EAAUM,EAAiB/Y,IAEnF,ECDJ,MAAM6G,EAAW,CAAC,EAAE,EAAE,GAEP,MAAMyS,UAAY7I,EAE7B7Q,YAAY8R,GACRtQ,QACAtB,KAAK2X,UAAY,IAAIf,EACrB5W,KAAKiX,SAAW,IAAIsC,EAAiBvZ,KAAK2X,WAC1C3X,KAAKyZ,qBAAuB,EAC5BzZ,KAAK0Z,oBAAsB,EAC3B1Z,KAAKuC,SAAW,IAAIH,KAAQ2E,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAC/D/G,KAAK2Z,mBAAqB,IAAI1E,KAAQ,EAAE,EAAE,EAAE,GAC5CjV,KAAK0R,KAAO,IACZ1R,KAAKiJ,aAAe,IAAI7G,KAAQ,EAAE,IAAI,GACtCpC,KAAKsC,SAAW,IAAI2S,KAAQ,EAAE,EAAE,EAAE,GAClCjV,KAAKyR,QAAU,IAAIrP,KAAQ,EAAE,EAAE,GAE/BpC,KAAK4Z,WAAa,IAAIpI,EAAWxR,KAAKuC,SAAUvC,KAAK2Z,mBAAoB3Z,KAAKyR,QAASzR,KAAK0R,KAAM1R,KAAKiJ,aAAc2I,EAAc,GACnI5R,KAAK4Z,WAAWC,kBAEpB,CAGAzZ,WAAWF,EAAaC,GACpBH,KAAK2X,UAAUvX,WAAWF,EAAaC,EAAiBH,KAAKiX,UAC1D9W,EAAmB,IAAOH,KAAK2X,UAAUP,oBAAoBlX,GAC5DF,KAAK4Z,WAAWtE,eAAgBtV,KAAKiX,SAAS+B,eAAehZ,KAAK4Z,WAAW7D,cAAe7V,IAE5FF,KAAK4Z,WAAWtE,eAAgB,EAExC,CAGA/U,MAAML,EAAaI,GACfN,KAAK2X,UAAUpX,MAAML,EAAaI,EAAWN,KAAKiX,UAElDjX,KAAK4Z,WAAWrZ,MAnCM,IAmCAD,EAC1B,CAGAE,YAAYN,EAAayY,GACrB3Y,KAAKiX,SAASzW,YAAYN,EAAayY,EAAU3Y,KAAK4Z,WAAW7D,cACrE,CAGA+D,mBACI,CAIJC,kBACI,CAIJnZ,YACIZ,KAAK2X,UAAUb,QACnB,CAGApW,cAAcC,GACVX,KAAK0Z,oBAAsB/Y,EAC3BX,KAAK4Z,WAAW/D,oBAAqBlV,EACzC,CAGAG,SACI,IAAIkZ,EAAsBha,KAAK4Z,WAAWpF,gBAC1CxU,KAAKuC,SAAWyX,EAA6B,QAAY,SACzDha,KAAKsC,SAAW0X,EAA6B,QAAY,SACzDha,KAAK8J,WAAakQ,EAA4B,OAC9C1Y,MAAM6P,gBAAgBnR,KAAKia,mBAC/B,CAGAC,kBACI,OAAOla,KAAK0Z,mBAChB,CAGAO,mBACI,MAAO,CACH,UAAaja,KAAKyZ,qBAClB,SAAYzZ,KAAK4Z,WAAW7D,cAC5B,kBAAqB/V,KAAK0Z,oBAC1B,SAAY1Z,KAAKuC,SACjB,SAAYvC,KAAKsC,SACjB,YAAetC,KAAK4Z,WACpB,WAAc5Z,KAAK8J,WACnB,IAAO9J,KAAKyX,gBAEpB,CAEA0C,WACI,OAAOna,KAAK4Z,WAAW7D,aAC3B,CAEA0B,gBACI,OAAOzX,KAAK2X,UAAUF,eAC1B,CAEA1W,eAAeC,GACE,cAAVA,EACChB,KAAKiX,SAAW,IAAIsC,EAAiBvZ,KAAK2X,WAC5B,WAAT3W,IAELhB,KAAKiX,SAAW,IAAIqC,EAAUtZ,KAAK2X,WAE3C,CAEA0B,kBACI,OAAOrZ,KAAKiX,SAASoC,iBACzB,EClHW,MAAMe,UAAuBzJ,EAGxC7Q,YAAYyC,EAAUgB,EAAYkO,EAASC,EAAMC,EAAOC,EAAcC,GAClEvQ,QACAtB,KAAKuC,SAAWA,EAChBvC,KAAKuD,WAAaA,EAClBvD,KAAKyR,QAAUA,EACfzR,KAAK0R,KAAOA,EACZ1R,KAAK2R,MAAQA,EACb3R,KAAK4R,aAAeA,EAChBC,IAAUA,EAAW,GACzB7R,KAAK6R,SAAWA,CACpB,CAGA/M,sBACI,OAAO,IACX,CAGAA,yBAEI,IAAIyM,QAAaF,EAAavI,cAC9B9I,KAAKyR,QAAU,IAAIF,EAAKO,UAAU9R,KAAKyR,QAAQvO,EAAGlD,KAAKyR,QAAQtO,EAAGnD,KAAKyR,QAAQrO,GAC/EpD,KAAKuR,KAAOA,EACZ,IAAIQ,EAAY,IAAIR,EAAKS,YACzBD,EAAUE,cACVF,EAAUG,UAAU,IAAIX,EAAKO,UAAU9R,KAAKuC,SAASW,EAAGlD,KAAKuC,SAASY,EAAGnD,KAAKuC,SAASa,IACvF2O,EAAUI,YAAY,IAAIZ,EAAKa,aAAapS,KAAKuD,WAAWL,EAAGlD,KAAKuD,WAAWJ,EAAGnD,KAAKuD,WAAWH,EAAGpD,KAAKuD,WAAWF,IAErHrD,KAAKqS,cAAgB,IAAId,EAAKS,YAE9B,IAAIM,EAAc,IAAIf,EAAKgB,qBAAqBR,GAE5CJ,QAAc3R,KAAKqa,gBACvB1I,EAAM2I,UAAU,KAChB3I,EAAMc,sBAAsBzS,KAAK0R,KAAM1R,KAAKyR,SAE5C,IAAIiB,EAAgB,IAAInB,EAAKoB,4BAA4B3S,KAAK0R,KAAMY,EAAaX,EAAO3R,KAAKyR,SAC7FzR,KAAK4S,UAAY,IAAIrB,EAAKsB,YAAYH,GAEtC1S,KAAK4S,UAAUE,YAAY9S,KAAK6R,UAChC7R,KAAK4S,UAAUG,mBAAmC,EAAhB/S,KAAK6R,UAEvC7R,KAAK4R,aAAaoB,aAAahT,KAAK4S,WAEhC5S,KAAK0R,KAAO,GACZ1R,KAAK4S,UAAUc,mBAlDE,EAoDzB,CAGAc,gBACI,IAAIlC,EAActS,KAAK4S,UAAU2H,iBACjC,GAAGjI,EAAY,CACXA,EAAYkI,kBAAkBxa,KAAKqS,eAEnC,IAAI9P,EAAWvC,KAAKqS,cAAcyC,YAC9BxS,EAAWtC,KAAKqS,cAAc0C,cAClC,MAAM5T,EAAW,CACb,SAAY,IAAIiB,KAAQG,EAASW,IAAKX,EAASY,IAAKZ,EAASa,KAC7D,SAAY,IAAI6R,KAAQ3S,EAASY,IAAKZ,EAASa,IAAKb,EAASc,IAAKd,EAASe,MAG/E,OADArD,KAAKmR,gBAAgBhQ,GACdA,CACX,CACI,MAAM,IAAI0F,MAAM,sCAExB,CAGA4T,kBAAkBC,GACd,IAAIC,EAAc,IAAI3a,KAAKuR,KAAKO,UAAU9R,KAAK0R,KAAKgJ,EAAexX,EAAGlD,KAAK0R,KAAKgJ,EAAevX,EAAGnD,KAAK0R,KAAKgJ,EAAetX,GAC3HpD,KAAK4S,UAAUgI,WAAWD,EAC9B,CAGAtF,eACI,OAAOrV,KAAK4S,SAChB,ECpFW,MAAMiI,UAAmBT,EAGpCtV,sBACI,IAAIyM,QAAaF,EAAavI,cAC9B,OAAO,IAAIyI,EAAKiB,WAAW,IAAIjB,EAAKO,UAAU9R,KAAK2R,MAAMzO,EAAE,EAAGlD,KAAK2R,MAAMxO,EAAE,EAAGnD,KAAK2R,MAAMvO,EAAE,GAC/F,ECLW,MAAM0X,UAAoBvW,EAErCzE,YAAY0E,GACRlD,MAAMkD,GACNxE,KAAKwE,cAAgBA,EACrBxE,KAAK+a,WAAa,GAClB/a,KAAKgb,cAAgB,GACrBhb,KAAKib,OAAS,KACdjb,KAAKkB,cAAgB,IACzB,CAEAuE,UAC6B,MAAtBzF,KAAKkB,gBACJlB,KAAK6E,YAAYtC,SAAS+B,IACtBtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,GAGnCpD,KAAK6E,YAAYtB,WAAWe,IACxBtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,EAC/BpD,KAAKkB,cAAwB,SAAEmC,GAI3C,CAGAyB,iBAAiBpB,EAAOuB,EAAY1C,EAAU2C,GAC1C,IAAIlF,KAAK6E,YAAY,CACjB,MAAMqW,EAAW,IAAI1Z,IAAwBxB,KAAK+a,WAAY/a,KAAKgb,cAAehb,KAAKib,OAAQ,QAAIE,GAAW,GACxGhS,GAAU,IAAI3H,MAAsB4Z,KAAKpb,KAAKwE,eAC9C+B,EAAW,IAAI/E,IAAyB,CAAE6Z,IAAKlS,IAC/CmS,EAAc,IAAI9Z,IAAyB,CAAE4H,MAAO,WACpDmS,EAAgB,IAAI/Z,IAAqC,EAAnBxB,KAAKgb,cAAiB,GAAwB,EAAnBhb,KAAKgb,eACtEQ,EAAM,IAAIha,IAAY+Z,EAAeD,GAC3CE,EAAIjZ,SAAS+B,IAAI,GAAGtE,KAAKib,OAAO,EAAE,GAClC,MAAMQ,EAAO,IAAIja,IAAY0Z,EAAU3U,GACvCkV,EAAKlZ,SAAS+B,IAAI,EAAE,EAAE,GACtBtE,KAAK6E,YAAc,IAAIrD,IACvBxB,KAAK6E,YAAY/C,IAAI2Z,GAAM3Z,IAAI0Z,GAC/Bxb,KAAK6E,YAAYU,KAAON,EACxBjF,KAAK6E,YAAYtC,SAAS+B,IAAI/B,EAAS,GAAIA,EAAS,GAAIA,EAAS,IACjEvC,KAAK6E,YAAYK,MAAMZ,IAAIY,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAErDlF,KAAK+a,YAAc7V,EAAM,GACzBlF,KAAKgb,eAAiB9V,EAAM,GAC5BlF,KAAKib,QAAU/V,EAAM,GAErBxB,EAAM5B,IAAI9B,KAAK6E,YACnB,CACA,OAAO7E,IACX,ECtDW,MAAM0b,UAAwBtB,EAMzCtV,sBACI,IAAIyM,QAAaF,EAAavI,cAC9B,OAAO,IAAIyI,EAAKoK,gBAAgB,IAAIpK,EAAKO,UAAU9R,KAAK2R,MAAMzO,EAAGlD,KAAK2R,MAAMxO,EAAGnD,KAAK2R,MAAMvO,GAC9F,ECNW,MAAMwY,UAAuBrX,EACxCzE,YAAY0E,GACRlD,MAAMkD,GACNxE,KAAKwE,cAAgBA,EACrBxE,KAAK6b,gBAAkB,6BACvB7b,KAAK8b,KAAO,GACZ9b,KAAK+b,gBAAkB,GACvB/b,KAAKkB,cAAgB,IACzB,CAEAuE,UAC6B,MAAtBzF,KAAKkB,gBACJlB,KAAK6E,YAAYtC,SAAS+B,IACtBtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,GAGnCpD,KAAK6E,YAAYtB,WAAWe,IACxBtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,EAC/BpD,KAAKkB,cAAwB,SAAEmC,GAG3C,CAEA2Y,mBAAmB9W,GACf,MAAMiE,GAAU,IAAI3H,MAAsB4Z,KAAK,0BAC/CjS,EAAQ8S,MAAQza,KAChB2H,EAAQ+S,MAAQ1a,KAChB2H,EAAQgT,OAAO7X,IAAK,EAAG,GAAGY,GAC1B,MAAMkX,EAAmB,IAAI5a,IAAyB,CAAC6Z,IAAKlS,EAAU4K,KAAMvS,MACtE6a,EAAmB,IAAI7a,IAAkB,EAAExB,KAAK8b,KAAK,GAAI9b,KAAK+b,gBAAiB/b,KAAK8b,MAC1F,OAAO,IAAIta,IAAY6a,EAAkBD,EAC7C,CAEAE,iBAAiBpX,GACb,MAAMgW,EAAW,IAAI1Z,IAAmB,GAAGxB,KAAK8b,KAAK,GAAI,GAAK9b,KAAK8b,MAC7D3S,GAAU,IAAI3H,MAAsB4Z,KAAKpb,KAAKwE,eAEpD2E,EAAQgT,OAAO7X,IAAK,EAAG,EAAEY,GACzBiE,EAAQ8S,MAAQza,KAChB2H,EAAQ+S,MAAQ1a,KAChB,MAAM+E,EAAW,IAAI/E,IAAyB,CAAC6Z,IAAKlS,EAAU4K,KAAMvS,MACpE,OAAO,IAAIA,IAAY0Z,EAAU3U,EACrC,CAEAzB,wBAAwB+G,GACpB,MAAMhD,QAAenC,EAAOoC,cAE5B,aAD4BD,EAAQ,YAAWgD,MAC1B0Q,OACzB,CAEAzX,sBAAsBvC,EAAUia,GAC5B,IAAIC,QAAgBzc,KAAK0c,kBAAkB,EAAGC,SAAuB,EAAd7Z,KAAK8Z,WAC5DH,EAAQlX,KAAO,kBAAkBiX,EACjCC,EAAQla,SAASW,EAAIX,EAAS,GAAG,GAAGvC,KAAK8b,KAAK,GAC9CW,EAAQla,SAASY,EAAIZ,EAAS,GAAGvC,KAAK+b,gBAAgB,IACtDU,EAAQla,SAASa,EAAIb,EAAS,GAAGvC,KAAK6c,KAAK,EAAE,EA7DhB,EA6DkBL,EAC/CC,EAAQvX,MAAMhC,EAAI,GAClBuZ,EAAQvX,MAAM/B,EAAI,EAClBsZ,EAAQvX,MAAM9B,EAAI,GAClBqZ,EAAQhS,aAAa,IAAIjJ,KAAc,EAAE,EAAE,IAAKsB,KAAKC,GAAG,GACxD0Z,EAAQK,eACRL,EAAQM,oBACRN,EAAQO,kBAAmB,EAC3B,IAAIC,QAAsBjd,KAAK0c,kBAAkB,EAAGC,SAAuB,EAAd7Z,KAAK8Z,WAClEK,EAAc1X,KAAO,iBAAiBiX,EACtCS,EAAc1a,SAASW,EAAIX,EAAS,GAAG,GAAGvC,KAAK8b,KAAK,GACpDmB,EAAc1a,SAASY,EAAIZ,EAAS,GAAGvC,KAAK+b,gBAAgB,IAC5DkB,EAAc1a,SAASa,EAAIb,EAAS,GAAGvC,KAAK6c,KAAK,EAAE,EAzEtB,EAyEwBL,EACrDS,EAAc/X,MAAMhC,EAAI,GACxB+Z,EAAc/X,MAAM/B,EAAI,EACxB8Z,EAAc/X,MAAM9B,EAAI,GACxB6Z,EAAcxS,aAAa,IAAIjJ,KAAc,EAAE,EAAE,GAAIsB,KAAKC,GAAG,GAC7Dka,EAAcH,eACdG,EAAcF,oBACdE,EAAcD,kBAAmB,EACjChd,KAAK6E,YAAY/C,IAAI2a,EAASQ,EAClC,CAEAnY,iBAAiBpB,EAAOuB,EAAY1C,EAAU2C,GAC1C,IAAIlF,KAAK6E,YAAY,CACjB,MAAMqY,EAAald,KAAKsc,iBAAiBpX,GACnCiY,EAAend,KAAKgc,mBAAmB9W,GACvCkY,EAAgBpd,KAAKgc,mBAAmB9W,GAC9CgY,EAAW3a,SAAS+B,IAAI,EAAE,EAAE,GAC5B6Y,EAAa5a,SAAS+B,KAAK,IAAItE,KAAK8b,KAAK,GAAG9b,KAAK+b,gBAAgB,EAAE,GACnEqB,EAAc7a,SAAS+B,IAAI,IAAItE,KAAK8b,KAAK,GAAG9b,KAAK+b,gBAAgB,EAAE,GACnE/b,KAAK6E,YAAc,IAAIrD,IACvBxB,KAAK6E,YAAY/C,IAAIob,GAAYpb,IAAIqb,GAAcrb,IAAIsb,GACvD,IAAK,IAAIlX,EAAE,EAAGA,EAAE,EAAEhB,EAAOgB,IACrBlG,KAAKqd,gBAAgB9a,EAAU2D,GAEnClG,KAAK6E,YAAYU,KAAON,EACxBjF,KAAK6E,YAAYtC,SAAS+B,IAAI/B,EAAS,GAAIA,EAAS,GAAIA,EAAS,IACjE2a,EAAWhY,MAAMZ,IAAI,EAAK,EAAKY,GAC/BiY,EAAajY,MAAMZ,IAAI,EAAK,EAAKY,GACjCkY,EAAclY,MAAMZ,IAAI,EAAK,EAAKY,GAClCgY,EAAWJ,eACXI,EAAWH,oBACXG,EAAWF,kBAAmB,EAC9BG,EAAaL,eACbK,EAAaJ,oBACbI,EAAaH,kBAAmB,EAChCI,EAAcN,eACdM,EAAcL,oBACdK,EAAcJ,kBAAmB,EACjChd,KAAK6E,YAAYmY,kBAAmB,EACpChd,KAAK6c,KAAO7c,KAAK8b,KAAK5W,EACtBxB,EAAM5B,IAAI9B,KAAK6E,YACnB,CACA,OAAO7E,IACX,ECrHW,MAAMsd,UAAqB/Y,EACtCzE,YAAY0E,GACRlD,MAAMkD,GACNxE,KAAKwE,cAAgBA,EACrBxE,KAAK6b,gBAAkB,6BACvB7b,KAAK8b,KAAO,GACZ9b,KAAK+b,gBAAkB,GACvB/b,KAAKud,YAAc,KACnBvd,KAAKkB,cAAgB,IACzB,CAGAuE,UAC6B,MAAtBzF,KAAKkB,gBACJlB,KAAK6E,YAAYtC,SAAS+B,IACtBtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,GAGnCpD,KAAK6E,YAAYtB,WAAWe,IACxBtE,KAAKkB,cAAwB,SAAEgC,EAC/BlD,KAAKkB,cAAwB,SAAEiC,EAC/BnD,KAAKkB,cAAwB,SAAEkC,EAC/BpD,KAAKkB,cAAwB,SAAEmC,GAG3C,CAGAma,cAAcC,EAAMC,EAAMC,GACtB,MAAMC,EAAS,GACf,IAAK,IAAI1X,EAAE,EAAGA,GAAGyX,EAAazX,IAC1B0X,EAAOnQ,KAAK,IAAIjM,KACZic,EAAKva,GAAKwa,EAAKxa,EAAIua,EAAKva,GAAKgD,EAAEyX,EAC/BF,EAAKta,GAAKua,EAAKva,EAAIsa,EAAKta,GAAK+C,EAAEyX,EAC/BF,EAAKra,GAAKsa,EAAKta,EAAIqa,EAAKra,GAAK8C,EAAEyX,IAGvC,OAAOC,CACX,CAEAC,sBACI,IAAIC,EAAe,IAAItc,MAAexB,KAAKud,YAAY,EAAE,GAAGvd,KAAKud,YAAY,GAC7E,MAAMQ,EAAa/d,KAAKwd,cAAcM,EAAc,IAAItc,MAAexB,KAAKud,YAAY,EAAE,EAAEvd,KAAKud,YAAY,IAAK,GAM5GS,EALQ,IAAIxc,KACd,IAAIA,MAAexB,KAAKud,YAAY,EAAEvd,KAAKud,YAAY,IACvD,IAAI/b,MAAexB,KAAKud,YAAY,EAAEvd,KAAKud,YAAY,GACvD,IAAI/b,MAAexB,KAAKud,YAAY,GAAGvd,KAAKud,YAAY,IAElCU,UAAU,IACpC,IAAK,IAAI/X,EAAE,EAAGA,EAAE8X,EAAY7X,OAAQD,IAChC8X,EAAY9X,GAAK,IAAI1E,KAAcwc,EAAY9X,GAAGhD,EAAG,EAAG8a,EAAY9X,GAAG/C,GAE3E,MAAM+a,EAAmBle,KAAKwd,cAAc,IAAIhc,MAAexB,KAAKud,YAAY,GAAG,EAAEvd,KAAKud,YAAY,GAAI,IAAI/b,KAAcxB,KAAKud,YAAY,EAAE,EAAEvd,KAAKud,YAAY,GAAI,GAChKY,EAAkBne,KAAKwd,cAAc,IAAIhc,KAAcxB,KAAKud,YAAY,EAAE,EAAEvd,KAAKud,YAAY,GAAI,IAAI/b,KAAcxB,KAAKud,YAAY,EAAE,GAAGvd,KAAKud,YAAY,GAAI,GAC9Ja,EAAmBpe,KAAKwd,cAAc,IAAIhc,KAAcxB,KAAKud,YAAY,EAAE,GAAGvd,KAAKud,YAAY,GAAI,IAAI/b,MAAexB,KAAKud,YAAY,EAAE,GAAGvd,KAAKud,YAAY,GAAI,GACvK,MAAO,IACAQ,KACAC,KACAE,KACAC,KACAC,EAEX,CAGAC,sBACI,MAAMC,EAAO,IAAI9c,IACXoc,EAAS5d,KAAK6d,sBACdU,EAAWX,EAAOzX,OAElBqY,EAAe,CAAC,GAAG,GAAG,IACtBC,EAAU,GACVC,EAAM,GACNC,EAAM,GACNC,EAAM,GACZ,IAAIC,EAAU,EACVC,EAAU,EACd,IAAK,IAAI5Y,EAAE,EAAGA,EAAE0X,EAAOzX,OAAQD,IAC3B2Y,GAAWjB,EAAO1X,GAAGhD,EACrB4b,GAAWlB,EAAO1X,GAAG9C,EAGzB,IAAK,IAAI8C,EAAE,EAAGA,EAAE0X,EAAOzX,OAAQD,IAC3BsY,EAAa,GAAG/Q,KAAKmQ,EAAO1X,GAAGhD,EAAG0a,EAAO1X,GAAG/C,EAAGya,EAAO1X,GAAG9C,GACzDob,EAAa,GAAG/Q,KAAKmQ,EAAO1X,GAAGhD,EAAGlD,KAAK+b,gBAAiB6B,EAAO1X,GAAG9C,GAClEob,EAAa,GAAG/Q,KAAKoR,EAAQjB,EAAOzX,OAAQnG,KAAK+b,gBAAiB+C,EAAQlB,EAAOzX,QAIjFuY,EAAIjR,KAAK,OAAQ,GACjBkR,EAAIlR,MAAMmQ,EAAO1X,GAAGhD,EAAElD,KAAKud,YAAY,GAAGvd,KAAKud,aAAcK,EAAO1X,GAAG9C,EAAEpD,KAAKud,YAAY,GAAGvd,KAAKud,aAClGqB,EAAInR,MAAOoR,EAAQjB,EAAOzX,OAAQnG,KAAKud,YAAY,GAAGvd,KAAKud,aAAeuB,EAAQlB,EAAOzX,OAAQnG,KAAKud,YAAY,GAAGvd,KAAKud,aAE9H,MAAMwB,EAAK,IAAIL,KAAQA,KAAQC,KAAQC,GACjCI,EAAS,IAAIR,EAAa,MAAOA,EAAa,MAAOA,EAAa,MAAOA,EAAa,IAC5F,IAAK,IAAItY,EAAE,EAAGA,EAAI+Y,EAAS/Y,IACvB,IAAK,IAAIgZ,EAAE,EAAGA,EAAIX,EAAUW,IAExBT,EAAQhR,KAAKvH,EAAEqY,EAASW,EAAE,GAC1BT,EAAQhR,MAAMvH,EAAE,GAAGqY,EAASW,EAAE,GAC9BT,EAAQhR,KAAKvH,EAAEqY,EAASW,GAExBT,EAAQhR,KAAKvH,EAAEqY,EAASW,GACxBT,EAAQhR,MAAMvH,EAAE,GAAGqY,EAASW,EAAE,GAC9BT,EAAQhR,MAAMvH,EAAE,GAAGqY,EAASW,GAIpC,MAAMC,EAAY,IAAIC,aAAaJ,GAC7BK,EAAQ,IAAID,aAAaL,GAI/B,OAHAT,EAAKgB,SAASb,GACdH,EAAKiB,aAAa,WAAY,IAAI/d,IAAsB2d,EAAW,IACnEb,EAAKiB,aAAa,KAAM,IAAI/d,IAAsB6d,EAAO,IAClDf,CACX,CAGAtC,qBACI,MAAM7S,GAAU,IAAI3H,MAAsB4Z,KAAK,0BAC/CjS,EAAQgT,OAAO7X,IAAK,EAAG,GACvB6E,EAAQ8S,MAAQza,KAChB2H,EAAQ+S,MAAQ1a,KAChB,MAAM4a,EAAmB,IAAI5a,IAAyB,CAAC6Z,IAAKlS,EAAU4K,KAAMvS,MACtE6a,EAAmBrc,KAAKqe,sBAC9B,OAAO,IAAI7c,IAAY6a,EAAkBD,EAC7C,CAEAE,mBACI,MAAMpB,EAAW,IAAI1Z,IAAmBxB,KAAK8b,KAAM,GAAK9b,KAAK8b,MACvD3S,GAAU,IAAI3H,MAAsB4Z,KAAKpb,KAAKwE,eACpD2E,EAAQgT,OAAO7X,IAAK,EAAG,GACvB6E,EAAQ8S,MAAQza,KAChB2H,EAAQ+S,MAAQ1a,KAChB,MAAM+E,EAAW,IAAI/E,IAAyB,CAAC6Z,IAAKlS,EAAU4K,KAAMvS,MACpE,OAAO,IAAIA,IAAY0Z,EAAU3U,EACrC,CAGAzB,iBAAiBpB,EAAOuB,EAAY1C,GAChC,IAAIvC,KAAK6E,YAAY,CACjB,MAAMqY,EAAald,KAAKsc,mBACxBY,EAAW3a,SAAS+B,IAAI,EAAE,EAAE,GAC5BtE,KAAK6E,YAAc,IAAIrD,IACvBxB,KAAK6E,YAAY/C,IAAIob,GACrB,IAAK,IAAIhX,EAAE,EAAGA,EAAE,EAAGA,IAAI,CACnB,MAAMsZ,EAAWxf,KAAKgc,qBACd,IAAJ9V,GACAsZ,EAASjd,SAAS+B,KAAKtE,KAAK8b,KAAK,EAAE9b,KAAKud,YAAY,EAAE,IAAK,GAAGvd,KAAK8b,KAAK,EAAE9b,KAAKud,YAAY,GAC3FiC,EAAS/U,aAAa,IAAIjJ,KAAc,EAAE,EAAE,GAAIsB,KAAKC,GAAG,IAC/C,IAAJmD,GACLsZ,EAASjd,SAAS+B,KAAKtE,KAAK8b,KAAK,EAAE9b,KAAKud,YAAY,EAAE,IAAK,EAAEvd,KAAK8b,KAAK,EAAE9b,KAAKud,YAAY,GAC1FiC,EAAS/U,aAAa,IAAIjJ,KAAc,EAAE,EAAE,GAAIsB,KAAKC,KAC5C,IAAJmD,EACLsZ,EAASjd,SAAS+B,IAAItE,KAAK8b,KAAK,EAAE9b,KAAKud,YAAY,EAAE,IAAK,GAAGvd,KAAK8b,KAAK,EAAE9b,KAAKud,YAAY,IAE1FiC,EAASjd,SAAS+B,IAAItE,KAAK8b,KAAK,EAAE9b,KAAKud,YAAY,EAAE,IAAK,EAAEvd,KAAK8b,KAAK,EAAE9b,KAAKud,YAAY,GACzFiC,EAAS/U,aAAa,IAAIjJ,KAAc,EAAE,EAAE,IAAKsB,KAAKC,GAAG,IAE7Dyc,EAAS1C,eACT0C,EAASzC,oBACTyC,EAASxC,kBAAmB,EAC5Bhd,KAAK6E,YAAY/C,IAAI0d,EACzB,CACAxf,KAAK6E,YAAYU,KAAON,EACxBjF,KAAK6E,YAAYtC,SAAS+B,IAAI/B,EAAS,GAAIA,EAAS,GAAIA,EAAS,IACjE2a,EAAWJ,eACXI,EAAWH,oBACXG,EAAWF,kBAAmB,EAC9Bhd,KAAK6E,YAAYiY,eACjB9c,KAAK6E,YAAYkY,oBACjB/c,KAAK6E,YAAYmY,kBAAmB,EACpCtZ,EAAM5B,IAAI9B,KAAK6E,YACnB,CACA,OAAO7E,IACX,EC3KW,MAAMyf,EAGjB3f,YAAY4D,EAAMkO,GACd5R,KAAK0D,MAAQA,EACb1D,KAAK4R,aAAeA,EACpB5R,KAAK0f,gBAAkB,GACvB1f,KAAK2f,iBAAmB,EAC5B,CAGAnL,gBACIxU,KAAK0f,gBAAgBE,SAAQ,SAASC,GAClCA,EAAKrL,eACT,GACJ,CAGA/O,UACIzF,KAAK2f,iBAAiBC,SAAQ,SAASE,GACnCA,EAAOra,SACX,GACJ,CAGAX,sBAAsBvC,EAAS4D,EAAQ2N,EAAOiM,EAAQzd,EAAU0d,EAAazO,GAA4B,IAAtB0O,EAAaC,UAAA/Z,OAAA,QAAAgV,IAAA+E,UAAA,GAAAA,UAAA,GAAG,KAE/F,MAAM/W,GAAU,IAAI3H,MAAsB4Z,KAAM4E,GAChD7W,EAAQ8S,MAAQza,KAChB2H,EAAQ+S,MAAQ1a,KAChB2H,EAAQgT,OAAO7X,IAAK6B,EAAQ4Z,GAC5B,MAAMI,EAAgB,IAAI3e,IAA4B,CAAC6Z,IAAKlS,EAAU4K,KAAMvS,MAC5E,GAAIye,EAAe,CACf,IAAIG,GAAgB,IAAI5e,MAAsB4Z,KAC1C6E,GAEJG,EAAcjE,OAAO7X,IAAK6B,EAAQ4Z,GAClCK,EAAcnE,MAAQza,KACtB4e,EAAclE,MAAQ1a,KACtB2e,EAAcE,UAAYD,EAC1BD,EAAcG,YAAYhc,IAAI,GAAI,GACtC,CACA,MAAMic,EAAQ,IAAI/e,IAAmB2E,EAAQ2N,EAAOiM,GACpDQ,EAAMrY,QAAQ5F,GACd,MAAMke,EAAiB,IAAIhf,KAC3Bgf,EAAeC,iBAAkB,IAAIjf,KAAe,EAAG,EAAG,GAAKc,GAE/D,IAAIoe,EAAc,IAAI7F,EAClB,IAAIrZ,KAAce,EAAS,GAAGA,EAAS,GAAGA,EAAS,IACnDie,EACA,IAAIjP,EAAKO,UAAU,EAAE,EAAE,GACvB,EACA,IAAItQ,KAAc2E,EAAQ2N,EAAOiM,GACjC/f,KAAK4R,aACL,WAGE8O,EAAY7G,mBAClB7Z,KAAK0f,gBAAgBjS,KAAKiT,GAC1B,IAAIC,EAAO,IAAInf,IAAY+e,EAAOJ,GAClCQ,EAAKpe,SAAS+B,IAAI/B,EAAS,GAAGA,EAAS,GAAGA,EAAS,IACnDvC,KAAK0D,MAAM5B,IAAI6e,EACnB,CAGA7b,iBAAiBvC,EAAWgP,GACxB,IAAIkK,EAAO,IAAIX,EAAY,4BAC3BW,EAAKmF,WAAW5gB,KAAK0D,MAAO,cAAenB,EAAU,CAAE,GAAK,GAAK,KACjE,IAAIse,EAAc,IAAInF,EAClB,IAAIla,KAAce,EAAS,GAAGA,EAAS,GAAGA,EAAS,KACnD,IAAIf,MAAmBif,iBAAkB,IAAIjf,KAAe,EAAG,EAAG,GAAK,GACvE,IAAI+P,EAAKO,UAAU,EAAE,EAAE,GACvB,GACA,IAAItQ,KAAcia,EAAKT,cAAeS,EAAKR,OAAO,EAAGQ,EAAKT,eAC1Dhb,KAAK4R,aACL,WAEEiP,EAAYhH,mBAClB7Z,KAAK0f,gBAAgBjS,KAAKoT,GAC1BA,EAAYhQ,eAAe4K,GAC3Bzb,KAAK2f,iBAAiBlS,KAAKgO,EAC/B,CAEA3W,yBAAyBvC,EAAUue,EAAQvP,GACvC,IAAIwP,EAAgB,IAAIlG,EACpB,IAAIrZ,KAAce,EAAS,GAAIA,EAAS,GAAIA,EAAS,KACrD,IAAIf,MAAmBif,iBAAkB,IAAIjf,KAAe,EAAG,EAAG,GAAK,GACvE,IAAI+P,EAAKO,UAAU,EAAE,EAAE,GACvB,EACA,IAAItQ,KAAcsf,EAAOhF,KAAM,GAAKgF,EAAOjE,MAC3C7c,KAAK4R,aACL,WAEEmP,EAAclH,mBACpB,IAAImH,EAAsB,IAAInG,EAC1B,IAAIrZ,KAAce,EAAS,GAAG,IAAIue,EAAOhF,KAAK,GAAIvZ,EAAS,GAAGue,EAAO/E,gBAAgB,EAAGxZ,EAAS,KACjG,IAAIf,MAAmBif,iBAAkB,IAAIjf,KAAe,EAAG,EAAG,GAAK,GACvE,IAAI+P,EAAKO,UAAU,EAAE,EAAE,GACvB,EACA,IAAItQ,KAAc,EAAEsf,EAAOhF,KAAK,GAAIgF,EAAO/E,gBAAiB+E,EAAOjE,MACnE7c,KAAK4R,aACL,WAEEoP,EAAoBnH,mBAC1B,IAAIoH,EAAuB,IAAIpG,EAC3B,IAAIrZ,KAAce,EAAS,GAAG,IAAIue,EAAOhF,KAAK,GAAIvZ,EAAS,GAAGue,EAAO/E,gBAAgB,EAAGxZ,EAAS,KACjG,IAAIf,MAAmBif,iBAAkB,IAAIjf,KAAe,EAAG,EAAG,GAAK,GACvE,IAAI+P,EAAKO,UAAU,EAAE,EAAE,GACvB,EACA,IAAItQ,KAAc,EAAEsf,EAAOhF,KAAK,GAAIgF,EAAO/E,gBAAiB+E,EAAOjE,MACnE7c,KAAK4R,aACL,WAEEqP,EAAqBpH,mBAC3BkH,EAAclQ,eAAeiQ,GAC7B9gB,KAAK0f,gBAAgBjS,KAAKsT,GAC1B/gB,KAAK0f,gBAAgBjS,KAAKuT,GAC1BhhB,KAAK0f,gBAAgBjS,KAAKwT,EAC9B,CAGAnc,mBAAmBvC,EAAUD,EAAUiP,EAAM2P,GACzC,IAAIJ,EAAS,IAAIlF,EAAe,2BAC1BkF,EAAOF,WAAW5gB,KAAK0D,MAAO,SAAUnB,EAAU2e,SAClDlhB,KAAKmhB,mBAAmB5e,EAAUue,EAAQvP,GAChDvR,KAAK2f,iBAAiBlS,KAAKqT,EAC/B,CAGAhc,yBAAyBvC,EAAUD,EAAUiP,GACzC,IAAI6P,EAAe,IAAI9D,EAAa,gCAC9B8D,EAAaR,WAAW5gB,KAAK0D,MAAO,eAAgBnB,GAC1DvC,KAAK2f,iBAAiBlS,KAAK2T,EAC/B,CAGAtc,qBACI,IAAIyM,QAAaF,EAAavI,cAC9B9I,KAAKqhB,gBAAiB,CAAE,GAAI,EAAG,IAAM,GAAI,EAAG,IAAKve,KAAKC,GAAG,EAAG,yBAA0BwO,EAAM,8BAC5FvR,KAAKqhB,gBAAiB,EAAG,GAAI,EAAG,IAAM,GAAI,EAAG,IAAKve,KAAKC,GAAG,EAAG,yBAA0BwO,EAAM,8BAC7FvR,KAAKqhB,gBAAiB,CAAE,EAAG,EAAG,GAAK,IAAK,GAAK,IAAK,EAAG,yBAA0B9P,EAAM,8BACrFvR,KAAKshB,WAAY,CAAE,EAAG,GAAK,IAAM/P,GACjCvR,KAAKshB,WAAY,CAAE,EAAG,GAAK,IAAM/P,GACjCvR,KAAKshB,WAAY,CAAE,EAAG,GAAK,IAAM/P,EACrC,CAEAzM,0BACI,IAAIyM,QAAaF,EAAavI,cAC9B9I,KAAKuhB,aAAa,CAAC,EAAE,EAAE,GAAI,EAAGhQ,EAAM,GACpCvR,KAAKwhB,mBAAmB,CAAC,EAAE,EAAE,IAAQ,EAAGjQ,EAC5C,EC9JJ,MAAMkQ,GAEL9a,oBAAqBtF,GAEpB,MAAMqgB,EAASC,SAASC,cAAe,UA0EvC,SAASC,IAERH,EAAOI,MAAMC,QAAU,GAEvBL,EAAOI,MAAME,OAAS,OACtBN,EAAOI,MAAMG,KAAO,mBACpBP,EAAOI,MAAMhO,MAAQ,QAErB4N,EAAOQ,aAAe,KACtBR,EAAOS,aAAe,KAEtBT,EAAOU,QAAU,IAElB,CAoBA,SAASC,EAAgBC,GAExBA,EAAQR,MAAMvf,SAAW,WACzB+f,EAAQR,MAAMS,OAAS,OACvBD,EAAQR,MAAMU,QAAU,WACxBF,EAAQR,MAAMW,OAAS,iBACvBH,EAAQR,MAAMY,aAAe,MAC7BJ,EAAQR,MAAMa,WAAa,kBAC3BL,EAAQR,MAAM1Y,MAAQ,OACtBkZ,EAAQR,MAAMc,KAAO,yBACrBN,EAAQR,MAAMe,UAAY,SAC1BP,EAAQR,MAAMgB,QAAU,MACxBR,EAAQR,MAAMiB,QAAU,OACxBT,EAAQR,MAAMkB,OAAS,KAExB,CAEA,GAAK,OAAQvX,UAmBZ,OAjBAiW,EAAO7V,GAAK,WACZ6V,EAAOI,MAAMC,QAAU,OAEvBM,EAAgBX,GAEhBjW,UAAUwX,GAAGC,mBAAoB,gBAAiBC,MAAM,SAAWC,GAElEA,EAnIF,WAEC,IAAIC,EAAiB,KAErBve,eAAewe,EAAkBC,GAEhCA,EAAQC,iBAAkB,MAAOC,SAE3BpiB,EAAS4hB,GAAGS,WAAYH,GAC9B7B,EAAOiC,YAAc,UAErBN,EAAiBE,CAElB,CAEA,SAASE,IAERJ,EAAeO,oBAAqB,MAAOH,GAE3C/B,EAAOiC,YAAc,WAErBN,EAAiB,IAElB,CAIA3B,EAAOI,MAAMC,QAAU,GAEvBL,EAAOI,MAAME,OAAS,UACtBN,EAAOI,MAAMG,KAAO,mBACpBP,EAAOI,MAAMhO,MAAQ,QAErB4N,EAAOiC,YAAc,WAErBjC,EAAOQ,aAAe,WAErBR,EAAOI,MAAMgB,QAAU,KAExB,EAEApB,EAAOS,aAAe,WAErBT,EAAOI,MAAMgB,QAAU,KAExB,EAEApB,EAAOU,QAAU,WAEhB,GAAwB,OAAnBiB,EAA0B,CAS9B,MAAMQ,EAAc,CAAEC,iBAAkB,CAAE,cAAe,gBAAiB,gBAAiB,WAC3FrY,UAAUwX,GAAGc,eAAgB,eAAgBF,GAAcV,KAAMG,GACjE7gB,aAAauhB,QAAQ,MAAM,EAE5B,MAECX,EAAeY,KAIjB,CAED,CA6DcC,IA1CbrC,IAEAH,EAAOiC,YAAc,oBA0CfP,GAAa3B,GAAS0C,oBAE1BzC,EAAO0C,OAIT,IAAIC,OA5CL,SAA2BC,GAE1BzC,IAEA0C,QAAQC,KAAM,sDAAuDF,GAErE5C,EAAOiC,YAAc,gBAEtB,IAsCQjC,EAED,CAEN,MAAM+C,EAAU9C,SAASC,cAAe,KAoBxC,OAlBgC,IAA3BngB,OAAOijB,iBAEXD,EAAQE,KAAOhD,SAASiD,SAASD,KAAKE,QAAS,SAAU,UACzDJ,EAAQK,UAAY,sBAIpBL,EAAQE,KAAO,4BACfF,EAAQK,UAAY,uBAIrBL,EAAQ3C,MAAMG,KAAO,mBACrBwC,EAAQ3C,MAAMhO,MAAQ,QACtB2Q,EAAQ3C,MAAMiD,eAAiB,OAE/B1C,EAAgBoC,GAETA,CAER,CAED,CAIA9d,wCAEC,GAAK,OAAQ8E,UAAY,CAIxB,GAAK,iBAAiBuZ,KAAMvZ,UAAUwZ,WAAc,OAEpDxZ,UAAUwX,GAAGO,iBAAkB,kBAAkB,KAEhD/B,GAAS0C,oBAAqB,CAAI,GAIpC,CAED,EAnMK1C,GAiLE0C,oBAAqB,EAsB7B1C,GAASyD,iC,iCCvLM,MAAMC,WAAmBC,YAGpCtlB,cACIwB,QACAtB,KAAKqlB,MAAQ,CACT,WAAc,EACd,SAAY,EACZ,aAAgB,GAEpBrlB,KAAK0f,gBAAkB,GACvBjd,aAAauhB,QAAQ,MAAM,GAC3BhkB,KAAKslB,aAAc,EACnBtlB,KAAKulB,MAAQ,IAAIC,IACrB,CAGA1gB,0BAEI9E,KAAK2f,iBAAmB,GACxB3f,KAAK0D,MAAQ,IAAIlC,KACjBxB,KAAKqB,SAAW,IAAIG,KAAoB,CACpCikB,OAAO,EACPC,gBAAgB,mBAChBC,WAAU,IACd3lB,KAAKqB,SAASukB,QAASnkB,OAAOC,WAAYD,OAAOE,aACjD3B,KAAKqB,SAASwkB,cAAe,QAAU,GACvC7lB,KAAKuB,OAAS,IAAIH,EAAOpB,KAAKqB,UAC9BrB,KAAKuB,OAAOkC,oBAAoBzD,KAAK0D,OACrC1D,KAAKulB,MAAMO,UAAW,GACtBnE,SAASoE,KAAKC,YAAYhmB,KAAKulB,MAAMU,KACrCjmB,KAAKkmB,MAAQ,IAAI1kB,UAGXxB,KAAKmmB,aAGXnmB,KAAKomB,aAAe,IAAI5kB,IAAmB,SAAU,GACrDxB,KAAK0D,MAAM5B,IAAI9B,KAAKomB,cAEpBpmB,KAAKqmB,MAAQ,IAAI5G,EAAazf,KAAK0D,MAAO1D,KAAK4R,oBACzC5R,KAAKqmB,MAAMC,oBACjBtmB,KAAK0f,gBAAgBjS,KAAKzN,KAAKqmB,OAC/BrmB,KAAK2f,iBAAiBlS,KAAKzN,KAAKqmB,OAGhCrmB,KAAKmH,SAAW,IAAIqS,EAAIxZ,KAAK4R,cAC7B,IAAIjM,EAAW,IAAIuB,EACnBlH,KAAKmH,SAAS0J,eAAelL,GAC7B3F,KAAKmH,SAAS0J,eAAe7Q,KAAKuB,QAClCvB,KAAK2f,iBAAiBlS,WAAW9H,EAASib,WAAW5gB,KAAK0D,QAC1D1D,KAAKmH,SAASgK,kBAGdnR,KAAKumB,UAAYvmB,KAAKumB,UAAUC,KAAKxmB,MACrCA,KAAKymB,mBAAqBzmB,KAAKymB,mBAAmBD,KAAKxmB,MACvDA,KAAK0mB,eAAiB1mB,KAAK0mB,eAAeF,KAAKxmB,MAG/CA,KAAK0mB,iBAEL1mB,KAAKqB,SAASslB,cAAcllB,OAAOmlB,kBACnC5mB,KAAKqB,SAAS4hB,GAAG4D,SAAU,EAC3B7mB,KAAKqB,SAAS4hB,GAAG6D,0BAA0B,KAC3C9mB,KAAK+mB,MAAMf,YAAYhmB,KAAKqB,SAAS6C,YACrCyd,SAASoE,KAAKC,YAAavE,GAASuF,aAAchnB,KAAKqB,WACvDrB,KAAKqB,SAAS4lB,iBAAiBjnB,KAAKumB,UAExC,CAGAG,iBACIjlB,OAAO+hB,iBAAiB,SAAUxjB,KAAKymB,oBACvChlB,OAAO+hB,iBAAiB,uBAAuB,SAASne,GACpD0J,EAA+BmY,gBACnC,IAEAvF,SAAS6B,iBAAiB,WAAY2D,IAClC,IAAIC,EAAYD,EAAME,IAEtB,OADArnB,KAAKmH,SAAS4J,eAAe/Q,KAAKuB,QAC3B6lB,GACH,IAAK,IACDpnB,KAAKuB,OAAS,IAAIH,EAAOpB,KAAKqB,UAC9BrB,KAAKuB,OAAOkC,oBAAoBzD,KAAK0D,OACrC,MACJ,IAAK,IACD1D,KAAKuB,OAAS,IAAIwC,EAAc/D,KAAKqB,UACrC,MACJ,IAAK,IACDrB,KAAKuB,OAAS,IAAIoC,EAAgB,IAAIvB,MAAS,KAAM,IAAM,KAC3D,MACJ,IAAK,IACDpC,KAAKuB,OAAS,IAAIoC,EAAgB,IAAIvB,KAAQ,KAAM,IAAM,KAC1D,MACJ,IAAK,IACDpC,KAAKuB,OAAS,IAAIoC,EAAgB,IAAIvB,KAAQ,EAAK,GAAM,IAKjEpC,KAAKmH,SAAS0J,eAAe7Q,KAAKuB,QAClCvB,KAAKmH,SAASgK,iBAAiB,IAE9B,EACT,CAGArM,mBACI,IAAIyM,QAAaF,EAAavI,cAC9B9I,KAAKqS,cAAgB,IAAId,EAAKS,YAC9B,IAAIsV,EAA2B,IAAI/V,EAAKgW,gCACpCC,EAAa,IAAIjW,EAAKkW,sBAAsBH,GAC5CI,EAAuB,IAAInW,EAAKoW,iBAChCC,EAAS,IAAIrW,EAAKsW,oCAEtB7nB,KAAK4R,aAAe,IAAIL,EAAKuW,wBAAwBN,EAAYE,EAAsBE,EAAQN,GAC/FtnB,KAAK4R,aAAamW,WAAW,IAAIxW,EAAKO,UAAU,GAAG,IAAI,GAC3D,CAGA2U,qBACIzmB,KAAKuB,OAAOQ,eACZ/B,KAAKqB,SAASukB,QAAQnkB,OAAOC,WAAYD,OAAOE,aAChD3B,KAAKqB,SAAS2mB,OAAQhoB,KAAK0D,MAAO1D,KAAKuB,OAAOiC,oBAClD,CAGA+iB,YACIvmB,KAAKulB,MAAM0C,QACX,IAAIC,EAAYloB,KAAKkmB,MAAMiC,WAC3BnoB,KAAK4R,aAAawW,eAAeF,EAAW,IAC5CloB,KAAK2f,iBAAiBC,SAAQ,SAASE,GACnCA,EAAOra,SACX,IACAzF,KAAK0f,gBAAgBE,SAAQ,SAASC,GAClCA,EAAKrL,eACT,IACAxU,KAAKuB,OAAOW,8BACZwO,EAAwB5H,YAAY9I,KAAKmH,UAAUkH,cACnDrO,KAAKqoB,SAAS,CAAC,SAAYroB,KAAKmH,SAASgT,WAAY,WAAcna,KAAKmH,SAASsQ,gBAAiB,aAAgBzX,KAAKmH,SAASkS,oBAChIrZ,KAAKqB,SAAS2mB,OAAQhoB,KAAK0D,MAAO1D,KAAKuB,OAAOiC,qBAC9CxD,KAAKulB,MAAMtB,KAEf,CAEA+D,SACI,OACIM,gBAAA,OAAKxG,MAAO,CAAChO,MAAM,SAAS7N,SAAA,CACxBsiB,eAAA,OAAKzG,MAAO,CAACvf,SAAS,WAAYimB,IAAI,OAAQC,MAAM,OAAQrf,MAAM,MAAO0K,MAAM,SAAUjI,GAAG,aAAY5F,SACpGqiB,gBAAA,KAAGxG,MAAO,CAAEkB,OAAQ,GAAIjB,QAAS,QAAS2G,WAAY,QAAQziB,SAAA,CAAE,kBAC5C0W,SAAS3c,KAAKqlB,MAAMhN,mBAG5CkQ,eAAA,OAAKI,IAAK5B,IAAU/mB,KAAK+mB,MAAQA,CAAK,MAIlD,E,YCzKJ,MAAM6B,GAAY,CAChB9U,MAAM,QACNiM,OAAO,QACP8I,gBAAiB,mCACjBC,eAAe,QACfC,iBAAkB,aAIPC,GAAWA,KAEtB,MAAMC,EAAWC,eAEjB,OACEX,eAAAY,YAAA,CAAAljB,SACEsiB,eAAA,OAAKzG,MAAO8G,GAAU3iB,SACpBqiB,gBAAA,OAAKzc,GAAG,aAAaiW,MAAO,CAACvf,SAAS,WAAYimB,IAAI,KAAMC,MAAM,MAAMxiB,SAAA,CACtEsiB,eAAA,OAAKa,UAAW,gBAAgBnjB,SAC9BqiB,gBAAA,MAAIxG,MAAO,CAACe,UAAU,SAAUwG,SAAS,QAAQpjB,SAAA,CAAC,UACzCsiB,eAAA,SAAK,iBAGhBA,eAAA,OAAKa,UAAW,wBAAwBnjB,SACtCsiB,eAAA,UACEa,UAAW,iBACXE,QAASA,IAAML,EAAS,UAAUhjB,SACnC,cAIHsiB,eAAA,OAAKa,UAAW,wBAAwBnjB,SACxCsiB,eAAA,UACIa,UAAW,iBACXE,QAASA,IAAML,EAAS,iBAAiBhjB,SAC1C,wBAIHsiB,eAAA,OAAKa,UAAW,wBAAwBnjB,SACtCsiB,eAAA,UACEa,UAAW,iBACXE,QAASA,IAAML,EAAS,YAAYhjB,SACrC,6BAMN,E,yEC5CA,MAAMsjB,GAAeC,IAAyC,IAAvC,YAACC,EAAW,kBAAEC,GAAkBF,EAC1D,MAAOG,EAAMC,GAAWC,IAAMC,UAAS,GAEvCD,IAAME,WAAU,KACZH,EAAQH,EAAY,GACrB,CAACA,IAEJ,MAAMO,EAAeC,aAAO,MAAPA,EAAcC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC/CnI,QAAS,OACTqI,WAAY,SACZtW,MAAM,OACN0O,QAAS2H,EAAME,QAAQ,EAAG,MAEvBF,EAAMG,OAAOC,QAChBC,eAAgB,aACnB,IAED,OACIjC,eAAAY,YAAA,CAAAljB,SACIsiB,eAACkC,KAAI,CAAAxkB,SACDqiB,gBAACoC,KAAM,CACHC,GAAI,CACA7W,MAAOrS,OAAOC,WAAW,EACzBkpB,WAAY,EACZ,qBAAsB,CACtB9W,MAAOrS,OAAOC,WAAW,EACzBmpB,UAAW,eAGfC,QAAQ,aACRC,OAAO,QACPpB,KAAMA,EAAK1jB,SAAA,CAEXqiB,gBAAC0B,EAAY,CAACZ,UAAU,gBAAgBE,QAASI,EAAkBzjB,SAAA,CAC/DsiB,eAACyC,KAAgB,IACjBzC,eAAA,OAAKzG,MAAO,CAAChO,MAAM,QAAQ7N,SACvBsiB,eAAA,MAAIzG,MAAO,CAACe,UAAU,QAASoI,aAAa,IAAIhlB,SAAC,wBAGzDsiB,eAAC2C,KAAO,UAGjB,E,yBChDJ,MAAMC,GAAeC,0BCOtBC,GAAgB,CAClB,KAAQ,KACR,SAAY,KACZ,OAAU,MAIDC,GAAc9B,IAAuC,IAArC,UAAC+B,EAAS,kBAAE7B,GAAkBF,EAEvD,MAAOG,EAAMC,GAAWC,IAAMC,UAAS,IACjC,oBAAC0B,EAAmB,iBAAEC,GAAoB5B,IAAM6B,WAAWP,IAEjEtB,IAAME,WAAU,KACZH,EAAQ2B,EAAU,GACnB,CAACA,IAIJ,MAAMvB,EAAeC,aAAO,MAAPA,EAAcC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CAC/CnI,QAAS,OACTqI,WAAY,SACZ5H,QAAS2H,EAAME,QAAQ,EAAG,MAEvBF,EAAMG,OAAOC,QAChBC,eAAgB,WACnB,KAEMmB,EAAcC,GAAmB/B,IAAMC,SAASuB,IAgBvD,OAEI9C,eAAAY,YAAA,CAAAljB,SACIsiB,eAACkC,KAAI,CAAAxkB,SACDqiB,gBAACoC,KAAM,CACHC,GAAI,CACA7W,MAAOrS,OAAOC,WAAW,EACzBkpB,WAAY,EACZ,qBAAsB,CACtB9W,MAAOrS,OAAOC,WAAW,EACzBmpB,UAAW,eAGfC,QAAQ,aACRC,OAAO,OACPpB,KAAMA,EAAK1jB,SAAA,CAEXqiB,gBAAC0B,EAAY,CAACV,QAASI,EAAmBN,UAAU,gBAAenjB,SAAA,CAC/DsiB,eAAA,OAAKzG,MAAO,CAAChO,MAAM,QAAQ7N,SACvBsiB,eAAA,MAAIzG,MAAO,CAACe,UAAU,OAAQgJ,YAAY,IAAI5lB,SAAC,YAEnDsiB,eAACuD,KAAe,OAEpBvD,eAAC2C,KAAO,IACR3C,eAACkC,KAAI,CAAC3I,MAAO,CAAC0I,eAAgB,SAAUzI,QAAS,OAAQqI,WAAW,SAAU2B,cAAc,UAAU9lB,SAE9F+lB,OAAOC,QAAQN,GAActQ,KAAI6Q,IAA6B,IAA3BC,EAAUC,GAAWF,EACpD,OACI3D,eAAA,OACI8D,IAAM,GAAEF,IAERG,IAAM,GAAEH,QACRrY,MAAO,GACPiM,OAAQ,GACRqJ,UAAY,oBAAmBgD,IAC/B9C,QAASA,IAhDpBiD,KACrB,MAAMC,EAAgB,IAAInB,IAC1BmB,EAAcD,GAAQ,WACtBX,EAAgBY,GAChBhB,EAAoB,CAChBiB,aAAcF,EACdrnB,MAAO,EACPwnB,UAAW,EACXC,UAAW,EACX3J,OAAQyI,EAAmBA,EAAiBzI,OAAS,EAAI,GAC3D,EAsC6C4J,CAAgBT,IAL1BA,EAMP,YAQ3B,E,wDC3FX,MAGaU,GAAarD,IAA0C,IAAzC,kBAACsD,EAAiB,eAAEC,GAAevD,EAC1D,MAAOwD,EAAYC,GAAiBnD,mBAASiD,EAAejZ,QACrDoZ,EAAaC,GAAkBrD,mBAASiD,EAAehN,QAUhE,OACEuI,gBAACmC,KAAI,CAACliB,WAAS,EAAE6kB,UAAU,MAAMtZ,MAAO,MAAOuZ,WAAY,MAC3D7C,eAAe,eACfJ,WAAW,SAASC,QAAS,EAAEpkB,SAAA,CAC3BqiB,gBAACmC,KAAI,CAAC8B,MAAI,EAACe,GAAI,EAAErnB,SAAA,CACjBsiB,eAAA,KAAAtiB,SAAG,WACDsiB,eAAA,SACE/X,MAAOwc,EACPO,KAAK,SACLC,KAAK,IACPC,SACKtG,IACC,IAAI3W,EAAQmM,SAASwK,EAAMuG,OAAOld,MAAMmd,WAAW,IAAI,IAAIA,WAAW,IAAI,KAC1EV,EAAczc,EA5BN,MA4BkDA,EAAM,OAMxE+X,eAACkC,KAAI,CAAC8B,MAAI,EAACe,GAAI,EAAErnB,SACfqiB,gBAAA,OAAAriB,SAAA,CACEsiB,eAAA,KAAAtiB,SAAG,UACHsiB,eAAA,SACE/X,MAAO0c,EACPK,KAAK,SACLC,KAAK,IACLC,SACGtG,IACC,IAAI3W,EAAQmM,SAASwK,EAAMuG,OAAOld,MAAMmd,WAAW,IAAI,IAAIA,WAAW,IAAI,KAC1ER,EAAe3c,EA3CR,MA2CsDA,EAAM,SAO7E+X,eAACkC,KAAI,CAAC8B,MAAI,EAACe,GAAI,EAAErnB,SACfsiB,eAACqF,KAAM,CAAC9C,QAAQ,YAAYxB,QA7CjBuE,KACff,EACE,CACEhZ,MAAOkZ,EACPjN,OAAQmN,GAEX,EAuCiDjnB,SAAC,mBAE9C,E,yBC1DX,MAAM6nB,GAAoB,GAEnB,MAAMC,GAETjuB,YAAYkuB,EAAiBC,EAAUC,GACnC,MAAMC,EAAcH,EAAgB,GAAG,GAAGI,OACpCC,EAAYL,EAAgB,GAAG,GAAGI,OAClCE,EAAYN,EAAgB,GAAG,GAAGI,OAClCG,EAAaP,EAAgB,GAAG,GAAGI,OACzCpuB,KAAKsC,SAAWtC,KAAKwuB,wBAAwBH,EAAWE,EAAYD,EAAWH,GAC/EnuB,KAAKyuB,KAAO,CACRX,GACAA,IAEJ9tB,KAAKuC,SAAW,CACZ0rB,EAASH,GAAoBA,GAC7BI,EAAYJ,GAAoBA,GAExC,CAEAnnB,8BAA8BqnB,GAC1B,CAGJrnB,uBAAuB+nB,GACnB,OAAOA,EAAKN,OAAS,EAAI,CAC7B,CAEAznB,iCAAiCqnB,GAC7B,IAAIW,EAAW,EACXC,EAAc,EAGlB,OAFAD,GAAYZ,GAAec,gBAAgBb,EAAgB,GAAG,IAAMD,GAAec,gBAAgBb,EAAgB,GAAG,IACtHY,GAAeb,GAAec,gBAAgBb,EAAgB,GAAG,IAAMD,GAAec,gBAAgBb,EAAgB,GAAG,IAClH,CAACW,EAAUC,EACtB,CAEAE,aACI,OAAO,CACX,CAGAN,0BACI,CAGJO,YACI,MAAO,CACH,WAAc/uB,KAAKuC,SAAS,GAC5B,WAAcvC,KAAKuC,SAAS,GAC5B,SAAYvC,KAAKsC,SACjB,OAAUtC,KAAKyuB,KAAK,GACpB,OAAUzuB,KAAKyuB,KAAK,GAE5B,CAEAO,4BAGI,MAAO,EAFMhvB,KAAKuC,SAAS,GAAKurB,IAAuBA,IAC1C9tB,KAAKuC,SAAS,GAAKurB,IAAuBA,GAE3D,CAGAmB,eACI,OAAOjvB,KAAKuC,SAAS,EACzB,CAEA2sB,eACI,OAAOlvB,KAAKuC,SAAS,EACzB,CAEA4sB,WACI,OAAOnvB,KAAKyuB,KAAK,EACrB,CAEAW,WACI,OAAOpvB,KAAKyuB,KAAK,EACrB,EC3EJ,MAAMY,GAAqB,CACvB,YAAe,EACf,YAAevsB,KAAKC,GAAG,EACvB,aAAgBD,KAAKC,GACrB,aAAwB,EAARD,KAAKC,GAAK,GCJ9B,MAAMssB,GAAqB,CACvB,WAAc,EACd,SAAYvsB,KAAKC,GAAG,GCFxB,MAAMssB,GAAqB,CACvB,WAAc,EACd,YAAevsB,KAAKC,GAAG,EACvB,WAAcD,KAAKC,GACnB,aAAwB,EAARD,KAAKC,GAAK,GCNvB,MAAMusB,GAETxvB,YAAYyvB,GACRvvB,KAAKwvB,SAAWxvB,KAAKyvB,kBAAkBF,GACvCvvB,KAAK0vB,eAAiB1vB,KAAK2vB,cAC/B,CAIAF,kBAAkBF,GAGd,MAAMK,EAAO,CAAC,EACRC,EAAO,CAAC,EACd,IAAIC,EAAgB,GAEpB,IAAI,IAAI5pB,EAAI,EAAGA,EAAIqpB,EAAeppB,OAAQD,IAAI,CAC1C,IAAK6pB,EAAWC,GAAaT,EAAerpB,GAAG8oB,4BAC3CO,EAAerpB,GAAG+pB,gBACZF,KAAaH,IACfA,EAAKG,GAAa,IAEtBH,EAAKG,GAAWtiB,KAAK,CAAC,IAAMuiB,EAAW,OAAST,EAAerpB,OAGzD8pB,KAAaH,IACfA,EAAKG,GAAa,IAEtBH,EAAKG,GAAWviB,KAAK,CAAC,IAAMsiB,EAAW,OAASR,EAAerpB,KAEvE,CACA,IAAI,MAAO,CAAEsK,KAAUwb,OAAOC,QAAQ2D,GAClCE,EAAgB,IAAIA,KAAkB9vB,KAAKkwB,yBAAyB1f,IAExE,IAAI,MAAO,CAAEA,KAAUwb,OAAOC,QAAQ4D,GAClCC,EAAgB,IAAIA,KAAkB9vB,KAAKkwB,yBAAyB1f,IAExE,OAAOsf,CAEX,CAGAI,yBAAyBC,GACrB,MAAMC,EAAa,GAEnB,IAAM,IAAIlqB,EAAE,EAAGA,EAAEiqB,EAAMhqB,OAAQD,IAEjB,IAANA,GAAYiqB,EAAMjqB,GAAQ,IAAIiqB,EAAMjqB,EAAE,GAAQ,IAAI,EAClDkqB,EAAW3iB,KAAK,CAAC0iB,EAAMjqB,GAAW,SAElCkqB,EAAWA,EAAWjqB,OAAS,GAAGsH,KAAK0iB,EAAMjqB,GAAW,QAGhE,OAAOkqB,CACX,CAGAT,eACI,MAAMU,EAAe,GACrB,IAAI,IAAInqB,EAAI,EAAGA,EAAIlG,KAAKwvB,SAASrpB,OAAQD,IAAI,CAEzCqe,QAAQ/M,IAAIxX,KAAKwvB,SAAStpB,IAC1B,MAAMoqB,EAAgB,CAClB,WAActwB,KAAKwvB,SAAStpB,GAAGqqB,QAAO,CAACC,EAAMC,IAASD,EAAOC,EAAKxB,gBAAgB,GAAGjvB,KAAKwvB,SAAStpB,GAAGC,OACtG,WAAcnG,KAAKwvB,SAAStpB,GAAGqqB,QAAO,CAACC,EAAMC,IAASD,EAAOC,EAAKvB,gBAAgB,GAAGlvB,KAAKwvB,SAAStpB,GAAGC,OACtG,SAAYnG,KAAKwvB,SAAStpB,GAAG,GAAG5D,SAChC,OAAUtC,KAAKwvB,SAAStpB,GAAG,GAAG+pB,eAAiBjwB,KAAKwvB,SAAStpB,GAAGqqB,QAAO,CAACC,EAAMC,IAASD,EAAOC,EAAKtB,YAAY,GAAKnvB,KAAKwvB,SAAStpB,GAAG,GAAGipB,WACxI,OAAWnvB,KAAKwvB,SAAStpB,GAAG,GAAG+pB,eAAsFjwB,KAAKwvB,SAAStpB,GAAG,GAAGkpB,WAAzFpvB,KAAKwvB,SAAStpB,GAAGqqB,QAAO,CAACC,EAAMC,IAASD,EAAOC,EAAKrB,YAAY,GAChH,KAAQ,YAEZiB,EAAa5iB,KAAK6iB,EACtB,CACA,OAAOD,CACX,CAEAK,oBACI,OAAO1wB,KAAK0vB,cAChB,EC3EJ,MAAMiB,GAAmB,CHKlB,cAA6B5C,GAGhCpnB,8BAA8BqnB,GAE1B,IAAKW,EAAUC,GAAeb,GAAe6C,0BAA0B5C,GACvE,OAAuB,IAAhBY,GAAkC,IAAbD,GAAoC,IAAhBC,GAAkC,IAAbD,CAEzE,CAEAH,wBAAwBhG,EAAKvG,EAAM4O,EAAKpI,GACpC,OAAGD,GAAOqI,EACCxB,GAA6B,SAErCpN,GAAQwG,EACA4G,GAA+B,gBAD1C,CAGJ,CAEAP,aACI,OAAO,CACX,CAGAC,YACI,IAAI+B,EAAOxvB,MAAMytB,YAEjB,OADA+B,EAAW,KAAI,WACRA,CACX,CAGAb,eACI,OAAOjwB,KAAKsC,WAAa+sB,GAA+B,UAC5D,GD/BG,cAAoBtB,GAEvBpnB,8BAA8BqnB,GAE1B,IAAKW,EAAUC,GAAeb,GAAe6C,0BAA0B5C,GACvE,OAAqB,IAAbW,GAAkC,IAAhBC,CAC9B,CAEAJ,wBAAwBhG,EAAKvG,EAAM4O,EAAKpI,GACpC,OAAGD,GAAOvG,EACCoN,GAAgC,YAExCpN,GAAQ4O,EACAxB,GAAgC,YAExCwB,GAAOpI,EACC4G,GAAiC,aAEzC5G,GAASD,EACD6G,GAAiC,kBAD5C,CAGJ,CAEAN,YACI,IAAI+B,EAAOxvB,MAAMytB,YAEjB,OADA+B,EAAW,KAAI,QACRA,CACX,GE5BG,cAAsB/C,GAEzBpnB,8BAA8BqnB,GAC1B,IAAKW,EAAUC,GAAeb,GAAe6C,0BAA0B5C,GACvE,OAAuB,IAAhBY,GAAkC,IAAbD,GAAoC,IAAhBC,GAAkC,IAAbD,CACzE,CAEAH,wBAAwBhG,EAAKvG,EAAM4O,EAAKpI,GACpC,OAAGD,GAAOvG,GAAQwG,EACP4G,GAA+B,WAEvCpN,GAAQ4O,GAAOrI,EACP6G,GAAgC,YAExCwB,GAAOpI,GAASxG,EACRoN,GAA+B,WAEvC5G,GAASD,GAAOqI,EACRxB,GAAiC,kBAD5C,CAGJ,CAEAN,YACI,IAAI+B,EAAOxvB,MAAMytB,YAEjB,OADA+B,EAAW,KAAI,WACRA,CACX,GG/BG,cAA2B/C,GAE9BpnB,8BAA8BqnB,GAC1B,IAAKW,EAAUC,GAAeb,GAAe6C,0BAA0B5C,GACvE,OAAuB,IAAhBY,GAAkC,IAAbD,CAChC,CAEAH,0BAEI,OAAO,CACX,CAEAO,YACI,IAAI+B,EAAOxvB,MAAMytB,YAEjB,OADA+B,EAAW,KAAI,eACRA,CACX,IDVG,MAAMC,GAETjxB,YAAYkxB,EAAWC,GACnBjxB,KAAKgxB,UAAYA,EACjBhxB,KAAKkxB,mBAAqBD,EAAkBjxB,KAAKmxB,2BAA6BnxB,KAAKoxB,wBACvF,CAEAC,mBACI,MAAMC,EAAuB,GACvBC,EAAqB,GAE3B,IAAM,IAAIrrB,EAAI,EAAGA,EAAIlG,KAAKgxB,UAAU7qB,OAASD,IACzC,IAAM,IAAIgZ,EAAI,EAAGA,EAAIlf,KAAKgxB,UAAU9qB,GAAGC,OAAS+Y,IAAK,CAEjD,GADelf,KAAKgxB,UAAU9qB,GAAGgZ,GACtBkP,OAAO,CACd,MAAMoD,EAAexxB,KAAKyxB,mBAAmBvrB,EAAGgZ,GAC5CsS,EAAa1C,aACbwC,EAAqB7jB,KAAK+jB,GAG1BD,EAAmB9jB,KAAK+jB,EAEhC,CACJ,CAGJ,MAAME,EAA4B1xB,KAAK2xB,oBAAoBL,GAE3D,MAAO,IADUC,EAAmBlW,KAAIyF,GAAUA,EAAOiO,iBAC/B2C,EAG9B,CAEAP,2BAA2BS,EAAUC,GACjC,MAAMC,EAAS,GACf,IAAK,IAAI5rB,EAAI0rB,EAAW,EAAG1rB,GAAK0rB,EAAW,EAAG1rB,IAAI,CAC9C,MAAM6rB,EAAW,GAEXC,EAAU9rB,EAAI,EAAIlG,KAAKgxB,UAAU7qB,OAAO,EAAID,EAAIlG,KAAKgxB,UAAU7qB,OACrE,IAAK,IAAIhD,EAAI0uB,EAAc,EAAG1uB,GAAK0uB,EAAc,EAAG1uB,IAAK,CAErD,MAAM8uB,EAAa9uB,EAAI,EAAInD,KAAKgxB,UAAUgB,GAAS7rB,OAAO,EAAIhD,EAAInD,KAAKgxB,UAAUgB,GAAS7rB,OAC1F4rB,EAAStkB,KAAKzN,KAAKgxB,UAAUgB,GAASC,GAC1C,CACAH,EAAOrkB,KAAKskB,EAChB,CACA,OAAOD,CACX,CAEAV,yBAAyBQ,EAAUC,GAC/B,MAAMC,EAAS,GACTI,EAAc,CAChB,QAAU,GAEd,IAAK,IAAIhsB,EAAI0rB,EAAW,EAAG1rB,GAAK0rB,EAAW,EAAG1rB,IAE1C,GAAIA,EAAI,GAAKA,IAAMlG,KAAKgxB,UAAU7qB,OAC9B2rB,EAAOrkB,KAAK,CAACykB,EAAaA,EAAaA,QACtC,CACD,MAAMH,EAAW,GACjB,IAAK,IAAI5uB,EAAI0uB,EAAc,EAAG1uB,GAAK0uB,EAAc,EAAG1uB,IAC5CA,EAAI,GAAKA,IAAMnD,KAAKgxB,UAAU9qB,GAAGC,OACjC4rB,EAAStkB,KAAKykB,GAEdH,EAAStkB,KAAKzN,KAAKgxB,UAAU9qB,GAAG/C,IAGxC2uB,EAAOrkB,KAAKskB,EAChB,CAEJ,OAAOD,CACX,CASAL,mBAAmBU,EAAKC,GACpB,MAAMpE,EAAkBhuB,KAAKkxB,mBAAmBiB,EAAKC,GACrD,IACIC,EADAC,GAAc,EAElB,IAAM,IAAIpsB,EAAI,EAAGA,EAAIyqB,GAAiBxqB,SAAWmsB,EAAapsB,IAC1DosB,EAAc3B,GAAiBzqB,GAAGqsB,uBAAuBvE,GACzDqE,EAAa1B,GAAiBzqB,GAElC,IAAKosB,EACD,MAAM,IAAIzrB,MAAM,oEAGpB,OAAO,IAAIwrB,EAAWrE,EAAiBhuB,KAAKgxB,UAAU7qB,OAAS,EAAIgsB,EAAKC,EAC5E,CAGAT,oBAAoBL,GAEhB,OADe,IAAIhC,GAAqBgC,GAC1BZ,mBAClB,EE5FJ,SAAS8B,GAAqBxB,EAAW9qB,EAAGgZ,GACxC,IAAIuT,EAAM,EACV,IAAK,IAAIvvB,EAAIgD,EAAE,EAAGhD,GAAKgD,EAAE,GAAKhD,EAAI8tB,EAAU7qB,OAAQjD,IAC5CA,GAAK,GAAKA,IAAMgD,IAChBusB,GAAOzB,EAAU9tB,GAAGgc,GAAGkP,OAAS,EAAI,GAG5C,IAAI,IAAIjrB,EAAI+b,EAAE,EAAG/b,GAAK+b,EAAE,GAAK/b,EAAI6tB,EAAU9qB,GAAGC,OAAQhD,IAC/CA,GAAK,GAAKA,IAAM+b,IACfuT,GAAOzB,EAAU9qB,GAAG/C,GAAGirB,OAAS,EAAI,GAG5C,OAAOqE,CACX,CAwBO,SAASC,GAAa1B,EAAW2B,GAEpC,OAAQA,OAAaC,EAxBzB,SAAiC5B,GAC7B,IAAI6B,GAAQ,EACRC,EAAa,GACjB,IAAK,IAAI5sB,EAAE,EAAGA,EAAE8qB,EAAU7qB,OAAQD,IAC9B,IAAK,IAAIgZ,EAAE,EAAGA,EAAE8R,EAAU9qB,GAAGC,OAAQ+Y,IAC7B8R,EAAU9qB,GAAGgZ,GAAGkP,QAAUoE,GAAqBxB,EAAW9qB,EAAEgZ,IAAM,IAClE2T,GAAQ,EACRC,EAAWrlB,KAAK,CAACvH,EAAEgZ,KAK/B,MAAO,CACH,MAAS2T,EACT,WAAcC,EAEtB,CAQ2DC,CAAwB/B,EAEnF,CCpDA,MAAMgC,GACM,WADNA,GAEK,QAFLA,GAGO,SASAC,GAAYzJ,IAAuB,IAAtB,eAACuD,GAAevD,EAExC,MAAOwH,EAAWkC,GAAgBpJ,mBAAS,KACpC1F,EAAO+O,GAAYrJ,oBAAS,IAC5BsJ,EAAYC,GAAiBvJ,oBAAS,GAE7CC,qBAAU,KACR,IAAIuJ,EAAY,GAChB,IAAI,IAAIptB,EAAE,EAAGA,EAAE6mB,EAAehN,OAAQ7Z,IAAI,CACxC,IAAIqtB,EAAa,GACjB,IAAI,IAAIrU,EAAE,EAAGA,EAAE6N,EAAejZ,MAAOoL,IAAI,CACvC,IAAIsU,EAAU,CACZ,QAAU,EACV,UAAaR,IAEfO,EAAW9lB,KAAK+lB,EAClB,CACAF,EAAU7lB,KAAK8lB,EACjB,CACAL,EAAaI,EAAU,GACtB,CAACvG,EAAejZ,MAAOiZ,EAAehN,SAGzCgK,qBAAU,KACRtoB,OAAO+hB,iBAAiB,WAAY2D,IAClCA,EAAMsM,iBA7BO,IA8BVtM,EAAMzF,OACPyR,GAAS,GA9BG,IA+BJhM,EAAMzF,QACd2R,GAAc,EAChB,IAEF5xB,OAAO+hB,iBAAiB,eAAgB2D,IAAYA,EAAMsM,gBAAgB,GAAI,GAC7E,IAGH,MAAMC,EAAgBA,CAACvD,EAAOwD,KAC5B,IAAKA,IAAiBxD,EACpB,OAAO,EAET,IAAK,IAAIjqB,EAAE,EAAGA,EAAEiqB,EAAMhqB,OAAQD,IAAI,CAChC,IAAI0tB,GAAS,EACb,IAAK,IAAI1U,EAAE,EAAGA,EAAEiR,EAAMjqB,GAAGC,OAAQ+Y,IAC/B,IACKiR,EAAMjqB,GAAGgZ,KAAOyU,EAAazU,KAC9B0U,GAAS,EAEb,CAAC,MAAMC,GAAK3U,EAAEiR,EAAMjqB,GAAGC,OAAQytB,GAAO,CAAM,CAE9C,GAAGA,EAAQ,OAAO,CACpB,CACA,OAAO,CAAK,EAqDd,OACEtL,gBAAA,OACExG,MAAO,CACLhO,MAjHgB,IAkHhBiM,OAjHiB,IAkHjB+T,UAAW,GACXzG,WAAY,OACZ0G,YAAa,QAEfC,YAAgB7M,IACdA,EAAMsM,iBAtHK,IAuHRtM,EAAMzF,OACPyR,GAAS,GAvHC,IAwHFhM,EAAMzF,QACd2R,GAAc,EAChB,EACAptB,SAAA,CAED+qB,EAAU3V,KAAI,CAAC8W,EAAK8B,IAEjB1L,eAAA,OACEa,UAAU,iBACVvd,GAAK,OAAMooB,IAEXnS,MAAO,CACLhO,MAAO,OACPiM,OAvIW,IAuIcgN,EAAehN,OACxCgC,QAAS,OACTgK,cAAe,OACf9lB,SAEDksB,EAAI9W,KAAI,CAACqT,EAAMwF,IAEZ3L,eAAA,OACEa,UAAU,kBAEVvd,GAAK,QAAOooB,KAAWC,IACvBpS,MAAO,CACLqS,gBAAiBzF,EAAgB,UACjC5a,MAAU,IAAIiZ,EAAejZ,MAArB,IACRiM,OAAQ,OACR0C,OAAQ,mBAGV2R,YAAgBjN,IACdA,EAAMsM,iBA3EUY,EAAClC,EAAKmC,KACtC,GAAGlQ,EAAM,CACP,MAAMmQ,EAAgB,IAAIvD,GAC1BuD,EAAcpC,GAAKmC,GAAKlG,QAAS,EACjCmG,EAAcpC,GAAKmC,GAAKE,UAAYxB,GACpCE,EAAaqB,EACf,MAAM,GAAGnB,EAAW,CAClB,MAAMmB,EAAgB,IAAIvD,GAC1BuD,EAAcpC,GAAKmC,GAAKlG,QAAS,EACjCmG,EAAcpC,GAAKmC,GAAKE,UAAYxB,GACpCE,EAAaqB,EACf,GAiEgBF,CAA0BJ,EAASC,EAAQ,EAE7CO,UAActN,IA/DVuN,EAACvC,EAAKmC,EAAKK,KAC7B,GA9Fe,IA8FZA,EAAyB,CAC1B,MAAMJ,EAAgB,IAAIvD,GAC1BuD,EAAcpC,GAAKmC,GAAKlG,QAAS,EACjCmG,EAAcpC,GAAKmC,GAAKE,UAAYxB,GACpCE,EAAaqB,EACf,MAAM,GAlGU,IAkGPI,EAA0B,CACjC,MAAMJ,EAAgB,IAAIvD,GAC1BuD,EAAcpC,GAAKmC,GAAKlG,QAAS,EACjCmG,EAAcpC,GAAKmC,GAAKE,UAAYxB,GACpCE,EAAaqB,EACf,GAqDgBG,CAAYT,EAASC,EAAS/M,EAAMzF,OAAO,GAdvC,QAAOuS,KAAWC,QAZxB,OAAMD,OAmClB1L,eAAA,OAAKzG,MAAO,CAACC,QAAQ,OAAQyI,eAAe,SAAUsJ,UAAU,IAAI7tB,SAClEqiB,gBAACsF,KAAM,CAAC9C,QAAQ,YAAYxB,QA5GZsL,KACpB,IAAInuB,EAASisB,GAAa1B,GACtB6D,EAAU,IAAI7D,GAClB,IAAK,IAAI9qB,EAAE,EAAGA,EAAG8qB,EAAU7qB,OAAQD,IACjC,IAAK,IAAIgZ,EAAE,EAAGA,EAAI8R,EAAU9qB,GAAGC,OAAQ+Y,IACjC2V,EAAQ3uB,GAAGgZ,GAAGkP,SAChByG,EAAQ3uB,GAAGgZ,GAAGsV,UAAYd,EAAcjtB,EAAOqsB,WAAY,CAAC5sB,EAAEgZ,IAAM8T,GAAoBA,IAK9FE,EAAa2B,GACTpuB,EAAOosB,ODjFR,SAA8BiC,EAAWC,GAC5C,IAAIC,EAAU,gCAAkCC,mBAAmBC,KAAKC,UAAUL,IAC9EM,EAAqBzT,SAASC,cAAc,KAChDwT,EAAmB7V,aAAa,OAAYyV,GAC5CI,EAAmB7V,aAAa,WAAYwV,EAAa,SACzDpT,SAASoE,KAAKC,YAAYoP,GAC1BA,EAAmBhR,QACnBgR,EAAmBC,QACvB,CC0EMC,CD1BC,SAA8BtE,GAOjC,MAH0B,CACtB,QAHkB,IAAID,GAAcC,GACLK,mBAOvC,CCgB2BkE,CAAqBvE,GAAY,sCACxD,EA8FyD5nB,MAAM,UAASnD,SAAA,CAClEsiB,eAACiN,KAAU,IAAE,4BAGb,EC5KGC,GAAcA,KAEzB,MAAOlK,EAAWmK,GAAgB5L,oBAAS,IACpCL,EAAakM,GAAkB7L,oBAAS,IAExC8L,EAAaC,GAAkB/L,mBAAS,KAExC2B,EAAkBD,GAAuB1B,mBAAS,OAElDiD,EAAgBD,GAAqBhD,mBAAS,CAAChW,MAAM,GAAIiM,OAAO,KAQvE,OANA8J,IAAME,WAAU,KACW,OAArB0B,GACFoK,GAAeC,GAAgB,IAAIA,EAAcrK,IACnD,GACC,CAACA,IAGFlD,eAAAY,YAAA,CAAAljB,SACEqiB,gBAAC6C,GAAa4K,SAAQ,CAACvlB,MAAO,CAACib,mBAAkBD,uBAAqBvlB,SAAA,CACpEqiB,gBAAA,OAAAriB,SAAA,CACEqiB,gBAAA,OAAKxG,MAAO,CAACiK,cAAc,MAAMvB,eAAe,gBAAiBzI,QAAQ,QAAQ9b,SAAA,CAC/EsiB,eAACyN,KAAU,CAAC1M,QAASA,IAAMoM,GAAa,GAAO5T,MAAO,CAAC/B,OAAO,GAAIkW,OAAO,IAAK7M,UAAU,SAAQnjB,SAC9FsiB,eAAC2N,KAAO,MAEV3N,eAAA,MAAAtiB,SAAI,qCACJsiB,eAACyN,KAAU,CAAC1M,QAASA,IAAMqM,GAAe,GAAO7T,MAAO,CAAC/B,OAAO,GAAIkW,OAAO,IAAK7M,UAAU,SAAQnjB,SAChGsiB,eAAC4N,KAAY,SAGjB7N,gBAAA,OAAAriB,SAAA,CACIsiB,eAACsE,GAAU,CAACC,kBAAmBA,EAAmBC,eAAgBA,IAClExE,eAAC0K,GAAS,CAAClG,eAAkBA,IAC5B6I,EAAYva,KAAI,CAACkR,EAAM6J,IAEpB7N,eAAA,UAAW6N,WAmBrB7N,eAAC+C,GAAW,CAACC,UAAWA,EAAW7B,kBAAmBA,KAAOgM,GAAa,EAAM,IAChFnN,eAACgB,GAAY,CAACE,YAAaA,EAAaC,kBAAmBA,KAAOiM,GAAe,EAAM,QAExF,E,aCpEA,MAAMU,GAAU,wBACVC,GAAoB,uECApBC,GAAkBnL,6BAAcjQ,G,+DCD7C,MAAM,WAAEqb,IAAelrB,EAAQ,KAElBmrB,GAAQC,GACZF,GAAW,UAAU11B,OAAO41B,GAAQC,OAAO,OCOvCC,GAAYA,KAEvB,MAAM3N,EAAWC,gBACV2N,EAAOC,GAAYjN,IAAMC,SAAS,KAClCiN,EAAUC,GAAenN,IAAMC,SAAS,KACxCmN,EAAcC,GAAmBrN,IAAMC,UAAS,IAChDqN,EAAOC,GAAYvN,IAAMC,cAAS3O,IAEnC,uBAAEkc,GChBkBC,MAExB,MAAM,QAAE/T,EAAO,WAAEG,GAAegI,qBAAW6K,IAkB3C,MAAO,CACHc,uBAhB4BE,IAC5B7T,EAAW,CACP8T,KAAMD,EAAcC,KACpBC,IAAKF,EAAcE,KACrB,EAaFC,QAVYA,IACLnU,EAAQiU,KAAOjU,EAAQiU,UAAOrc,EAUrCwc,OAPWA,IACJpU,EAAQkU,IAAMlU,EAAQkU,SAAMtc,EAOtC,EDRgCmc,GAwF7BM,EAAoB9yB,UACxB,IACI,MAAM+yB,OAxBY/yB,WACtB,MAAMgzB,QAAoBC,MACrB,GAAE1B,wBACH,CACI2B,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBlS,KAAMmP,KAAKC,UAAU,CACjB,MAAS+C,MAIrB,GAA2B,MAAvBJ,EAAYK,OAAe,CAC3B,MAAMC,QAAaN,EAAYM,OACzBC,EAASD,EAAKE,OAAO,GAAGC,IAAMH,EAAKE,OAAO,GAAGC,IAAMH,EAAKE,OAC9D,IAAIE,EAAYV,EAAYK,OAAS,MAAQL,EAAYW,WAAa,MAAQJ,EAC9E,MAAM,IAAIxxB,MAAM2xB,EACpB,CACA,OAAOV,EAAYM,MAAM,EAKKM,CAAgBR,GAC1Cb,EAAuBQ,EAC3B,CAAC,MAAMxyB,GACH+xB,EAAS,CAAC/xB,EAAEszB,WAAWhL,WAAW,UAAW,KACjD,GAGF,OACEpF,eAAA,QAAMsF,SAhDY/oB,UAElB,GADAqiB,EAAMsM,iBArBemF,MACrB,MAAMC,EAAS,GAUf,MATiB,KAAb9B,GACA8B,EAAOprB,KAAK,iDAEF,KAAVopB,GACAgC,EAAOprB,KAAK,wCAEXopB,EAAMiC,MAAMxC,KACbuC,EAAOprB,KAAK,0CAEborB,EAAO1yB,OAAS,KACfixB,EAASyB,IACF,EAGX,EAMID,GAGJ,IACI,MAAMrB,OAtDMzyB,WAChB,IACI,MAAMgzB,QAAoBC,MACrB,GAAE1B,iBACH,CACI2B,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBlS,KAAMmP,KAAKC,UAAU,CACjB,MAAS0B,EACT,SAAYJ,GAAKM,OAI7B,GAA2B,MAAvBe,EAAYK,OAAe,CAC3B,MAAMC,QAAaN,EAAYM,OACzBC,EAASD,EAAKE,OAAO,GAAGC,IAAMH,EAAKE,OAAO,GAAGC,IAAMH,EAAKE,OAC9D,IAAIE,EAAYV,EAAYK,OAAS,MAAQL,EAAYW,WAAa,MAAQJ,EAC9E,MAAM,IAAIxxB,MAAM2xB,EACpB,CACA,OAAOV,EAAYM,MACvB,CAAC,MAAM/yB,GACH,MAAM,IAAIwB,MAAMxB,EACpB,GA8BgC0zB,GAC5B1B,EAAuBE,GAEvBtO,EAAS,IACb,CAAC,MAAM5jB,GACH+xB,EAAS,CAAC/xB,EAAEszB,WAAWhL,WAAW,UAAW,KACjD,GAoC4B1nB,SACxBqiB,gBAAA,OAAKxG,MAAO,CACRC,QAAQ,OACRyI,eAAe,SACfwO,aAAa,SACbjN,cAAc,SACdlJ,UAAU,SACVoT,OAAQ,OACRnC,UAAU,GACVtR,QAAS,GACTC,OAAQ,kBACRC,aAAc,GACduW,SAAS,KACXhzB,SAAA,CACGkxB,GACG7O,gBAAC4Q,KAAK,CAACC,SAAS,QAAQrX,MAAO,CAACe,UAAU,WAAYuW,QAASA,IAAMhC,OAASjc,GAAWlV,SAAA,CAAC,uCAEtFsiB,eAAA,MAAAtiB,SACKkxB,EAAM9b,KAAI,CAACge,EAAWjD,IAAQ7N,eAAA,MAAAtiB,SAAeozB,GAANjD,UAIpD7N,eAAA,MAAAtiB,SAAI,sBACJsiB,eAAA,OAAKzG,MAAO,CAACC,QAAQ,OAAQyI,eAAe,UAAUvkB,SAClDsiB,eAAA,OAAK+D,IAAI,kBAAkBxY,MAAM,MAAMuY,IAAI,6BAE/C9D,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SACvBsiB,eAAC+Q,KAAS,CACNxX,MAAO,CAAChO,MAAM,OACdyZ,KAAK,OACLE,SAAWtG,GAAU2P,EAAS3P,EAAMuG,OAAOld,OAC3CA,MAAOqmB,EACPtxB,KAAK,QACLg0B,MAAM,aAGdhR,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SACvBsiB,eAAC+Q,KAAS,CACNxX,MAAO,CAAChO,MAAM,OACdyZ,KAAM0J,EAAe,OAAS,WAC9BxJ,SAAWtG,GAAU6P,EAAY7P,EAAMuG,OAAOld,OAC9CA,MAAOumB,EACPxxB,KAAK,WACLg0B,MAAM,gBACNC,WAAY,CACRC,aACElR,eAACmR,KAAc,CAACn3B,SAAS,MAAK0D,SAC5BsiB,eAACyN,KAAU,CACT,aAAW,6BACX1M,QApJIqQ,IAAMzC,GAAiBD,GAoJMhxB,SAEhCgxB,EAAe1O,eAACqR,KAAU,IAAMrR,eAACsR,KAAa,aAOjEtR,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SAEvBsiB,eAACqF,KAAM,CAAC9C,QAAQ,YAAYyC,KAAK,SAAQtnB,SAAC,wBAE9CsiB,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SACvBsiB,eAACuR,KAAI,CAACC,GAAI,UAAU9zB,SAAC,sDAEzBsiB,eAAA,OAAKzG,MAAO,CAACgS,UAAU,GAAI/R,QAAQ,OAAQyI,eAAe,SAAU3H,UAAU,SAAUmW,aAAa,UAAU/yB,SAC3GsiB,eAACyR,KAAW,CACRC,UAAWC,IACP,MAAMC,EAAaD,EAAmBE,WACtCxC,EAAkBuC,EAAW,EAEjCE,QAASA,KACLjD,EAAS,CAAC,iDAA8C,UAKrE,EEzLEkD,GAAaA,KAExB,MAAOzD,EAAOC,GAAYjN,IAAMC,SAAS,KAClCiN,EAAUC,GAAenN,IAAMC,SAAS,KACxCyQ,EAAsBC,GAA2B3Q,IAAMC,SAAS,KAChE2Q,EAAYC,GAAiB7Q,IAAMC,SAAS,KAC5CmN,EAAcC,GAAmBrN,IAAMC,UAAS,IAChDqN,EAAOC,GAAYvN,IAAMC,cAAS3O,GAoEzC,OACEoN,eAAA,QAAMsF,SAZa/oB,UAEnB,GADAqiB,EAAMsM,kBAvDemF,MACrB,MAAM+B,EAAa,GAanB,MAZc,KAAV9D,GAA6B,KAAbE,GAA4C,KAAzBwD,GAA8C,KAAfE,GACpEE,EAAWltB,KAAK,wCAEdspB,IAAawD,GACfI,EAAWltB,KAAK,iDAEdspB,EAAS5wB,OAAS,GACpBw0B,EAAWltB,KAAK,uEAEbopB,EAAMiC,MAAMxC,KACfqE,EAAWltB,KAAK,wCAEfktB,EAAWx0B,OAAS,GACrBixB,EAASuD,IACF,IAEPvD,OAASjc,IACF,EACT,EAoCKyd,GACH,OAEF,MAAMgC,OAnCW91B,WACjB,MAAM+1B,EAAY,GAAExE,oBACpB,IACE,MAAMyB,QAAoBC,MACxB8C,EACA,CACE7C,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBlS,KAAMmP,KAAKC,UAAU,CACjB,MAAS0B,EACT,SAAYJ,GAAKM,GACjB,aAAgB0D,MAIxB,GAA2B,MAAvB3C,EAAYK,OAAe,CAC7B,MAAMC,QAAaN,EAAYM,OACzBC,EAASD,EAAKE,OAAO,GAAGC,IAAMH,EAAKE,OAAO,GAAGC,IAAMH,EAAKE,OAC9D,IAAIE,EAAYV,EAAYK,OAAS,MAAQL,EAAYW,WAAa,MAAQJ,EAC9E,MAAM,IAAIxxB,MAAM2xB,EAClB,CACA,OAAOV,EAAYM,MACvB,CAAC,MAAM/yB,GACH,MAAM,IAAIwB,MAAMxB,EACpB,GASoBy1B,GAClBvW,QAAQ/M,IAAIojB,EAAI,EAMa30B,SACzBqiB,gBAAA,OAAKxG,MAAO,CACRC,QAAQ,OACRyI,eAAe,SACfwO,aAAa,SACbjN,cAAc,SACdlJ,UAAU,SACVoT,OAAQ,OACRnC,UAAU,GACVtR,QAAS,GACTC,OAAQ,kBACRC,aAAc,GACduW,SAAS,KACXhzB,SAAA,CACGkxB,GACG7O,gBAAC4Q,KAAK,CAACC,SAAS,QAAQrX,MAAO,CAACe,UAAU,WAAYuW,QAASA,IAAMhC,OAASjc,GAAWlV,SAAA,CAAC,uCAEtFsiB,eAAA,MAAAtiB,SACKkxB,EAAM9b,KAAI,CAACge,EAAWjD,IAAQ7N,eAAA,MAAAtiB,SAAeozB,GAANjD,UAIpD7N,eAAA,MAAAtiB,SAAI,mBACJsiB,eAAA,OAAKzG,MAAO,CAACC,QAAQ,OAAQyI,eAAe,UAAUvkB,SAClDsiB,eAAA,OAAK+D,IAAI,kBAAkBxY,MAAM,MAAMuY,IAAI,6BAE/C9D,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SACvBsiB,eAAC+Q,KAAS,CACRxX,MAAO,CAAChO,MAAM,OACdyZ,KAAK,OACLE,SAAWtG,GAAU2P,EAAS3P,EAAMuG,OAAOld,OAC3CA,MAAOqmB,EACPtxB,KAAK,QACLg0B,MAAM,aAGZhR,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SACvBsiB,eAAC+Q,KAAS,CACRxX,MAAO,CAAChO,MAAM,OACdyZ,KAAK,OACLE,SAAWtG,GAAUuT,EAAcvT,EAAMuG,OAAOld,OAChDA,MAAOiqB,EACPl1B,KAAK,WACLg0B,MAAM,0BAGZhR,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SACvBsiB,eAAC+Q,KAAS,CACRxX,MAAO,CAAChO,MAAM,OACdyZ,KAAM0J,EAAe,OAAS,WAC9BxJ,SAAWtG,GAAU6P,EAAY7P,EAAMuG,OAAOld,OAC9CA,MAAOumB,EACPxxB,KAAK,WACLg0B,MAAM,gBACNC,WAAY,CACVC,aACElR,eAACmR,KAAc,CAACn3B,SAAS,MAAK0D,SAC5BsiB,eAACyN,KAAU,CACT,aAAW,6BACX1M,QA/HQqQ,IAAMzC,GAAiBD,GA+HEhxB,SAEhCgxB,EAAe1O,eAACqR,KAAU,IAAMrR,eAACsR,KAAa,aAO7DtR,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SACvBsiB,eAAC+Q,KAAS,CACNxX,MAAO,CAAChO,MAAM,OACdyZ,KAAM0J,EAAe,OAAS,WAC9BxJ,SAAWtG,GAAUqT,EAAwBrT,EAAMuG,OAAOld,OAC1DA,MAAO+pB,EACPh1B,KAAK,uBACLg0B,MAAM,4BAGdhR,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SAEvBsiB,eAACqF,KAAM,CAAC9C,QAAQ,YAAYyC,KAAK,SAAQtnB,SAAC,mBAE9CsiB,eAAA,OAAKzG,MAAO,CAACgS,UAAU,IAAI7tB,SACvBsiB,eAACuR,KAAI,CAACC,GAAI,SAAS9zB,SAAC,uDAGzB,ECvKE80B,GAAkBvR,IAAuB,IAArB,aAACwR,GAAaxR,EAE3C,MAAOjG,EAASG,GAAcoG,mBAAS,CACnC0N,UAAMrc,EACNsc,SAAKtc,IAGT,OACIoN,eAAC0S,KAAmB,CAACC,SAAS,0EAAyEj1B,SACnGsiB,eAACgO,GAAeR,SAAQ,CAACvlB,MAAO,CAAC+S,UAASG,cAAYzd,SACjD+0B,KAEa,ECmBfG,OAzBf,WAME,OAJApR,qBAAU,KACRpI,SAASyZ,MAAQ,mBAAmB,GACnC,IAGD7S,eAACwS,GAAe,CAACC,aAEbzS,eAAC8S,KAAM,CAAAp1B,SACLqiB,gBAACgT,KAAM,CAAAr1B,SAAA,CACLsiB,eAACgT,KAAK,CAACC,OAAK,EAACC,KAAK,SAASnZ,QAAWiG,eAACpD,GAAU,MACjDoD,eAACgT,KAAK,CAACC,OAAK,EAACC,KAAK,IAAInZ,QAAWiG,eAACS,GAAQ,MAC1CT,eAACgT,KAAK,CAACC,OAAK,EAACC,KAAK,gBAAgBnZ,QAAWiG,eAACkN,GAAW,MACzDlN,eAACgT,KAAK,CAACC,OAAK,EAACC,KAAK,SAASnZ,QAAWiG,eAACqO,GAAS,MAChDrO,eAACgT,KAAK,CAACC,OAAK,EAACC,KAAK,UAAUnZ,QAAWiG,eAAC+R,GAAU,YAQ9D,EC5BaoB,IAASC,WAAWha,SAASia,eAAe,SACpD5T,OACHO,eAAC4S,GAAG,I","file":"static/js/main.312ae3ed.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.4;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 85, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") === \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                const rotationQuat = new THREE.Quaternion(this.observedState.rotation.x, this.observedState.rotation.y, this.observedState.rotation.z, this.observedState.rotation.w).normalize();\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), -5*Math.PI/180);\r\n                this.group.quaternion.copy(rotationQuat);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    \r\n    addContainerToScene(scene){\r\n        scene.add(this.group);\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 100 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from 'three';\r\n\r\nclass ModelsSingleton{\r\n\r\n    constructor(){\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.carModel = null;\r\n        this.building_1 = null;\r\n        this.building_2 = null;\r\n        this.building_3 = null;\r\n        this.building_4 = null;\r\n    }\r\n\r\n\r\n    changeMaterialsToBasic(children){\r\n        for (let i=0; i < children.length; i++) {\r\n            const child = children[i];\r\n            \r\n            if(child.isGroup){\r\n                this.changeMaterialsToBasic(child.children);\r\n            }else if(child.isMesh){\r\n                child.material = new THREE.MeshBasicMaterial().copy(child.material);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async loadGLTF(pathToTextureRcvd){\r\n        let pathToTexture = pathToTextureRcvd;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        this.changeMaterialsToBasic(result.scene.children);\r\n        return result.scene;\r\n    }\r\n\r\n    async loadModels(){\r\n        this.carModel = this.loadGLTF('res/models/source/Mercedes.glb');\r\n        this.building_1 = this.loadGLTF('res/models/source/buildings/Building_1.glb');\r\n        this.building_2 = this.loadGLTF('res/models/source/buildings/Building_2.glb');\r\n        this.building_3 = this.loadGLTF('res/models/source/buildings/Building_3.glb');\r\n        this.building_4 = this.loadGLTF('res/models/source/buildings/Building_4.glb');\r\n        return \"OK\";\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default class Models{\r\n\r\n    static ModelsSingleton\r\n\r\n    static async getInstance(){\r\n        if (!Models.ModelsSingleton){\r\n            Models.ModelsSingleton = new ModelsSingleton();\r\n            let res = await Models.ModelsSingleton.loadModels();\r\n            if (res === \"OK\"){\r\n                return Models.ModelsSingleton;\r\n            }else{\r\n                throw new Error(\"Error al cargar los modelos.\");\r\n            }\r\n        }else{\r\n            return Models.ModelsSingleton;\r\n        }\r\n        \r\n    }\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector';\r\nimport { Object3D } from 'three';\r\nimport Models from './Models';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\n//const STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = 0.13\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        //super('res/models/source/AutoConInterior.glb');\r\n        super('res/models/source/Mercedes.glb');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n    }\r\n\r\n\r\n    generateRetrovisor(){\r\n        //const path = new THREE.Shape();\r\n        //path.absellipse(0,0,0.15,0.075,0, Math.PI*2, false,0);\r\n        //const ellipseGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const plane = new THREE.PlaneGeometry(0.145, 0.085);\r\n        const retrovisor = new Reflector(\r\n            plane,\r\n            //ellipseGeometry,\r\n            {\r\n                textureWidth: window.innerWidth,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: window.innerHeight,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0.35,\r\n                multisample: 4\r\n            }\r\n        );\r\n        retrovisor.rotateX( Math.PI-0.04 );\r\n        retrovisor.rotateY( 0.35 );\r\n        retrovisor.position.set(0.075,0.625,0.31);\r\n        this.threeDModel.add(retrovisor);\r\n    }\r\n\r\n\r\n    generateLeftMirror(){\r\n        const leftMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const leftMirror = new Reflector(\r\n            leftMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,//512\r\n                textureHeight: window.innerHeight,//512\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(leftMirror);\r\n        container.position.set(0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.13);\r\n        leftMirror.rotateY(-18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateRightMirror(){\r\n        const rightMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const rightMirror = new Reflector(\r\n            rightMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,\r\n                textureHeight: window.innerHeight,\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(rightMirror);\r\n        container.position.set(-0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.1);\r\n        rightMirror.rotateY(18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateMirrors(){\r\n        this.generateRetrovisor();\r\n        this.generateLeftMirror();\r\n        this.generateRightMirror();\r\n    }\r\n\r\n    async addToScene(scene){\r\n        const models = await Models.getInstance();\r\n        this.threeDModel = await models.carModel;\r\n        this.threeDModel.name = \"driverCar\";\r\n        this.threeDModel.position.x = POSITION[0];\r\n        this.threeDModel.position.y = POSITION[1];\r\n        this.threeDModel.position.z = POSITION[2];\r\n        this.threeDModel.scale.x = SCALE[0];\r\n        this.threeDModel.scale.y = SCALE[1];\r\n        this.threeDModel.scale.z = SCALE[2];\r\n        scene.add(this.threeDModel);\r\n        this.generateMirrors();\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        // let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        // let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        // let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        // let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'W222WheelFtR');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'W222WheelFtL');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'W222WheelBkR');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'W222WheelBkL');\r\n\r\n        let rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation\r\n        );\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation + this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n        this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox') || gamepads[i].id.startsWith('xinput')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        this.engineState = new TurnedOnEngine();\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4 } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst POSITION = [0,1,0];\r\nconst FACTOR_BRAKE_TO_FORCE = 300;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld){\r\n        super();\r\n        this.carEngine = new CarEngine();\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(POSITION[0], POSITION[1], POSITION[2]);\r\n        this.rotationQuaternion = new Vector4(0,0,0,1);\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        this.carPhysics.buildAmmoPhysics();\r\n        \r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM()\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.setMargin(0.05);\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7;\r\n\r\nexport default class StraightStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n    createSidewalkMesh(scale){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10*scale );\r\n        const materialSidewalk = new THREE.MeshBasicMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(scale){\r\n        const geometry = new THREE.BoxGeometry( 10*this.SIZE/24, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        \r\n        texture.repeat.set( 1, 2*scale );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshBasicMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        return new THREE.Mesh( geometry, material );\r\n    }\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = position[0]+10*this.SIZE/24;\r\n        model3D.position.y = position[1]+this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = position[2]-this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsLeft_\"+iter;\r\n        secondModel3D.position.x = position[0]-10*this.SIZE/24;\r\n        secondModel3D.position.y = position[1]+this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = position[2]-this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh(scale);\r\n            const leftSidewalk = this.createSidewalkMesh(scale);\r\n            const rightSidewalk = this.createSidewalkMesh(scale);\r\n            baseStreet.position.set(0,0,0);\r\n            leftSidewalk.position.set(-8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            rightSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet).add(leftSidewalk).add(rightSidewalk)\r\n            for (let i=0; i<4*scale; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            baseStreet.scale.set(1.0, 1.0, scale);\r\n            leftSidewalk.scale.set(1.0, 1.0, scale);\r\n            rightSidewalk.scale.set(1.0, 1.0, scale);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            rightSidewalk.updateMatrix();\r\n            rightSidewalk.updateMatrixWorld();\r\n            rightSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            this.LONG = this.SIZE*scale;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\n\r\nexport default class Intersection extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);\r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshBasicMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 1, 2 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshBasicMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        return new THREE.Mesh( geometry, material );\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<4; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2+0.12,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else if(i===2){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2+0.12,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }else if(i===3){\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2-0.12,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                }else{\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2-0.12,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport BoxPhysics from '../LogicModel/Physics/PhysicsTypes/BoxPhysics';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\nimport StraightStreet from '../3DModels/StraightStreet';\r\nimport Intersection from '../3DModels/Intersection';\r\n\r\nexport default class LevelFactory {\r\n\r\n\r\n    constructor(scene,physicsWorld){\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld\r\n        this.physicsToUpdate = [];\r\n        this.objectsToAnimate = [];\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        })\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n    }\r\n\r\n\r\n    async createRectangle(position,length, width, height ,rotation, pathTexture, Ammo, normalMapPath = null){\r\n        \r\n        const texture = new THREE.TextureLoader().load( pathTexture );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( length, height );\r\n        const floorMaterial = new THREE.MeshStandardMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        if( normalMapPath ){\r\n            let normalTexture = new THREE.TextureLoader().load(\r\n                normalMapPath\r\n            );\r\n            normalTexture.repeat.set( length, height );\r\n            normalTexture.wrapS = THREE.RepeatWrapping;\r\n            normalTexture.wrapT = THREE.RepeatWrapping;\r\n            floorMaterial.normalMap = normalTexture;\r\n            floorMaterial.normalScale.set(10, 10);\r\n        }\r\n        const rampa = new THREE.BoxGeometry( length, width, height);\r\n        rampa.rotateX(rotation);\r\n        const quaternionRamp = new THREE.Quaternion();\r\n        quaternionRamp.setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), rotation);\r\n\r\n        let rampPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            quaternionRamp ,  //Quaternion2\r\n            new Ammo.btVector3(0,0,0), //Inertia\r\n            0, //Mass\r\n            new THREE.Vector3(length, width, height), //Shape\r\n            this.physicsWorld, //Physics World\r\n            1000 // friction\r\n        ); \r\n        \r\n        await rampPhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(rampPhysics);\r\n        let ramp = new THREE.Mesh( rampa, floorMaterial );\r\n        ramp.position.set(position[0],position[1],position[2]);\r\n        this.scene.add(ramp);\r\n    }\r\n\r\n\r\n    async createCone(position , Ammo){\r\n        let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        cone.addToScene(this.scene, \"trafficCone\", position, [ 0.5, 0.5, 0.5]);\r\n        let conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(cone.RADIUS_BOTTOM, cone.HEIGHT/2, cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(conePhysics);\r\n        conePhysics.attachObserver(cone);\r\n        this.objectsToAnimate.push(cone);\r\n    }\r\n\r\n    async buildStreetPhysics(position, street, Ammo){\r\n        let streetPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0], position[1], position[2]),\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            0, \r\n            new THREE.Vector3(street.SIZE, 0.1, street.LONG), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await streetPhysics.buildAmmoPhysics();\r\n        let leftSidewalkPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0]-8.4*street.SIZE/24, position[1]+street.SIDEWALK_HEIGHT/2, position[2]),\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            0, \r\n            new THREE.Vector3(7*street.SIZE/24, street.SIDEWALK_HEIGHT, street.LONG), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await leftSidewalkPhysics.buildAmmoPhysics();\r\n        let rightSidewalkPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0]+8.4*street.SIZE/24, position[1]+street.SIDEWALK_HEIGHT/2, position[2]),\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            0, \r\n            new THREE.Vector3(7*street.SIZE/24, street.SIDEWALK_HEIGHT, street.LONG), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await rightSidewalkPhysics.buildAmmoPhysics();\r\n        streetPhysics.attachObserver(street);\r\n        this.physicsToUpdate.push(streetPhysics);\r\n        this.physicsToUpdate.push(leftSidewalkPhysics);\r\n        this.physicsToUpdate.push(rightSidewalkPhysics);\r\n    }\r\n\r\n\r\n    async createStreet(position, rotation, Ammo, segmentsQuantity){\r\n        let street = new StraightStreet(\"textures/road.jpg\");\r\n        await street.addToScene(this.scene, \"street\", position, segmentsQuantity);\r\n        await this.buildStreetPhysics(position, street, Ammo);\r\n        this.objectsToAnimate.push(street);\r\n    }\r\n\r\n\r\n    async createIntersection(position, rotation, Ammo){\r\n        let intersection = new Intersection(\"textures/CleanRoad.jpg\");\r\n        await intersection.addToScene(this.scene, \"intersection\", position);\r\n        this.objectsToAnimate.push(intersection);\r\n    }\r\n\r\n\r\n    async createLevel0(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.createRectangle( [ 10, 0, 10 ], 10, 2, 10, -Math.PI/8, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ -10, 0, 10 ], 10, 2, 10, -Math.PI/4, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ 0, 0, 0 ], 100, 0.1, 100, 0, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createCone( [ 0, 0.5, 10 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 30 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 20 ], Ammo );\r\n    }\r\n\r\n    async createLevelCustom(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.createStreet([0,0,0], 0, Ammo, 2);\r\n        this.createIntersection([0,0,30+15], 0, Ammo);\r\n    }\r\n\r\n}\r\n\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport Camera from '../Camera/Camera';\r\nimport CarOffsetCamera from '../Camera/CarOffsetCamera';\r\nimport OrbitalCamera from '../Camera/OribtalCamera';\r\nimport CarModel from '../3DModels/CarModel';\r\nimport LogitechG29ControllerSingleton from '../LogicModel/ControllerMapping/LogitechG29Controller';\r\nimport XboxControllerSingleton from '../LogicModel/ControllerMapping/XboxController';\r\nimport Car from '../LogicModel/CarLogic/Car';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport { Vector3 } from 'three';\r\nimport LevelFactory from '../Levels/LevelsFactory';\r\nimport  {VRButton}  from '../addons/VRbutton';\r\nimport Stats from \"stats.js\";\r\n\r\n\r\nexport default class ThreeScene extends Component{\r\n    \r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            \"currentRPM\": 0,\r\n            \"velocity\": 0,\r\n            \"currentShift\": 0,\r\n        };\r\n        this.physicsToUpdate = [];\r\n        localStorage.setItem(\"VR\", false);\r\n        this.gotAnyEvent = false;\r\n        this.stats = new Stats();\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        //Generate elements needed to render the scene\r\n        this.objectsToAnimate = [];\r\n        this.scene = new THREE.Scene();\r\n        this.renderer = new THREE.WebGLRenderer({ \r\n            alpha: true, \r\n            powerPreference:\"high-performance\", \r\n            antialias:true });\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\r\n        this.renderer.setClearColor( 0x87cefa, 1 );\r\n        this.camera = new Camera(this.renderer);\r\n        this.camera.addContainerToScene(this.scene);\r\n        this.stats.showPanel( 0 );\r\n        document.body.appendChild(this.stats.dom);\r\n        this.clock = new THREE.Clock();\r\n\r\n        //Ammo.js\r\n        await this.createAmmo();\r\n\r\n        //Add elements to the scene\r\n        this.ambientLight = new THREE.AmbientLight(0xffffff, 1);\r\n        this.scene.add(this.ambientLight);\r\n\r\n        this.level = new LevelFactory(this.scene, this.physicsWorld);\r\n        await this.level.createLevelCustom();\r\n        this.physicsToUpdate.push(this.level);\r\n        this.objectsToAnimate.push(this.level);\r\n\r\n        //Add driver's car to scene\r\n        this.carLogic = new Car(this.physicsWorld);\r\n        let carModel = new CarModel();\r\n        this.carLogic.attachObserver(carModel);\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n        this.carLogic.notifyObservers();\r\n        \r\n        //Bind this to methods of the class\r\n        this.animation = this.animation.bind(this);\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n        this.generateEvents = this.generateEvents.bind(this);\r\n        \r\n        //Handle resize and gamepad connection on window.\r\n        this.generateEvents();\r\n        \r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.renderer.xr.enabled = true;\r\n        this.renderer.xr.setFramebufferScaleFactor(0.75);\r\n        this.mount.appendChild(this.renderer.domElement);\r\n        document.body.appendChild( VRButton.createButton( this.renderer ) );\r\n        this.renderer.setAnimationLoop(this.animation);\r\n        \r\n    }\r\n\r\n\r\n    generateEvents(){\r\n        window.addEventListener(\"resize\", this.handleWindowResize);\r\n        window.addEventListener(\"gamepaddisconnected\", function(e){\r\n            LogitechG29ControllerSingleton.removeInstance();  \r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            var numCamera = event.key;\r\n            this.carLogic.removeObserver(this.camera);\r\n            switch(numCamera){\r\n                case \"1\":\r\n                    this.camera = new Camera(this.renderer);\r\n                    this.camera.addContainerToScene(this.scene);\r\n                    break;\r\n                case \"2\":\r\n                    this.camera = new OrbitalCamera(this.renderer);\r\n                    break;\r\n                case \"3\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"4\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"5\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.carLogic.attachObserver(this.camera);\r\n            this.carLogic.notifyObservers();\r\n\r\n          }, false);\r\n    }\r\n\r\n\r\n    async createAmmo(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.tempTransform = new Ammo.btTransform();\r\n        let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n        let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n        let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n        let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n        this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, overlappingPairCache, solver, collisionConfiguratation);\r\n        this.physicsWorld.setGravity(new Ammo.btVector3(0,-9.8,0));\r\n    }\r\n\r\n\r\n    handleWindowResize(){\r\n        this.camera.handleResize();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance() );\r\n    }\r\n\r\n\r\n    animation(){\r\n        this.stats.begin();\r\n        let deltaTime = this.clock.getDelta();\r\n        this.physicsWorld.stepSimulation(deltaTime, 10);\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        });\r\n        this.camera.setPositionRelativeToObject();\r\n        XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n        this.setState({\"velocity\": this.carLogic.getSpeed(), \"currentRPM\": this.carLogic.getCurrentRPM(), \"currentShift\": this.carLogic.getCurrentShift()});\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance());\r\n        this.stats.end();\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{width:\"100vw\"}}>\r\n                <div style={{position:\"absolute\", top:\"10px\", right:\"10px\", color:\"red\", width:\"175px\"}} id=\"Acelerador\">\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Cambio Actual: {parseInt(this.state.currentShift)}\r\n                    </p>\r\n                </div>\r\n                <div ref={mount => {this.mount = mount;}}></div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <div id=\"button-box\" style={{position:\"absolute\", top:\"5%\", right:\"5%\"}}>\r\n          <div className={\"MainMenuTitle\"}>\r\n            <h1 style={{textAlign:\"center\", fontSize:\"7rem\"}}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/scene\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/configs\")}\r\n            >\r\n              Configuración\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"right\", paddingRight:30}}>Configurations</h3>\r\n                        </div>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const ItemsContext = createContext();\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport { ItemsContext } from '../LevelEditorContext/ItemsContext';\r\n\r\n\r\nconst allUnselected = {\r\n    \"cone\": null,\r\n    \"trapecio\": null,\r\n    \"street\": null\r\n};\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const {setLastSelectedItem, lastSelectedItem} = React.useContext(ItemsContext);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    //const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    const [itemSelected, setItemSelected] = React.useState(allUnselected);\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        const dictSelection = {...allUnselected};\r\n        dictSelection[item] = \"selected\";\r\n        setItemSelected(dictSelection);\r\n        setLastSelectedItem({\r\n            selectedItem: item,\r\n            scale: 1.0,\r\n            positionX: 0.0,\r\n            positionY: 0.0,\r\n            zIndex: lastSelectedItem ? lastSelectedItem.zIndex + 1 : 1\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"left\", paddingLeft:10}}>Items</h3>\r\n                        </div>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <Grid style={{justifyContent: \"center\", display: \"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n                        {\r\n                            Object.entries(itemSelected).map(([nameItem, isSelected]) => {\r\n                                return (\r\n                                    <img \r\n                                        alt={`${nameItem}`}\r\n                                        key={nameItem}\r\n                                        src={`${nameItem}.png`} \r\n                                        width={75}\r\n                                        height={75} \r\n                                        className={`imageLevelEditor ${isSelected}`} \r\n                                        onClick={() => handleSelection(nameItem)}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport {useState} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst MAX_WIDTH_INPUT = 40;\r\nconst MAX_HEIGHT_INPUT = 40;\r\n\r\nexport const InputsGrid = ({setGridDimensions, gridDimensions}) => {\r\n    const [InputWidth, setInputWidth] = useState(gridDimensions.width);\r\n    const [InputHeight, setInputHeight] = useState(gridDimensions.height);\r\n\r\n    const onSubmit = () =>{\r\n      setGridDimensions(\r\n        {\r\n          width: InputWidth, \r\n          height: InputHeight\r\n        }\r\n      );\r\n    }\r\n  return (\r\n    <Grid container  direction=\"row\" width={\"80%\"} marginLeft={'10%'}\r\n    justifyContent=\"space-evenly\"\r\n    alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={2}>\r\n        <p>Ancho:</p>\r\n          <input \r\n            value={InputWidth} \r\n            type=\"number\" \r\n            step=\"1\" \r\n          onChange={\r\n              (event) => {\r\n                let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                setInputWidth(value > MAX_WIDTH_INPUT ? MAX_WIDTH_INPUT : value);\r\n              }\r\n        } \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={2}>\r\n          <div>\r\n            <p>Alto:</p>\r\n            <input \r\n              value={InputHeight} \r\n              type=\"number\" \r\n              step=\"1\" \r\n              onChange={\r\n                (event) => {\r\n                  let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                  setInputHeight(value > MAX_HEIGHT_INPUT ? MAX_HEIGHT_INPUT : value);\r\n                  \r\n                }\r\n              }\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button variant=\"contained\" onClick={onSubmit}>Actualizar</Button>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n","\r\nconst STANDARD_BOX_LONG = 30;\r\n\r\nexport class AbstractStreet{\r\n\r\n    constructor(ninePerNineGrid, rowIndex, columnIndex){\r\n        const rightFilled = ninePerNineGrid[1][2].filled;\r\n        const topFilled = ninePerNineGrid[0][1].filled;\r\n        const botFilled = ninePerNineGrid[2][1].filled;\r\n        const leftFilled = ninePerNineGrid[1][0].filled;\r\n        this.rotation = this.determineStreetRotation(topFilled, leftFilled, botFilled, rightFilled);\r\n        this.long = [\r\n            STANDARD_BOX_LONG, \r\n            STANDARD_BOX_LONG\r\n        ];\r\n        this.position = [\r\n            rowIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2, \r\n            columnIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2\r\n        ];\r\n    }\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //To implement by each son\r\n    }\r\n\r\n    static sumValueForCell(cell){\r\n        return cell.filled ? 1 : 0\r\n    }\r\n\r\n    static calculateNeighboursFilled(ninePerNineGrid){\r\n        let rowCount = 0;\r\n        let columnCount = 0;\r\n        rowCount += AbstractStreet.sumValueForCell(ninePerNineGrid[1][0]) + AbstractStreet.sumValueForCell(ninePerNineGrid[1][2]);\r\n        columnCount += AbstractStreet.sumValueForCell(ninePerNineGrid[0][1]) + AbstractStreet.sumValueForCell(ninePerNineGrid[2][1]);\r\n        return [rowCount, columnCount];\r\n    }\r\n\r\n    isStraight(){\r\n        return false;\r\n    }\r\n\r\n\r\n    determineStreetRotation(){\r\n        //To be defined by sons\r\n    }\r\n\r\n    getAsJSON(){\r\n        return {\r\n            \"position_x\": this.position[0],\r\n            \"position_y\": this.position[1],\r\n            \"rotation\": this.rotation,\r\n            \"long_x\": this.long[0],\r\n            \"long_y\": this.long[1]\r\n        }\r\n    }\r\n\r\n    getPositionAsRowAndColumn(){\r\n        const row = (this.position[0] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        const col = (this.position[1] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        return [row, col];\r\n    }\r\n\r\n\r\n    getPositionX(){\r\n        return this.position[0];\r\n    }\r\n\r\n    getPositionY(){\r\n        return this.position[1];\r\n    }\r\n\r\n    getLongX(){\r\n        return this.long[0];\r\n    }\r\n\r\n    getLongY(){\r\n        return this.long[1];\r\n    }\r\n   \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_TO_LEFT\": 0,\r\n    \"LEFT_TO_BOT\": Math.PI/2,\r\n    \"BOT_TO_RIGHT\": Math.PI,\r\n    \"RIGHT_TO_TOP\": Math.PI*3/2\r\n}\r\n\r\nexport class Curve extends AbstractStreet{\r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //Tiene que tener solo 2 lindantes, y no ser en misma direccion.\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return (rowCount === 1 && columnCount === 1);\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left){\r\n            return POSSIBLE_ROTATIONS[\"TOP_TO_LEFT\"];\r\n        }\r\n        if(left && bot){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_TO_BOT\"];\r\n        }\r\n        if(bot && right){\r\n            return POSSIBLE_ROTATIONS[\"BOT_TO_RIGHT\"];\r\n        }\r\n        if(right && top){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_TO_TOP\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"CURVE\";\r\n        return dict;\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"HORIZONTAL\": 0,\r\n    \"VERTICAL\": Math.PI/2\r\n}\r\n\r\nexport class StraightStreet extends AbstractStreet {\r\n    \r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        \r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);\r\n        return(columnCount === 2 && rowCount === 0 )|| (columnCount === 0 && rowCount === 2 )\r\n\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && bot){\r\n            return POSSIBLE_ROTATIONS[\"VERTICAL\"];\r\n        }\r\n        if(left && right){\r\n            return POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n        }\r\n    }\r\n\r\n    isStraight(){\r\n        return true;\r\n    }\r\n\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"STRAIGHT\";\r\n        return dict;\r\n    }\r\n\r\n\r\n    isHorizontal(){\r\n        return this.rotation === POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_SINGLE\": 0,\r\n    \"LEFT_SINGLE\": Math.PI/2,\r\n    \"BOT_SINGLE\": Math.PI,\r\n    \"RIGHT_SINGLE\": Math.PI*3/2\r\n}\r\nexport class TStreet extends AbstractStreet {\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 1 )|| (columnCount === 1 && rowCount === 2 );\r\n    }\r\n    \r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left && right){\r\n            return POSSIBLE_ROTATIONS[\"TOP_SINGLE\"];\r\n        }\r\n        if(left && bot && top){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_SINGLE\"];\r\n        }\r\n        if(bot && right && left){\r\n            return POSSIBLE_ROTATIONS[\"BOT_SINGLE\"];\r\n        }\r\n        if(right && top && bot){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_SINGLE\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"T_STREET\";\r\n        return dict;\r\n    }\r\n\r\n}","export class StraightStreetLinker{\r\n\r\n    constructor(arrayOfStreets){\r\n        this.sections = this.segregateSections(arrayOfStreets);\r\n        this.sectionsAsJSON = this.linkSections();\r\n    }\r\n\r\n    //Genero un array para cada tramo recto, que contenga todas las StraightStreets de ese tramo\r\n    //Cada array de seccion va dentro de un array general y eso retornamos\r\n    segregateSections(arrayOfStreets){\r\n        // Recorro array de streets --> Armo un hashMap de filas, y otro de columnas.\r\n        // Para cada fila o columna, separar las subsecciones correspondientes.\r\n        const rows = {};\r\n        const cols = {};\r\n        let sectionsArray = [];\r\n\r\n        for(let i = 0; i < arrayOfStreets.length; i++){\r\n            let [streetRow, streetCol] = arrayOfStreets[i].getPositionAsRowAndColumn();\r\n            if( arrayOfStreets[i].isHorizontal() ){\r\n                if( !(streetRow in rows) ){\r\n                    rows[streetRow] = [];\r\n                }\r\n                rows[streetRow].push({\"idx\":streetCol, \"street\":arrayOfStreets[i]});\r\n            }\r\n            else{\r\n                if( !(streetCol in cols) ){\r\n                    cols[streetCol] = [];\r\n                }\r\n                cols[streetCol].push({\"idx\":streetRow, \"street\":arrayOfStreets[i]});\r\n            }\r\n        }\r\n        for(const [, value] of Object.entries(rows)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        for(const [, value] of Object.entries(cols)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        return sectionsArray;\r\n        \r\n    }\r\n\r\n\r\n    generateArraySubsections(array){\r\n        const finalArray = [];\r\n        //Sort de array por idx creciente... CREEMOS que ya viene sorteado - VERIFICAR.\r\n        for ( let i=0; i<array.length; i++){\r\n            //Primer elemento, o no son lindantes\r\n            if( i === 0 || (array[i][\"idx\"] - array[i-1][\"idx\"] > 1)){\r\n                finalArray.push([array[i][\"street\"]]);\r\n            }else{\r\n                finalArray[finalArray.length - 1].push(array[i][\"street\"]);\r\n            }\r\n        }\r\n        return finalArray;\r\n    }\r\n\r\n\r\n    linkSections(){\r\n        const sectionsJSON = [];\r\n        for(let i = 0; i < this.sections.length; i++){\r\n            //Rotation is the same for all of them\r\n            console.log(this.sections[i]);\r\n            const jsonForStreet = {\r\n                \"position_x\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionX(), 0)/this.sections[i].length,\r\n                \"position_y\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionY(), 0)/this.sections[i].length,\r\n                \"rotation\": this.sections[i][0].rotation,\r\n                \"long_x\": this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongX(), 0) : this.sections[i][0].getLongX(),\r\n                \"long_y\": !this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongY(), 0) : this.sections[i][0].getLongY(),\r\n                \"type\": \"STRAIGHT\"\r\n            }\r\n            sectionsJSON.push(jsonForStreet);\r\n        }\r\n        return sectionsJSON;\r\n    }\r\n\r\n    getSectionsAsJSON(){\r\n        return this.sectionsAsJSON;\r\n    }\r\n}","import { StraightStreet, TStreet, Intersection, Curve, StraightStreetLinker } from \"./Street\";\r\n\r\nconst TYPES_OF_STREETS = [\r\n    StraightStreet,\r\n    Curve,\r\n    TStreet,\r\n    Intersection\r\n];\r\n\r\nexport class StreetFactory{\r\n    \r\n    constructor(levelGrid, isInfiniteLevel){\r\n        this.levelGrid = levelGrid;\r\n        this.getNinePerNineGrid = isInfiniteLevel ? this.getNinePerNineGridInfinite : this.getNinePerNineGridFinite;\r\n    }\r\n\r\n    constructStreets(){\r\n        const straightStreetsArray = [];\r\n        const curvedStreetsArray = [];\r\n        //ararco desde la parte superior izq\r\n        for ( let i = 0; i < this.levelGrid.length ; i++ ){\r\n            for ( let j = 0; j < this.levelGrid[i].length ; j++ ){\r\n                const myCell = this.levelGrid[i][j];\r\n                if (myCell.filled){\r\n                    const streetObject = this.defineTypeOfStreet(i, j);\r\n                    if (streetObject.isStraight()){\r\n                        straightStreetsArray.push(streetObject);\r\n                    }\r\n                    else{\r\n                        curvedStreetsArray.push(streetObject);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        const conjunctedStraightStreets = this.linkStraightStreets(straightStreetsArray);\r\n        let finalArray = curvedStreetsArray.map(street => street.getAsJSON());\r\n        return [...finalArray, ...conjunctedStraightStreets];\r\n        //const finalArray = [...conjunctedStraightStreets, ...curvedStreetsArray];\r\n        //return finalArray.map(street => street.getAsJSON());\r\n    }\r\n\r\n    getNinePerNineGridInfinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            const rowArray = [];\r\n            //Si es negativo es la ultima, y sino es el modulo entre el index y la cant de filas.\r\n            const realRow = i < 0 ? this.levelGrid.length-1 : i % this.levelGrid.length;\r\n            for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                //Simil row pero para columna\r\n                const realColumn = y < 0 ? this.levelGrid[realRow].length-1 : y % this.levelGrid[realRow].length;\r\n                rowArray.push(this.levelGrid[realRow][realColumn]);\r\n            }\r\n            matrix.push(rowArray);\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    getNinePerNineGridFinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        const celda_vacia = {\r\n            \"filled\": false,\r\n        }\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            //Casos Filas Imaginarias vacías\r\n            if (i < 0 || i === this.levelGrid.length){\r\n                matrix.push([celda_vacia, celda_vacia, celda_vacia]);\r\n            }else{\r\n                const rowArray = [];\r\n                for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                    if (y < 0 || y === this.levelGrid[i].length){\r\n                        rowArray.push(celda_vacia);\r\n                    }else{\r\n                        rowArray.push(this.levelGrid[i][y]);\r\n                    }\r\n                }\r\n                matrix.push(rowArray);\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    /* Example:\r\n        | | | | | | | |\r\n        | | | x x x | |\r\n        | | | x Y x | |\r\n        | | | x x x | |\r\n        | | | | | | | |\r\n    */\r\n    defineTypeOfStreet(row, column){\r\n        const ninePerNineGrid = this.getNinePerNineGrid(row, column);\r\n        let typeDefined = false;\r\n        let typeResult = undefined;\r\n        for ( let i = 0; i < TYPES_OF_STREETS.length && !typeDefined; i++){\r\n            typeDefined = TYPES_OF_STREETS[i].isValidNinePerNineGrid(ninePerNineGrid);\r\n            typeResult = TYPES_OF_STREETS[i];\r\n        }\r\n        if (!typeDefined){\r\n            throw new Error(\"No se pudo definir el tipo de calle dentro de los tipos validos.\");\r\n        }\r\n        //Row 0 es la de abajo del todo. Invertimos la row.\r\n        return new typeResult(ninePerNineGrid, this.levelGrid.length - 1 - row, column);\r\n    }\r\n\r\n\r\n    linkStraightStreets(straightStreetsArray){\r\n        const linker = new StraightStreetLinker(straightStreetsArray);\r\n        return linker.getSectionsAsJSON();\r\n    }\r\n    \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\n\r\nexport class Intersection extends AbstractStreet{\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 2 )\r\n    }\r\n\r\n    determineStreetRotation(){\r\n        //No sense to rotate it\r\n        return 0;\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"INTERSECTION\";\r\n        return dict;\r\n    }\r\n}\r\n","import { StreetFactory } from \"./StreetFactory\";\r\n\r\n\r\nexport function downloadObjectAsJson(exportObj, exportName){\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n};\r\n\r\n\r\n\r\n\r\nfunction getCountSidesPainted(levelGrid, i, j){\r\n    let aux = 0;\r\n    for (let x = i-1; x <= i+1 && x < levelGrid.length; x++){\r\n        if (x >= 0 && x !== i){\r\n            aux += levelGrid[x][j].filled ? 1 : 0;\r\n        }\r\n    }\r\n    for(let y = j-1; y <= j+1 && y < levelGrid[i].length; y++){\r\n        if(y >= 0 && y !== j){\r\n            aux += levelGrid[i][y].filled ? 1 : 0;\r\n        }\r\n    }\r\n    return aux;\r\n}\r\n\r\nfunction validateGridNotInfinite(levelGrid){\r\n    let valid = true;\r\n    let wrongCells = [];\r\n    for (let i=0; i<levelGrid.length; i++){\r\n        for (let j=0; j<levelGrid[i].length; j++){\r\n            if (levelGrid[i][j].filled && getCountSidesPainted(levelGrid, i,j) <= 1){\r\n                valid = false;\r\n                wrongCells.push([i,j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        \"valid\": valid,\r\n        \"wrongCells\": wrongCells\r\n    }\r\n}\r\n\r\nfunction validateGridInfinite(){\r\n\r\n}\r\n\r\nexport function validateGrid(levelGrid, isInfinite){\r\n    \r\n    return (isInfinite ? validateGridInfinite(levelGrid) : validateGridNotInfinite(levelGrid));\r\n    \r\n}\r\n\r\nexport function generateJSONFromGrid(levelGrid){\r\n    \r\n    const streetFactory = new StreetFactory(levelGrid);\r\n    const streetsArray = streetFactory.constructStreets();\r\n    const objectsAndStreets = {\r\n        \"streets\": streetsArray\r\n    };\r\n    return objectsAndStreets;\r\n\r\n    \r\n}","import { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport MemoryIcon from '@mui/icons-material/Memory';\r\nimport { downloadObjectAsJson, validateGrid, generateJSONFromGrid } from '../Resources/LevelEditor';\r\n\r\nconst COLORS = {\r\n  \"FILLED\": \"darkgray\",\r\n  \"EMPTY\": \"white\",\r\n  \"WARNING\": 'orange',\r\n};\r\n\r\nconst WIDTH_GRID_VIEW = 600;\r\nconst HEIGHT_GRID_VIEW = 600;\r\nconst LEFT_CLICK = 0;\r\nconst RIGHT_CLICK = 2;\r\n\r\n\r\nexport const LevelGrid = ({gridDimensions}) => {\r\n\r\n  const [levelGrid, setLevelGrid] = useState([]);\r\n  const [click, setClick] = useState(false);\r\n  const [rightClick, setRightClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let finalGrid = [];\r\n    for(let i=0; i<gridDimensions.height; i++){\r\n      let currentRow = [];\r\n      for(let j=0; j<gridDimensions.width; j++){\r\n        let newCell = {\r\n          \"filled\": false,\r\n          \"div_color\": COLORS[\"EMPTY\"]\r\n        }\r\n        currentRow.push(newCell);\r\n      }\r\n      finalGrid.push(currentRow);\r\n    }\r\n    setLevelGrid(finalGrid);\r\n  }, [gridDimensions.width, gridDimensions.height]);\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", (event) => {\r\n      event.preventDefault();\r\n      if(event.button === LEFT_CLICK){\r\n        setClick(false);\r\n      }else if (event.button === RIGHT_CLICK){\r\n        setRightClick(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"contextmenu\", (event) => { event.preventDefault(); });\r\n  }, []);\r\n\r\n\r\n  const arrayContains = (array, insiderArray) => {\r\n    if (!insiderArray || !array){\r\n      return false;\r\n    }\r\n    for (let i=0; i<array.length; i++){\r\n      let equals = true;\r\n      for (let j=0; j<array[i].length; j++){\r\n        try{\r\n          if(array[i][j] !== insiderArray[j]){\r\n            equals = false;\r\n          }\r\n        }catch(exc){j=array[i].length; equals=false;}\r\n      }\r\n      if(equals) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const onSubmitLevel = () =>{\r\n    let result = validateGrid(levelGrid);\r\n    let vec_aux = [...levelGrid];\r\n    for( let i=0; i< levelGrid.length; i++ ){\r\n      for( let j=0; j < levelGrid[i].length; j++){\r\n        if (vec_aux[i][j].filled){\r\n          vec_aux[i][j].div_color = arrayContains(result.wrongCells, [i,j]) ? COLORS[\"WARNING\"] : COLORS[\"FILLED\"];\r\n        }\r\n        \r\n      }\r\n    }\r\n    setLevelGrid(vec_aux);\r\n    if (result.valid) {\r\n      downloadObjectAsJson(generateJSONFromGrid(levelGrid), \"Driving_Simulator_Custom_Level.json\");\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const onEnterHoverWithClickCell = (row, col) => {\r\n    if(click){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(rightClick){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n  \r\n  const onClickCell = (row, col, btn_click) => {\r\n    if(btn_click === LEFT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(btn_click === RIGHT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        width: WIDTH_GRID_VIEW,\r\n        height: HEIGHT_GRID_VIEW,\r\n        marginTop: 25,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n      onMouseDown = {(event) => {\r\n        event.preventDefault();\r\n        if(event.button === LEFT_CLICK){\r\n          setClick(true);\r\n        }else if (event.button === RIGHT_CLICK){\r\n          setRightClick(true);\r\n        }\r\n      }}\r\n    >\r\n      {levelGrid.map((row, idx_row) => {\r\n        return(\r\n          <div \r\n            className=\"row-level-grid\" \r\n            id={`row_${idx_row}`}\r\n            key={`row_${idx_row}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: HEIGHT_GRID_VIEW/gridDimensions.height,\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            {row.map((cell, idx_col) => {\r\n              return (\r\n                <div \r\n                  className=\"cell-level-grid\" \r\n                  key={`cell_${idx_row}_${idx_col}`}\r\n                  id={`cell_${idx_row}_${idx_col}`} \r\n                  style={{\r\n                    backgroundColor: cell[\"div_color\"],\r\n                    width: `${100/gridDimensions.width}%`,\r\n                    height: \"100%\",\r\n                    border: \"1px solid black\"\r\n                  }} \r\n                  //onMouseEnter = {() => onEnterHoverWithClickCell(idx_row, idx_col)}\r\n                  onMouseMove = {(event) => {\r\n                    event.preventDefault();\r\n                    onEnterHoverWithClickCell(idx_row, idx_col);\r\n                  }}\r\n                  onMouseUp = {(event) => {\r\n                    onClickCell(idx_row, idx_col, event.button);\r\n                  }}\r\n                  \r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:40}}>\r\n        <Button variant=\"contained\" onClick={onSubmitLevel}  color=\"success\">\r\n          <MemoryIcon/> Procesar nivel...\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { ItemsContext } from './LevelEditorContext/ItemsContext';\r\nimport { useState } from 'react';\r\nimport { InputsGrid } from './Components/InputsGrid';\r\n\r\nimport { LevelGrid } from './Components/LevelGrid';\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = useState(false);\r\n  const [openConfigs, setOpenConfigs] = useState(false);\r\n\r\n  const [itemsInGrid, setItemsInGrid] = useState([]);\r\n\r\n  const [lastSelectedItem, setLastSelectedItem] = useState(null);\r\n\r\n  const [gridDimensions, setGridDimensions] = useState({width:20, height:20});\r\n\r\n  React.useEffect(() => {\r\n    if (lastSelectedItem !== null){\r\n      setItemsInGrid(currentItems => [...currentItems, lastSelectedItem]);\r\n    }\r\n  }, [lastSelectedItem]);\r\n\r\n  return (\r\n    <>\r\n      <ItemsContext.Provider value={{lastSelectedItem, setLastSelectedItem}}>\r\n        <div>\r\n          <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n            <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n              <AddIcon/>\r\n            </IconButton>\r\n            <h1>Driving Simulator - Level Editor</h1>\r\n            <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n              <InputsGrid setGridDimensions={setGridDimensions} gridDimensions={gridDimensions}></InputsGrid>\r\n              <LevelGrid gridDimensions = {gridDimensions}/>\r\n              {itemsInGrid.map((item, idx) => {\r\n                return(\r\n                  <span key={idx}></span>\r\n                  /*<img \r\n                    key={idx} \r\n                    src={`${item.selectedItem}.png`} \r\n                    width={item.scale*75} \r\n                    height={item.scale*75} \r\n                    style={{\r\n                      top:item.positionY, \r\n                      left:item.positionX,\r\n                      position: \"absolute\",\r\n                      zIndex: item.zIndex.toString()\r\n                    }}\r\n                    onClick={() => {console.log(`OPEN CONFIGS OF idx: ${idx}, obj: ${JSON.stringify(itemsInGrid[idx])}`)}}\r\n                  />*/\r\n                );\r\n              })}\r\n          </div>\r\n          \r\n        </div>\r\n        <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n        <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n      </ItemsContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","//export const API_URL = \"https://backend-bata340.cloud.okteto.net\";\r\nexport const API_URL = \"http://localhost:8001\";\r\nexport const VALID_REGEX_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;","import { createContext } from \"react\";\r\n\r\nexport const SessionContext  = createContext(undefined);","\r\nconst { createHash } = require('crypto');\r\n\r\nexport const hash = (string) => {\r\n  return createHash('sha256').update(string).digest('hex');\r\n}","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants'\r\nimport { SessionHooks } from '../Sessions/SessionHooks';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const LoginForm = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const { setSessionWithResponse } = SessionHooks();\r\n\r\n  const postLogin = async () => {\r\n    try{\r\n        const APIResponse = await fetch(\r\n            `${API_URL}/users/login`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": hash(password)\r\n                })\r\n            }\r\n        );\r\n        if (APIResponse.status !== 200){\r\n            const json = await APIResponse.json();\r\n            const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n            let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n            throw new Error(error_msg);\r\n        }\r\n        return APIResponse.json();\r\n    }catch(e){\r\n        throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  const validateFields = () => {\r\n    const errors = []\r\n    if (password === \"\"){\r\n        errors.push(\"El campo contraseña se encuentra vacío.\");\r\n    }\r\n    if (email === \"\"){\r\n        errors.push(\"El campo email se encuentra vacío\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n        errors.push(\"El email establecido es inválido.\");\r\n      }\r\n    if(errors.length > 0){\r\n        setError(errors);\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n  }\r\n\r\n\r\n  const submitLogin = async (event) => {\r\n    event.preventDefault();\r\n    if(!validateFields()){\r\n        return;\r\n    }\r\n    try{\r\n        const loginResponse = await postLogin();\r\n        setSessionWithResponse(loginResponse);\r\n        /*TODO: DAR UN FEEDBACK DE SESION INICIADA CORRECTAMENTE ANTES DE REDIR*/\r\n        navigate(\"/\");\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n\r\n  const postLoginGoogle = async (token) => {\r\n    const APIResponse = await fetch(\r\n        `${API_URL}/users/login_google`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"token\": token\r\n            })\r\n        }\r\n    );\r\n    if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n    }\r\n    return APIResponse.json();\r\n  }\r\n\r\n  const submitGoogleLogin = async (token) => {\r\n    try{\r\n        const responseAPI = await postLoginGoogle(token);\r\n        setSessionWithResponse(responseAPI);\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitLogin}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Iniciar Sesión</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type=\"text\" \r\n                    onChange={(event) => setEmail(event.target.value)} \r\n                    value={email} \r\n                    name=\"email\"\r\n                    label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPassword(event.target.value)} \r\n                    value={password} \r\n                    name=\"password\"\r\n                    label=\"Contraseña\"\r\n                    InputProps={{ // <-- This is where the toggle button is added.\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">Iniciar Sesión</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/signup\"}>¿No posees una cuenta? Registrate aquí...</Link>\r\n            </div>\r\n            <div style={{marginTop:20, display:\"flex\", justifyContent:\"center\", textAlign:\"center\", alignContent:\"center\"}}>\r\n                <GoogleLogin\r\n                    onSuccess={credentialResponse => {\r\n                        const OAuthToken = credentialResponse.credential;\r\n                        submitGoogleLogin(OAuthToken);\r\n                    }}\r\n                    onError={() => {\r\n                        setError(['El inicio de sesión con Google ha fallado.']);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n","import { useContext } from 'react';\r\nimport { SessionContext } from './SessionContext';\r\n\r\nexport const SessionHooks = () => {\r\n  \r\n    const { session, setSession } = useContext(SessionContext);\r\n\r\n\r\n    const setSessionWithResponse = (loginResponse) => {\r\n        setSession({\r\n            user: loginResponse.user,\r\n            jwt: loginResponse.jwt\r\n        });\r\n    }\r\n\r\n    const getUser = () => {\r\n        return session.user ? session.user : undefined;\r\n    }\r\n\r\n    const getJWT = () => {\r\n        return session.jwt ? session.jwt : undefined;\r\n    }\r\n\r\n    return({\r\n        setSessionWithResponse,\r\n        getUser,\r\n        getJWT\r\n    })\r\n}\r\n","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\n\r\n\r\nexport const SignUpForm = () => {\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState(\"\");\r\n  const [nameToShow, setNameToShow] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const validateFields = () => {\r\n    const errorArray = [];\r\n    if (email === \"\" || password === \"\" || passwordConfirmation === \"\" || nameToShow === \"\"){\r\n      errorArray.push(\"Aún existen campos sin completar.\")\r\n    }\r\n    if (password !== passwordConfirmation){\r\n      errorArray.push(\"Las contraseñas establecidas no coinciden.\");\r\n    }\r\n    if (password.length < 8){\r\n      errorArray.push(\"La contraseña debe tener una longitud mínima de 8 caracteres.\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n      errorArray.push(\"El email establecido es inválido.\");\r\n    }\r\n    if(errorArray.length > 0){\r\n      setError(errorArray);\r\n      return false;\r\n    }else{\r\n      setError(undefined);\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  const postSignUp = async () => {\r\n    const fetchUrl = `${API_URL}/users/register`;\r\n    try{\r\n      const APIResponse = await fetch(\r\n        fetchUrl,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n              \"email\": email,\r\n              \"password\": hash(password),\r\n              \"name_to_show\": nameToShow\r\n          })\r\n        }\r\n      );\r\n      if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      return APIResponse.json();\r\n  }catch(e){\r\n      throw new Error(e);\r\n  }\r\n  }\r\n\r\n\r\n  const submitSignUp = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateFields()){\r\n      return;\r\n    }\r\n    const res = await postSignUp();\r\n    console.log(res);\r\n    /*TODO: Mostrar dialog de creado exitoso, y despues mandarlo al login...*/\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitSignUp}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Crea tu cuenta</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setEmail(event.target.value)} \r\n                  value={email} \r\n                  name=\"email\"\r\n                  label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setNameToShow(event.target.value)} \r\n                  value={nameToShow} \r\n                  name=\"username\"\r\n                  label=\"Nombre para mostrar\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  onChange={(event) => setPassword(event.target.value)} \r\n                  value={password} \r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPasswordConfirmation(event.target.value)} \r\n                    value={passwordConfirmation} \r\n                    name=\"passwordConfirmation\"\r\n                    label=\"Repetir Contraseña\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">CREAR CUENTA</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/login\"}>¿Ya poses una cuenta? Inicia sesión...</Link>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n","import { SessionContext } from \"./SessionContext\";\r\nimport { useState } from 'react'\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nexport const SessionProvider = ( {childElement} ) => {\r\n  \r\n    const [session, setSession] = useState({\r\n        user: undefined,\r\n        jwt: undefined\r\n    });\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"18785041157-s9ga39r0i6up45radtj3soo6je1pneon.apps.googleusercontent.com\">\r\n            <SessionContext.Provider value={{session, setSession}}>\r\n                {childElement}\r\n            </SessionContext.Provider>\r\n        </GoogleOAuthProvider>\r\n    )\r\n}\r\n","import ThreeScene from './Scene/ThreeScene';\r\nimport { useEffect } from 'react';\r\nimport { MainMenu } from './Menus/MainMenu';\r\nimport { LevelEditor } from './Menus/LevelEditor';\r\nimport { HashRouter as Router, Routes as Switch, Route } from 'react-router-dom';\r\nimport { LoginForm } from './Menus/Components/LoginForm';\r\nimport { SignUpForm } from './Menus/Components/SignUpForm';\r\nimport { SessionProvider } from './Menus/Sessions/SessionProvider';\r\n\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    document.title = 'Driving Simulator';\r\n  }, []);\r\n\r\n  return (\r\n    <SessionProvider childElement = \r\n      {\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/scene\" element = {<ThreeScene/>} />\r\n            <Route exact path=\"/\" element = {<MainMenu/>} />\r\n            <Route exact path=\"/level-editor\" element = {<LevelEditor/>} />\r\n            <Route exact path=\"/login\" element = {<LoginForm/>}/>\r\n            <Route exact path=\"/signup\" element = {<SignUpForm/>}/>\r\n          </Switch>\r\n        </Router>\r\n      }\r\n    />\r\n    \r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n\r\n"],"sourceRoot":""}