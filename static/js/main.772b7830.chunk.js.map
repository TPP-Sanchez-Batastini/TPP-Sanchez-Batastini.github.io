{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/Models.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics.js","3DModels/StraightStreet.js","3DModels/Intersection.js","3DModels/Curve.js","3DModels/TStreet.js","3DModels/Checkpoint.js","Levels/LevelScore.js","Levels/LevelsFactory.js","addons/VRbutton.js","LogicModel/IA/TrafficModel.js","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/LevelEditorContext/ItemsContext.jsx","Menus/Components/ItemsDrawer.jsx","Menus/Components/InputsGrid.jsx","Menus/Resources/Street/AbstractStreet.js","Menus/Resources/Street/Curve.js","Menus/Resources/Street/StraightStreet.js","Menus/Resources/Street/TStreet.js","Menus/Resources/Street/StraightStreetLinker.js","Menus/Resources/StreetFactory.js","Menus/Resources/Street/Intersection.js","Menus/Resources/LevelEditor.js","Menus/Components/LevelGrid.jsx","Menus/LevelEditor.jsx","Menus/Constants/Constants.js","Menus/Sessions/SessionContext.jsx","Menus/Resources/Hasher.js","Menus/Components/LoginForm.jsx","Menus/Sessions/SessionHooks.jsx","Menus/Components/SignUpForm.jsx","Menus/Sessions/SessionProvider.jsx","Menus/Components/CardLevel/CardContentHover.jsx","Menus/Components/CardLevel/CardContentNotHover.jsx","Menus/Components/LevelsSelectionGrid.jsx","Menus/LevelsList.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","constructor","car","this","handleAccelerate","valueClutch","valueAccelerator","accelerate","handleBrake","valueBrake","brake","doHorn","changeShift","valueShift","turnDirection","wheelAxesValue","turnOnCar","updateCar","update","changeShiftBox","mode","Observer","observedState","newState","Camera","renderer","super","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","handleResize","aspect","updateProjectionMatrix","setPositionRelativeToObject","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","rotationQuat","x","y","z","w","normalize","quaternion","getCameraInstance","addContainerToScene","scene","CarOffsetCamera","positionCamera","cameraOffsetRotated","positionToLookAt","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","async","loadAsync","threeDObject","objectName","scale","modelVariable","loadFBX","e","loadGLTF","name","getModel","animate","ModelsSingleton","carModel","building_1","building_2","building_3","building_4","changeMaterialsToBasic","children","i","length","child","isGroup","isMesh","newMaterial","prototype","call","material","receiveShadow","castShadow","pathToTextureRcvd","result","Models","static","loadModels","Error","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","generateRetrovisor","plane","retrovisor","Reflector","textureWidth","textureHeight","clipBias","multisample","rotateX","rotateY","generateLeftMirror","leftMirrorGeometry","leftMirror","container","Object3D","generateRightMirror","rightMirrorGeometry","rightMirror","generateMirrors","generateSpotlights","rightSpotlight","leftSpotlight","targetRight","targetLeft","target","shadow","mapSize","width","height","near","far","fov","intensity","angle","arguments","undefined","hasMirrors","models","getInstance","clone","moveCar","addPhysicsView","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","watchPhysicsColliders","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorOne","default","require","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","checkEvents","doActionByMapping","doActionsPedals","axes","doActionsWheel","doActionsDPad","doActionsButtons","buttons","pressed","doActionsShifter","LogitechG29ControllerSingleton","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","doActionsAxes","axe","doActionHotKeys","value","doActionsTriggers","XboxControllerSingleton","Observable","observers","attachObserver","observer","removeObserver","index","indexOf","splice","notifyObservers","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","updatePhysics","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","getRigidBody","setEngineForce","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringRotation","setSteeringValue","getVelocity","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","changeValueInRPMCurve","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","TurnedOnEngine","CarEngine","useAudio","engineState","playbackRate","turnOn","Audio","play","setTimeout","soundEngine","AudioContext","webkitAudioContext","fetch","then","response","arrayBuffer","buffer","decodeAudioData","soundEngineSource","createBufferSource","loop","connect","destination","start","clutchIsPressed","handleEngineShutdown","shiftBox","shutDownEngine","isInConditionToAccelerate","engineCanApplyForce","rpmReturn","changeRPM","RPMModification","log","getCurrentRPM","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","isValidShift","shift","calculateNormalFactorRPM","newShift","oldVelocity","getValueForNewRPM","normalFactorRPM","XValue","getEngineForce","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactor","getCurrentShift","ManualBox","SemiAutomaticBox","Car","initialPosition","initialRotation","Quaternion","identity","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","turnOnRightLight","turnOnLeftLight","positionAndRotation","getDataToAnimate","getLastRotation","getSpeed","GeneralPhysics","generateShape","getMotionState","getWorldTransform","setLinearVelocity","velocityVector","velVectorBT","applyForce","BoxPhysics","setMargin","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","load","map","materialBox","geometryPlane","box","cone","CylinderPhysics","btCylinderShape","CustomGeometryPhysics","triangle_mesh","btTriangleMesh","vectA","vectB","vectC","verticesPos","getAttribute","array","triangles","setX","setY","setZ","addTriangle","destroy","btBvhTriangleMeshShape","StraightStreet","pathToNormalMap","SIZE","SIDEWALK_HEIGHT","createSidewalkMesh","wrapS","wrapT","repeat","materialSidewalk","geometrySidewalk","createStreetMesh","mesh","iter","model3D","loadBuildingBlock","parseInt","random","LONG","updateMatrix","updateMatrixWorld","matrixAutoUpdate","secondModel3D","rotationY","baseStreet","leftSidewalk","rightSidewalk","createBuildings","Intersection","SQUARE_SIZE","getLerpPoints","vec1","vec2","quantPoints","points","createSidewalkCurve","initialPoint","lerpPoints","pointsCurve","getPoints","secondLerpPoints","thirdLerpPoints","fourthLerpPoints","getGeometrySidewalk","geom","columnas","aux_vertices","indexes","uv1","uv2","uv3","accum_x","accum_z","uv","vertex","filas","j","vertexArr","Float32Array","uvArr","setIndex","setAttribute","computeVertexNormals","sidewalk","Curve","TOP_CENTER","createLongSidewalkCurve","fifthLerpPoints","sixthLerpPoints","getGeometryLongSidewalk","createLongSidewalkMesh","longSidewalk","TStreet","createStraightSidewalkMesh","createBuilding","Checkpoint","checkpointsData","RADIUS","stepHeartbeat","LEAST_OPACITY","MAX_OPACITY","newOpacity","opacity","transparent","checkpoint","LevelScore","initialScore","score","alterScore","isNaN","getCurrentScore","LevelFactory","levelScore","physicsToUpdate","objectsToAnimate","STREET_TYPES","createStreet","bind","createCurve","createTStreet","createIntersection","OBJECTS","createCone","forEach","phys","object","pathTexture","normalMapPath","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","buildAmmoPhysics","ramp","addToScene","conePhysics","threeObject","onCollide","console","street","streetPhysics","movingLeft","leftSidewalkPhysics","movingRight","rightSidewalkPhysics","tStreet","movingOne","cornerPhysicsOne","movingTwo","cornerPhysicsTwo","intersection","cornerPhysicsThree","cornerPhysicsFour","curve","movingCorner","cornerPhysics","longSidePhysics","segmentsQuantity","buildStreetPhysics","buildIntersectionPhysics","buildCurvePhysics","buildTStreetPhysics","checkpoints","checkpointPhysics","removeRigidBody","rigidyBody","removeCollisionObject","remove","end","createCheckpoint","position_x","position_y","createRectangle","long","type","segments","json","streets","instantiateStreet","long_x","long_y","objects","obj","instantiateObject","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","outline","zIndex","xr","isSessionSupported","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","sessionInit","optionalFeatures","requestSession","setItem","showEnterVR","xrSessionIsGranted","click","catch","exception","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","TrafficModel","SIZE_OF_TRAFFIC","timeSinceLastUpdate","Date","now","trafficWorker","Worker","currentTraffic","levelStreets","lastID","onmessage","onReceiveResponseFromWorker","updateCarEngines","data","onCollideWithCarOfTraffic","object3D","engine","deleteCar","carId","objectsInTraffic","generateCar","updateTraffic","trafficCars","Object","entries","entry","carData","postMessage","playersCar","carActions","keys","steering","values","carObject","SEGMENT_SIZE","ThreeScene","Component","state","velocity","gotAnyEvent","stats","Stats","alpha","powerPreference","antialias","setSize","shadowMap","enabled","clock","jsonLevel","props","generateGeneralElements","animation","handleWindowResize","generateEvents","addPlayerCar","generateLevel","addVR","createAmmo","addGeneralLights","createTraffic","setAnimationLoop","setPixelRatio","devicePixelRatio","setFramebufferScaleFactor","mount","appendChild","body","createButton","level","updateDataLevel","createLevelCustom","geomField","matField","meshField","setClearColor","showPanel","dom","initial_position","initial_rotation","trafficModel","generateInitialTraffic","removeInstance","event","numCamera","key","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","onEnterColission","addFunction","cp","obj0","obj1","castObject","wrapPointer","btManifoldPoint","get_m_userPersistentData","collisionContactID","set_m_userPersistentData","setContactProcessedCallback","render","vecDistance","vectorA","vectorB","distanceTo","getMaxSizeStreets","maxX","maxZ","generateSegmentedScenesChildren","segmentedScenes","segmentPosition","filter","isLight","includes","getReducedScene","cloneScene","lastPlayerPos","begin","deltaTime","getDelta","stepSimulation","setState","_jsxs","_jsx","top","right","fontWeight","ref","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","MainMenu","navigate","useNavigate","_Fragment","className","fontSize","onClick","ConfigDrawer","_ref","openConfigs","handleDrawerClose","open","setOpen","React","useState","useEffect","DrawerHeader","styled","_ref2","theme","alignItems","spacing","mixins","toolbar","justifyContent","Grid","Drawer","sx","flexShrink","boxSizing","variant","anchor","ChevronRightIcon","paddingRight","Divider","ItemsContext","createContext","allUnselected","ItemsDrawer","openItems","setLastSelectedItem","lastSelectedItem","useContext","itemSelected","setItemSelected","paddingLeft","ChevronLeftIcon","flexDirection","_ref3","nameItem","isSelected","alt","src","item","dictSelection","selectedItem","positionX","positionY","handleSelection","InputsGrid","setGridDimensions","gridDimensions","InputWidth","setInputWidth","InputHeight","setInputHeight","direction","marginLeft","xs","step","onChange","replaceAll","Button","onSubmit","STANDARD_BOX_LONG","AbstractStreet","ninePerNineGrid","rowIndex","columnIndex","rightFilled","filled","topFilled","botFilled","leftFilled","determineStreetRotation","cell","rowCount","columnCount","sumValueForCell","isStraight","getAsJSON","getPositionAsRowAndColumn","getPositionX","getPositionY","getLongX","getLongY","POSSIBLE_ROTATIONS","StraightStreetLinker","arrayOfStreets","sections","segregateSections","sectionsAsJSON","linkSections","rows","cols","sectionsArray","streetRow","streetCol","isHorizontal","generateArraySubsections","finalArray","sectionsJSON","jsonForStreet","reduce","acum","elem","getSectionsAsJSON","TYPES_OF_STREETS","calculateNeighboursFilled","bot","dict","StreetFactory","levelGrid","isInfiniteLevel","getNinePerNineGrid","getNinePerNineGridInfinite","getNinePerNineGridFinite","constructStreets","straightStreetsArray","curvedStreetsArray","streetObject","defineTypeOfStreet","conjunctedStraightStreets","linkStraightStreets","indexRow","indexColumn","matrix","rowArray","realRow","realColumn","celda_vacia","row","column","typeResult","typeDefined","isValidNinePerNineGrid","getCountSidesPainted","aux","validateGrid","isInfinite","validateGridInfinite","valid","wrongCells","validateGridNotInfinite","COLORS","LevelGrid","setLevelGrid","setClick","rightClick","setRightClick","finalGrid","currentRow","newCell","preventDefault","arrayContains","insiderArray","equals","exc","marginTop","marginRight","onMouseDown","idx_row","idx_col","backgroundColor","onMouseMove","onEnterHoverWithClickCell","col","levelGridCopy","div_color","onMouseUp","onClickCell","btn_click","onSubmitLevel","vec_aux","exportObj","exportName","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","downloadObjectAsJson","generateJSONFromGrid","MemoryIcon","LevelEditor","setOpenItems","setOpenConfigs","itemsInGrid","setItemsInGrid","currentItems","Provider","IconButton","margin","AddIcon","SettingsIcon","idx","API_URL","VALID_REGEX_EMAIL","SessionContext","createHash","hash","string","digest","LoginForm","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","setSessionWithResponse","SessionHooks","loginResponse","user","jwt","getUser","getJWT","submitGoogleLogin","responseAPI","APIResponse","method","headers","token","status","endMSG","detail","msg","error_msg","statusText","postLoginGoogle","toString","validateFields","errors","match","postLogin","alignContent","maxWidth","Alert","severity","onClose","listerror","TextField","label","InputProps","endAdornment","InputAdornment","handleClickShowPassword","Visibility","VisibilityOff","Link","to","GoogleLogin","onSuccess","credentialResponse","OAuthToken","credential","onError","SignUpForm","passwordConfirmation","setPasswordConfirmation","nameToShow","setNameToShow","errorArray","fetchUrl","postSignUp","SessionProvider","childElement","GoogleOAuthProvider","clientId","CardContentHover","CardContentNotHover","CardContent","CardMedia","component","image","title","objectFit","CardHeader","subheader","description","LevelsSelectionGrid","levels","setLevels","cardHovers","setCardHovers","levelsEffect","hovers","rowSpacing","md","lg","Card","CardActions","onMouseOver","onMouseOut","LevelsList","App","setJson","Router","Switch","Route","exact","path","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.772b7830.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n    doHorn(){\r\n        this.car.doHorn();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.4;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 85, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") === \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                const rotationQuat = new THREE.Quaternion(this.observedState.rotation.x, this.observedState.rotation.y, this.observedState.rotation.z, this.observedState.rotation.w).normalize();\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), -5*Math.PI/180); //SUMAR ROTACION EXTRA SI USAMOS EL JOYSTICK DERECHO\r\n                this.group.quaternion.copy(rotationQuat);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    \r\n    addContainerToScene(scene){\r\n        scene.add(this.group);\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from 'three';\r\n\r\nclass ModelsSingleton{\r\n\r\n    constructor(){\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.carModel = null;\r\n        this.building_1 = null;\r\n        this.building_2 = null;\r\n        this.building_3 = null;\r\n        this.building_4 = null;\r\n    }\r\n\r\n\r\n    changeMaterialsToBasic(children){\r\n        for (let i=0; i < children.length; i++) {\r\n            const child = children[i];\r\n            \r\n            if(child.isGroup){\r\n                this.changeMaterialsToBasic(child.children);\r\n            }else if(child.isMesh){\r\n                const newMaterial = new THREE.MeshPhongMaterial();\r\n                THREE.MeshBasicMaterial.prototype.copy.call( newMaterial, child.material );\r\n                child.material = newMaterial;\r\n                child.receiveShadow = true;\r\n                child.castShadow = true;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async loadGLTF(pathToTextureRcvd){\r\n        let pathToTexture = pathToTextureRcvd;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        this.changeMaterialsToBasic(result.scene.children);\r\n        return result.scene;\r\n    }\r\n\r\n    async loadModels(){\r\n        this.carModel = this.loadGLTF('res/models/source/Mercedes.glb');\r\n        this.building_1 = this.loadGLTF('res/models/source/buildings/Building_1.glb');\r\n        this.building_2 = this.loadGLTF('res/models/source/buildings/Building_2.glb');\r\n        this.building_3 = this.loadGLTF('res/models/source/buildings/Building_3.glb');\r\n        this.building_4 = this.loadGLTF('res/models/source/buildings/Building_4.glb');\r\n        return \"OK\";\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default class Models{\r\n\r\n    static ModelsSingleton\r\n\r\n    static async getInstance(){\r\n        if (!Models.ModelsSingleton){\r\n            Models.ModelsSingleton = new ModelsSingleton();\r\n            let res = await Models.ModelsSingleton.loadModels();\r\n            if (res === \"OK\"){\r\n                return Models.ModelsSingleton;\r\n            }else{\r\n                throw new Error(\"Error al cargar los modelos.\");\r\n            }\r\n        }else{\r\n            return Models.ModelsSingleton;\r\n        }\r\n        \r\n    }\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector';\r\nimport { Object3D } from 'three';\r\nimport Models from './Models';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\n//const STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = 0.13\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        //super('res/models/source/AutoConInterior.glb');\r\n        super('res/models/source/Mercedes.glb');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n    }\r\n\r\n\r\n    generateRetrovisor(){\r\n        //const path = new THREE.Shape();\r\n        //path.absellipse(0,0,0.15,0.075,0, Math.PI*2, false,0);\r\n        //const ellipseGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const plane = new THREE.PlaneGeometry(0.145, 0.085);\r\n        const retrovisor = new Reflector(\r\n            plane,\r\n            //ellipseGeometry,\r\n            {\r\n                textureWidth: window.innerWidth,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: window.innerHeight,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0.35,\r\n                multisample: 4\r\n            }\r\n        );\r\n        retrovisor.rotateX( Math.PI-0.04 );\r\n        retrovisor.rotateY( 0.35 );\r\n        retrovisor.position.set(0.075,0.625,0.31);\r\n        this.threeDModel.add(retrovisor);\r\n    }\r\n\r\n\r\n    generateLeftMirror(){\r\n        const leftMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const leftMirror = new Reflector(\r\n            leftMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,//512\r\n                textureHeight: window.innerHeight,//512\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(leftMirror);\r\n        container.position.set(0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.13);\r\n        leftMirror.rotateY(-18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateRightMirror(){\r\n        const rightMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const rightMirror = new Reflector(\r\n            rightMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,\r\n                textureHeight: window.innerHeight,\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(rightMirror);\r\n        container.position.set(-0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.1);\r\n        rightMirror.rotateY(18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateMirrors(){\r\n        this.generateRetrovisor();\r\n        this.generateLeftMirror();\r\n        this.generateRightMirror();\r\n    }\r\n\r\n    generateSpotlights(){\r\n        this.rightSpotlight = new THREE.SpotLight(0xffffff);\r\n        this.leftSpotlight = new THREE.SpotLight(0xffffff);\r\n        this.targetRight = new Object3D();\r\n        this.targetLeft = new Object3D();\r\n        this.targetRight.position.set(-0.8, 0.05, 3.0);\r\n        this.targetLeft.position.set(0.8, 0.05, 3.0);\r\n        this.rightSpotlight.position.set(-0.8, 0.3, 2.6);\r\n        this.leftSpotlight.position.set(0.8, 0.3, 2.6);\r\n        this.rightSpotlight.target = this.targetRight;\r\n        this.leftSpotlight.target = this.targetLeft;\r\n        this.leftSpotlight.castShadow = true;\r\n        this.rightSpotlight.castShadow = true;\r\n        this.rightSpotlight.shadow.mapSize.width = 1024;\r\n        this.leftSpotlight.shadow.mapSize.height = 1024;\r\n        this.rightSpotlight.shadow.camera.near = 0.1;\r\n        this.leftSpotlight.shadow.camera.near = 0.1;\r\n        this.rightSpotlight.shadow.camera.far = 2;\r\n        this.leftSpotlight.shadow.camera.far = 2;\r\n        this.rightSpotlight.shadow.camera.fov = 10;\r\n        this.leftSpotlight.shadow.camera.fov = 10;\r\n        this.rightSpotlight.intensity = 0.5;\r\n        this.leftSpotlight.intensity = 0.5;\r\n        this.rightSpotlight.angle = Math.PI/5;\r\n        this.leftSpotlight.angle = Math.PI/5;\r\n        this.threeDModel.add(this.leftSpotlight);\r\n        this.threeDModel.add(this.rightSpotlight);\r\n        this.threeDModel.add(this.targetLeft);\r\n        this.threeDModel.add(this.targetRight);\r\n    }\r\n\r\n\r\n    async addToScene(scene, name=\"driverCar\", hasMirrors = true){\r\n        const models = await Models.getInstance();\r\n        this.threeDModel = await models.carModel;\r\n        this.threeDModel = this.threeDModel.clone();\r\n        this.threeDModel.name = name;\r\n        this.threeDModel.position.x = POSITION[0];\r\n        this.threeDModel.position.y = POSITION[1];\r\n        this.threeDModel.position.z = POSITION[2];\r\n        this.threeDModel.scale.x = SCALE[0];\r\n        this.threeDModel.scale.y = SCALE[1];\r\n        this.threeDModel.scale.z = SCALE[2];\r\n        scene.add(this.threeDModel);\r\n        if(hasMirrors){\r\n            this.generateMirrors();\r\n        }\r\n        this.generateSpotlights();\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        // let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        // let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        // let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        // let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'W222WheelFtR');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'W222WheelFtL');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'W222WheelBkR');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'W222WheelBkL');\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n            this.globalControllerHandler.doHorn();\r\n            this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox') || gamepads[i].id.startsWith('xinput')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            this.globalControllerHandler.doHorn();\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(useAudio){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n        this.playbackRate = 1.1;\r\n        this.useAudio = useAudio;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        if(this.engineState instanceof TurnedOffEngine){\r\n            this.engineState = new TurnedOnEngine();\r\n            if (this.useAudio){\r\n                new Audio('./sounds/encendido.wav').play();\r\n                setTimeout(() => {\r\n                    this.soundEngine = new (window.AudioContext || window.webkitAudioContext)();\r\n                    fetch(\"./sounds/engine.wav\").then(\r\n                        response => response.arrayBuffer()\r\n                    ).then(buffer => this.soundEngine.decodeAudioData(buffer)\r\n                    ).then(buffer => {\r\n                        this.soundEngineSource = this.soundEngine.createBufferSource();\r\n                        this.soundEngineSource.buffer = buffer;\r\n                        this.soundEngineSource.loop = true;\r\n                        this.soundEngineSource.connect(this.soundEngine.destination);\r\n                        this.soundEngineSource.start();\r\n                    });\r\n                }, 1300);\r\n            }            \r\n        }\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4, Quaternion } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst FACTOR_BRAKE_TO_FORCE = 180;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld, initialPosition, useAudio = true, initialRotation = new Quaternion().identity()){\r\n        super();\r\n        this.carEngine = new CarEngine(useAudio);\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(initialPosition[0], initialPosition[1], initialPosition[2]);\r\n        this.rotationQuaternion = initialRotation;\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n    doHorn(){\r\n        new Audio(\"./sounds/bocina.wav\").play();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"dirVector\": new Vector3(0,0,1).applyQuaternion(this.rotation),\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM()\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.castShadow = true;\r\n            cone.receiveShadow = true;\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class CustomGeometryPhysics extends GeneralPhysics{\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        // eslint-disable-next-line\r\n        let _triangle, triangle_mesh = new Ammo.btTriangleMesh();\r\n        //declare triangles position vectors\r\n        let vectA = new Ammo.btVector3(0, 0, 0);\r\n        let vectB = new Ammo.btVector3(0, 0, 0);\r\n        let vectC = new Ammo.btVector3(0, 0, 0);\r\n        //retrieve vertices positions from object\r\n        let verticesPos = this.shape.getAttribute('position').array;\r\n        let triangles = [];\r\n        for (let i = 0; i < verticesPos.length; i += 3) {\r\n            triangles.push({\r\n                x: verticesPos[i],\r\n                y: verticesPos[i + 1],\r\n                z: verticesPos[i + 2]\r\n            });\r\n        }\r\n        //use triangles data to draw ammo shape\r\n        for (let i = 0; i < triangles.length - 3; i += 3) {\r\n\r\n            vectA.setX(triangles[i].x);\r\n            vectA.setY(triangles[i].y);\r\n            vectA.setZ(triangles[i].z);\r\n\r\n            vectB.setX(triangles[i + 1].x);\r\n            vectB.setY(triangles[i + 1].y);\r\n            vectB.setZ(triangles[i + 1].z);\r\n\r\n            vectC.setX(triangles[i + 2].x);\r\n            vectC.setY(triangles[i + 2].y);\r\n            vectC.setZ(triangles[i + 2].z);\r\n\r\n            triangle_mesh.addTriangle(vectA, vectB, vectC, true);\r\n        }\r\n        Ammo.destroy(vectA);\r\n        Ammo.destroy(vectB);\r\n        Ammo.destroy(vectC);\r\n\r\n        var shape = new Ammo.btBvhTriangleMeshShape(triangle_mesh, true);\r\n        shape.setMargin(0);\r\n        return shape;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class StraightStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n    createSidewalkMesh(scale){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10*scale );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(scale){\r\n        const geometry = new THREE.BoxGeometry( 10*this.SIZE/24, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        \r\n        texture.repeat.set( 1, 2*scale );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsLeft_\"+iter;\r\n        secondModel3D.position.x = -10*this.SIZE/24;\r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh(scale);\r\n            const leftSidewalk = this.createSidewalkMesh(scale);\r\n            const rightSidewalk = this.createSidewalkMesh(scale);\r\n            baseStreet.position.set(0,0,0);\r\n            leftSidewalk.position.set(-8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            rightSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet).add(leftSidewalk).add(rightSidewalk)\r\n            for (let i=0; i<4*scale; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.scale.set(1.0, 1.0, scale);\r\n            leftSidewalk.scale.set(1.0, 1.0, scale);\r\n            rightSidewalk.scale.set(1.0, 1.0, scale);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            rightSidewalk.updateMatrix();\r\n            rightSidewalk.updateMatrixWorld();\r\n            rightSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            this.LONG = this.SIZE*scale;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\n\r\nexport default class Intersection extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<4; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else if(i===2){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }else if(i===3){\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                }else{\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class Curve extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24+0.12;\r\n        this.TOP_CENTER = [this.SIZE/2-this.SQUARE_SIZE, this.SIDEWALK_HEIGHT, -this.SIZE/2+this.SQUARE_SIZE];\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    createLongSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SIZE/2,0,-this.SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(\r\n            initialPoint, \r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            5\r\n            );\r\n        const secondLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const thirdLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const fourthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2 - this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE, this.SIZE/2-this.SQUARE_SIZE), \r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector2(-this.SIZE/2+this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n        );\r\n        let pointsCurve = curve.getPoints(30);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const fifthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2+this.SQUARE_SIZE, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const sixthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2),\r\n            5\r\n        );\r\n        return [\r\n            ...lerpPoints, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints,\r\n            ...pointsCurve,\r\n            ...fifthLerpPoints,\r\n            ...sixthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    getGeometryLongSidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createLongSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(this.TOP_CENTER[0], this.TOP_CENTER[1], this.TOP_CENTER[2]);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SIZE/2)/this.SIZE, (points[i].z+this.SIZE/2)/this.SIZE);\r\n            uv3.push((this.TOP_CENTER[0]+this.SIZE/2)/this.SIZE, (this.TOP_CENTER[2]+this.SIZE/2)/this.SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    createLongSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 10, 10 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometryLongSidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsCurve_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsCurveOtherSide_\"+iter;\r\n        secondModel3D.position.x = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;      \r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = 10*this.SIZE/24;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            const sidewalk = this.createSidewalkMesh();\r\n            sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n            sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n            sidewalk.updateMatrix();\r\n            sidewalk.updateMatrixWorld();\r\n            sidewalk.matrixAutoUpdate = false;\r\n            const longSidewalk = this.createLongSidewalkMesh();\r\n            longSidewalk.position.set(0,0,0);\r\n            longSidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n            longSidewalk.updateMatrix();\r\n            longSidewalk.updateMatrixWorld();\r\n            longSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(sidewalk).add(longSidewalk);\r\n            for (let i=0; i<3; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class TStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuilding(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D);\r\n    }\r\n\r\n\r\n    createStraightSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10 );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<2; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else{\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            for (let i=0; i<4; i++){\r\n                this.createBuilding(position, i);\r\n            }\r\n            const leftSidewalk = this.createStraightSidewalkMesh();\r\n            leftSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(leftSidewalk);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\n\r\nexport default class Checkpoint extends VisualEntity{\r\n\r\n    constructor(checkpointsData){\r\n        super(null);\r\n        this.checkpointsData = checkpointsData;\r\n        this.RADIUS = 1;\r\n        this.HEIGHT = 5;\r\n        this.observedState = null;\r\n        this.stepHeartbeat = -0.002;\r\n        this.LEAST_OPACITY = 0.25;\r\n        this.MAX_OPACITY = 0.5;\r\n    } \r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        const currentOpacity = this.threeDModel.children[0].material.opacity;\r\n        const newOpacity = currentOpacity - this.stepHeartbeat;\r\n        this.threeDModel.children[0].material.opacity = newOpacity;\r\n        if(newOpacity <= this.LEAST_OPACITY || newOpacity >= this.MAX_OPACITY){\r\n            this.stepHeartbeat *= -1;\r\n        }\r\n    }\r\n\r\n    \r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS, this.RADIUS, this.HEIGHT, 32 );\r\n            const material = new THREE.MeshBasicMaterial( { color: 0x00ff00, opacity: 0.4, transparent:true });\r\n            const checkpoint = new THREE.Mesh( geometry, material );\r\n            checkpoint.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(checkpoint);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS *= scale[0];\r\n            this.RADIUS *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","export default class LevelScore {\r\n\r\n    constructor(initialScore = 0){\r\n        this.score = initialScore;\r\n    }\r\n\r\n    alterScore(points){\r\n        if (isNaN(points)){\r\n            throw new Error(\"Solo se puede alterar el puntaje con números.\");\r\n        }\r\n        this.score += points;\r\n    }\r\n\r\n    getCurrentScore(){\r\n        return this.score;\r\n    }\r\n}","import * as THREE from \"three\";\r\nimport BoxPhysics from \"../LogicModel/Physics/PhysicsTypes/BoxPhysics\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport TrafficCone from \"../3DModels/TrafficCone\";\r\nimport CylinderPhysics from \"../LogicModel/Physics/PhysicsTypes/CylinderPhysics\";\r\nimport CustomGeometryPhysics from \"../LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics\";\r\nimport StraightStreet from \"../3DModels/StraightStreet\";\r\nimport Intersection from \"../3DModels/Intersection\";\r\nimport Curve from \"../3DModels/Curve\";\r\nimport TStreet from \"../3DModels/TStreet\";\r\nimport Checkpoint from \"../3DModels/Checkpoint\";\r\nimport LevelScore from \"./LevelScore\";\r\n\r\n\r\nconst SUM_FOR_CHECKPOINT = 1000;\r\nconst SUB_FOR_CONE = -100;\r\nconst INITIAL_SCORE = 0;\r\n\r\nexport default class LevelFactory {\r\n  constructor(scene, physicsWorld) {\r\n    this.scene = scene;\r\n    this.physicsWorld = physicsWorld;\r\n    this.levelScore = new LevelScore(INITIAL_SCORE);\r\n    this.physicsToUpdate = [];\r\n    this.objectsToAnimate = [];\r\n    this.STREET_TYPES = {\r\n      \"STRAIGHT\": this.createStreet.bind(this),\r\n      \"CURVE\": this.createCurve.bind(this),\r\n      \"T_STREET\": this.createTStreet.bind(this),\r\n      \"INTERSECTION\": this.createIntersection.bind(this)\r\n    };\r\n    this.OBJECTS = {\r\n      \"CONE\": this.createCone.bind(this)\r\n    };\r\n  }\r\n\r\n  updatePhysics() {\r\n    this.physicsToUpdate.forEach(function (phys) {\r\n      phys.updatePhysics();\r\n    });\r\n  }\r\n\r\n  animate() {\r\n    this.objectsToAnimate.forEach(function (object) {\r\n      object.animate();\r\n    });\r\n  }\r\n\r\n  async createRectangle(\r\n    position,\r\n    length,\r\n    width,\r\n    height,\r\n    rotation,\r\n    pathTexture,\r\n    Ammo,\r\n    normalMapPath = null\r\n  ) {\r\n    const texture = new THREE.TextureLoader().load(pathTexture);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(length, height);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n    });\r\n    if (normalMapPath) {\r\n      let normalTexture = new THREE.TextureLoader().load(normalMapPath);\r\n      normalTexture.repeat.set(length, height);\r\n      normalTexture.wrapS = THREE.RepeatWrapping;\r\n      normalTexture.wrapT = THREE.RepeatWrapping;\r\n      floorMaterial.normalMap = normalTexture;\r\n      floorMaterial.normalScale.set(10, 10);\r\n    }\r\n    const rampa = new THREE.BoxGeometry(length, width, height);\r\n    rampa.rotateX(rotation);\r\n    const quaternionRamp = new THREE.Quaternion();\r\n    quaternionRamp.setFromAxisAngle(new THREE.Vector3(1, 0, 0), rotation);\r\n\r\n    let rampPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      quaternionRamp, //Quaternion2\r\n      new Ammo.btVector3(0, 0, 0), //Inertia\r\n      0, //Mass\r\n      new THREE.Vector3(length, width, height), //Shape\r\n      this.physicsWorld, //Physics World\r\n      1000 // friction\r\n    );\r\n\r\n    await rampPhysics.buildAmmoPhysics();\r\n    //this.physicsToUpdate.push(rampPhysics);\r\n    let ramp = new THREE.Mesh(rampa, floorMaterial);\r\n    ramp.position.set(position[0], position[1], position[2]);\r\n    this.scene.add(ramp);\r\n  }\r\n\r\n  async createCone(position, Ammo, rotationY) {\r\n    let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n    cone = await cone.addToScene(this.scene, \"trafficCone\", position, [0.5, 1, 0.5]);\r\n    let conePhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationY),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      10,\r\n      new THREE.Vector3(\r\n        cone.RADIUS_BOTTOM,\r\n        cone.HEIGHT / 2,\r\n        cone.RADIUS_BOTTOM\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await conePhysics.buildAmmoPhysics();\r\n    conePhysics.rigidBody.threeObject = cone;\r\n    conePhysics.rigidBody.onCollide = () => {\r\n      this.levelScore.alterScore(SUB_FOR_CONE);\r\n      console.log(\"New score: \", this.levelScore.getCurrentScore());\r\n    };\r\n    this.physicsToUpdate.push(conePhysics);\r\n    conePhysics.attachObserver(cone);\r\n    this.objectsToAnimate.push(cone);\r\n  }\r\n\r\n  async buildStreetPhysics(position, street, Ammo, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(street.SIZE, 0.1, street.LONG),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingLeft = new THREE.Vector3(\r\n      (-8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let leftSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingLeft.x,\r\n        position[1] + movingLeft.y,\r\n        position[2] + movingLeft.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await leftSidewalkPhysics.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + street.SIDEWALK_HEIGHT / 2 + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildTStreetPhysics(position, Ammo, tStreet, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingOne = new THREE.Vector3(\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n        0,\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2\r\n      ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingOne.x,\r\n        position[1] + movingOne.y,\r\n        position[2] + movingOne.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const movingTwo = new THREE.Vector3(\r\n      -tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n      0,\r\n      tStreet.SIZE / 2 - tStreet.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingTwo.x,\r\n        position[1] + movingTwo.y,\r\n        position[2] + movingTwo.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * tStreet.SIZE) / 24,\r\n      tStreet.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * tStreet.SIZE) / 24,\r\n        tStreet.SIDEWALK_HEIGHT,\r\n        tStreet.SIZE\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildIntersectionPhysics(position, Ammo, intersection) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const cornerPhysicsThree = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsThree.buildAmmoPhysics();\r\n    const cornerPhysicsFour = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsFour.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildCurvePhysics(position, Ammo, curve, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingCorner = new THREE.Vector3(\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2,\r\n      0,\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingCorner.x,\r\n        position[1] + movingCorner.y,\r\n        position[2] + movingCorner.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysics.buildAmmoPhysics();\r\n    const longSidePhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometryLongSidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await longSidePhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async createStreet(position, Ammo, rotationY, segmentsQuantity) {\r\n    let street = new StraightStreet(\"textures/road.jpg\");\r\n    await street.addToScene(\r\n      this.scene,\r\n      \"street\",\r\n      position,\r\n      segmentsQuantity,\r\n      rotationY\r\n    );\r\n    await this.buildStreetPhysics(position, street, Ammo, rotationY);\r\n  }\r\n\r\n  async createIntersection(position, Ammo) {\r\n    let intersection = new Intersection(\"textures/CleanRoadNoBorder.jpg\");\r\n    await intersection.addToScene(this.scene, \"intersection\", position);\r\n    await this.buildIntersectionPhysics(position, Ammo, intersection);\r\n  }\r\n\r\n  async createCurve(position, Ammo, rotationY) {\r\n    let curve = new Curve(\"textures/CleanRoadNoBorder.jpg\");\r\n    await curve.addToScene(this.scene, \"curve\", position, rotationY);\r\n    await this.buildCurvePhysics(position, Ammo, curve, rotationY);\r\n  }\r\n\r\n  async createTStreet(position, Ammo, rotationY) {\r\n    let tStreet = new TStreet(\"textures/CleanRoadNoBorder.jpg\");\r\n    await tStreet.addToScene(this.scene, \"tStreet\", position, rotationY);\r\n    await this.buildTStreetPhysics(position, Ammo, tStreet, rotationY);\r\n  }\r\n\r\n\r\n  async createCheckpoint(position, checkpoints){\r\n    let checkpoint = new Checkpoint(checkpoints);\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await checkpoint.addToScene(this.scene, \"checkpoint\", position, [1,1,1]);\r\n    let checkpointPhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      1,\r\n      new THREE.Vector3(\r\n        checkpoint.RADIUS,\r\n        checkpoint.HEIGHT / 2,\r\n        checkpoint.RADIUS\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    this.physicsToUpdate.push(checkpointPhysics);\r\n    await checkpointPhysics.buildAmmoPhysics();\r\n    checkpointPhysics.rigidBody.threeObject = checkpoint;\r\n    checkpointPhysics.rigidBody.onCollide = async () => {\r\n      this.physicsWorld.removeRigidBody( checkpointPhysics.rigidyBody );\r\n      this.physicsWorld.removeCollisionObject( checkpointPhysics.rigidBody );\r\n      this.levelScore.alterScore(SUM_FOR_CHECKPOINT);\r\n      console.log(\"New score: \", this.levelScore.getCurrentScore());\r\n      this.scene.remove( checkpoint.threeDModel );\r\n      const lastElemUsed = checkpoints.shift();\r\n      if (lastElemUsed.end){\r\n        //TODO: Fin?\r\n      } else if(checkpoints.length > 0){\r\n        await this.createCheckpoint([checkpoints[0].position_x, 1, checkpoints[0].position_y], checkpoints);\r\n      }\r\n    };\r\n    checkpointPhysics.attachObserver(checkpoint);\r\n    this.objectsToAnimate.push(checkpoint);\r\n  }\r\n\r\n  async createLevel0() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.createRectangle(\r\n      [10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 8,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [-10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 4,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [0, 0, 0],\r\n      100,\r\n      0.1,\r\n      100,\r\n      0,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createCone([0, 0.5, 10], Ammo);\r\n    this.createCone([0, 0.5, 30], Ammo);\r\n    this.createCone([0, 0.5, 20], Ammo);\r\n  }\r\n\r\n\r\n  async instantiateStreet(position, rotation, long, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    let segments = (long[0] === 30 ? long[1] : long[0])/30;\r\n    await this.STREET_TYPES[type]([position[0], 0, position[1]], Ammo, rotation, segments);\r\n  }\r\n\r\n\r\n  async instantiateObject(position, rotation, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await this.OBJECTS[type]([position[0], 0.5, position[1]], Ammo, rotation);\r\n  }\r\n\r\n  async createLevelCustom(json) {\r\n    \r\n    for( let i=0 ; i<json.streets.length; i++ ){\r\n      let street = json.streets[i];\r\n      await this.instantiateStreet(\r\n        [street.position_x,street.position_y], \r\n        street.rotation, \r\n        [street.long_x, street.long_y], \r\n        street.type\r\n      );\r\n    }\r\n    for( let i=0 ; i<json.objects.length; i++){\r\n      let obj = json.objects[i];\r\n      await this.instantiateObject(\r\n        [obj.position_x,obj.position_y], \r\n        obj.rotation, \r\n        obj.type\r\n      );\r\n    }\r\n    if (json.checkpoints.length > 0){\r\n      await this.createCheckpoint(\r\n        [json.checkpoints[0].position_x, 1, json.checkpoints[0].position_y],\r\n        json.checkpoints\r\n      );\r\n    }\r\n    return {\r\n      physicsToUpdate: this.physicsToUpdate,\r\n      objectsToAnimate: this.objectsToAnimate\r\n    };\r\n    // json.checkpoints.forEach --> Instancio y guardo en un array\r\n    // onCollide de un checkpoint --> saco ese de la escena y agrego uno nuevo (El que le sigue)\r\n    // Si el checkpoint es el ultimo --> Fin de nivel? Solo si esta marcado con un bool de fin nivel o algo asi\r\n  }\r\n}\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import CarModel from \"../../3DModels/CarModel\";\r\nimport Observer from \"../../ObserverPattern/Observer\";\r\nimport Car from \"../CarLogic/Car.js\";\r\n\r\nconst CLUTCH_PRESSED = 0;\r\nconst CLUTCH_NOT_PRESSED = 1;\r\n\r\n\r\nexport default class TrafficModel extends Observer {\r\n\r\n    constructor(scene, physicsWorld, streets){\r\n        super();\r\n        this.SIZE_OF_TRAFFIC = 2;\r\n        this.timeSinceLastUpdate = Date.now();\r\n        this.trafficWorker = new Worker(\"./workers/TrafficWorker.js\");\r\n        this.currentTraffic = {};\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld;\r\n        this.levelStreets = streets;\r\n        this.lastID = 0;\r\n        \r\n        this.trafficWorker.onmessage = (message) => {\r\n            this.onReceiveResponseFromWorker(message);\r\n        }\r\n    }\r\n\r\n    async onReceiveResponseFromWorker(message){\r\n        this.updateCarEngines(message.data);\r\n    }\r\n\r\n\r\n    async onCollideWithCarOfTraffic () {\r\n        console.log(\"CHOCASTE AL AUTO\");\r\n    }\r\n\r\n\r\n    async generateCar(){\r\n        \r\n        let carLogic = new Car(this.physicsWorld, [12 ,2,15 + this.lastID * 5], false);//12\r\n        await carLogic.carPhysics.buildAmmoPhysics(); \r\n        \r\n        let carModel = new CarModel();\r\n        await carModel.addToScene(this.scene, `traffic_car_${this.lastID}`, false);\r\n\r\n        carLogic.carPhysics.rigidBody.threeObject = carModel;\r\n        carLogic.carPhysics.rigidBody.onCollide = this.onCollideWithCarOfTraffic;\r\n\r\n        carLogic.attachObserver(carModel);\r\n        carLogic.notifyObservers();\r\n        \r\n        this.currentTraffic[this.lastID] = {\r\n            object3D: carModel,\r\n            engine: carLogic\r\n        };\r\n        this.lastID += 1;\r\n        return carModel;\r\n    }\r\n\r\n\r\n    deleteCar(carId){\r\n        this.currentTraffic[carId].engine.removeObserver(this.currentTraffic[carId].object3D);\r\n        this.physicsWorld.removeRigidBody( this.currentTraffic[carId].engine.carPhysics.rigidyBody );\r\n        this.physicsWorld.removeCollisionObject( this.currentTraffic[carId].engine.carPhysics.rigidyBody );\r\n        this.scene.remove( this.currentTraffic[carId].object3D.threeDModel );\r\n        delete this.currentTraffic[carId];\r\n    }\r\n\r\n\r\n    async generateInitialTraffic(){\r\n        const objectsInTraffic = [];\r\n        for (let i=0; i<this.SIZE_OF_TRAFFIC; i++){\r\n            objectsInTraffic.push(await this.generateCar());\r\n        }\r\n        return objectsInTraffic;\r\n    }\r\n\r\n    updateTraffic(){\r\n        const trafficCars = [];\r\n        Object.entries(this.currentTraffic).forEach(entry => {\r\n            const [carId, value] = entry;\r\n            const carData = value.engine.getDataToAnimate();\r\n            carData.carId = carId;\r\n            delete carData.physicsBody;\r\n            delete carData.wheelsData;\r\n            trafficCars.push(carData);\r\n        });\r\n        if (this.observedState){\r\n            delete this.observedState.physicsBody;\r\n            delete this.observedState.wheelsData;\r\n        }\r\n        this.trafficWorker.postMessage({\r\n            playersCar: this.observedState,\r\n            streets: this.levelStreets,\r\n            trafficCars\r\n        });\r\n    }\r\n\r\n\r\n    /* carActions trae un object que tiene de key carId, y de value:\r\n        * deleteCar: boolean -> define si desinstancia el auto o no\r\n        * accelerate: float entre 0 y 1 -> define si acelera o no el auto\r\n        * brake: float entre 0 y 1 -> define si frena o no el auto\r\n        * steering: float entre -1 y 1 -> define la rotacion del volante\r\n    */ \r\n    updateCarEngines(carActions){\r\n        Object.keys(carActions).forEach(carId => {\r\n            if (carActions[carId].deleteCar){\r\n                this.deleteCar(carId);\r\n            }else{\r\n                this.currentTraffic[carId].engine.turnOnCar();\r\n                this.currentTraffic[carId].engine.turnDirection(carActions[carId].steering);\r\n                this.currentTraffic[carId].engine.changeShift(CLUTCH_PRESSED, 1);\r\n                this.currentTraffic[carId].engine.accelerate(CLUTCH_NOT_PRESSED, carActions[carId].accelerate);  \r\n                this.currentTraffic[carId].engine.brake(CLUTCH_PRESSED, carActions[carId].brake);\r\n                this.currentTraffic[carId].engine.update();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.updateTraffic();\r\n        Object.values(this.currentTraffic).forEach(carObject => {\r\n            carObject.object3D.animate();\r\n        });\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Camera from \"../Camera/Camera\";\r\nimport CarOffsetCamera from \"../Camera/CarOffsetCamera\";\r\nimport OrbitalCamera from \"../Camera/OribtalCamera\";\r\nimport CarModel from \"../3DModels/CarModel\";\r\nimport LogitechG29ControllerSingleton from \"../LogicModel/ControllerMapping/LogitechG29Controller\";\r\nimport XboxControllerSingleton from \"../LogicModel/ControllerMapping/XboxController\";\r\nimport Car from \"../LogicModel/CarLogic/Car\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport { Vector3 } from \"three\";\r\nimport LevelFactory from \"../Levels/LevelsFactory\";\r\nimport { VRButton } from \"../addons/VRbutton\";\r\nimport Stats from \"stats.js\";\r\nimport TrafficModel from \"../LogicModel/IA/TrafficModel\";\r\n\r\n\r\nconst MAXIMUM_DISTANCE_FROM_PLAYER_TO_RENDER = 200;\r\nconst SEGMENT_SIZE = 50;\r\n\r\nexport default class ThreeScene extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentRPM: 0,\r\n      velocity: 0,\r\n      currentShift: 0,\r\n    };\r\n    this.physicsToUpdate = [];\r\n    localStorage.setItem(\"VR\", false);\r\n    this.gotAnyEvent = false;\r\n    this.stats = new Stats();\r\n    this.objectsToAnimate = [];\r\n    this.scene = new THREE.Scene();\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      powerPreference: \"high-performance\",\r\n      antialias: true,\r\n    });\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.clock = new THREE.Clock();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.jsonLevel = this.props.jsonLevel;\r\n    this.generateGeneralElements = this.generateGeneralElements.bind(this);\r\n    this.animation = this.animation.bind(this);\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n    this.generateEvents = this.generateEvents.bind(this);\r\n    this.addPlayerCar = this.addPlayerCar.bind(this);\r\n    this.generateLevel = this.generateLevel.bind(this);\r\n    this.addVR = this.addVR.bind(this);\r\n\r\n    await this.generateGeneralElements();\r\n    await this.createAmmo();\r\n    await this.addGeneralLights();\r\n    await this.generateLevel();\r\n    await this.addPlayerCar();\r\n    if(this.jsonLevel[\"has-traffic\"]){\r\n      await this.createTraffic();\r\n    }\r\n    this.generateEvents();\r\n    this.addVR();\r\n    this.renderer.setAnimationLoop(this.animation);\r\n  }\r\n\r\n  async addVR() {\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.renderer.xr.enabled = true;\r\n    this.renderer.xr.setFramebufferScaleFactor(0.75);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    document.body.appendChild(VRButton.createButton(this.renderer));\r\n  }\r\n\r\n  async generateLevel() {\r\n    this.level = new LevelFactory(this.scene, this.physicsWorld);\r\n    let updateDataLevel = await this.level.createLevelCustom(this.jsonLevel);\r\n    this.objectsToAnimate = [\r\n      ...this.objectsToAnimate,\r\n      ...updateDataLevel.objectsToAnimate,\r\n    ];\r\n    this.physicsToUpdate = [\r\n      ...this.physicsToUpdate,\r\n      ...updateDataLevel.physicsToUpdate,\r\n    ];\r\n    const geomField = new THREE.BoxGeometry(10000, 10000);\r\n    const texture = new THREE.TextureLoader().load(\"./textures/pasto.jpeg\");\r\n    texture.repeat.set(500, 500);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    const matField = new THREE.MeshBasicMaterial({ map: texture });\r\n    const meshField = new THREE.Mesh(geomField, matField);\r\n    meshField.name = \"GREEN_FIELD\";\r\n    meshField.position.set(0, -1, 0);\r\n    meshField.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\r\n    this.scene.add(meshField);\r\n  }\r\n\r\n  async generateGeneralElements() {\r\n    this.renderer.setClearColor(0x87cefa, 1);\r\n    this.camera = new Camera(this.renderer);\r\n    this.camera.addContainerToScene(this.scene);\r\n    this.stats.showPanel(0);\r\n    document.body.appendChild(this.stats.dom);\r\n  }\r\n\r\n  async addGeneralLights() {\r\n    this.scene.add(new THREE.AmbientLight(0xffffff, 0.5));\r\n  }\r\n\r\n  async addPlayerCar() {\r\n    this.carLogic = new Car(\r\n      this.physicsWorld, \r\n      [this.jsonLevel.initial_position[0],1,this.jsonLevel.initial_position[1]], //Initial Position\r\n      true, // Use Engine Audio\r\n      new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 0, 1, 0 ), this.jsonLevel.initial_rotation ) // Initial Rotation\r\n    );\r\n    await this.carLogic.carPhysics.buildAmmoPhysics();\r\n    let carModel = new CarModel();\r\n    this.carLogic.carPhysics.rigidBody.threeObject = carModel;\r\n    this.carLogic.attachObserver(carModel);\r\n    this.carLogic.attachObserver(this.camera);\r\n    this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n    this.carLogic.notifyObservers();\r\n  }\r\n\r\n\r\n  async createTraffic(){\r\n    this.trafficModel = new TrafficModel(this.scene, this.physicsWorld, this.jsonLevel.streets);\r\n    this.carLogic.attachObserver(this.trafficModel);\r\n    await this.trafficModel.generateInitialTraffic();\r\n  }\r\n\r\n  generateEvents() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    window.addEventListener(\"gamepaddisconnected\", function (e) {\r\n      LogitechG29ControllerSingleton.removeInstance();\r\n    });\r\n\r\n    document.addEventListener(\r\n      \"keydown\",\r\n      (event) => {\r\n        var numCamera = event.key;\r\n        this.carLogic.removeObserver(this.camera);\r\n        switch (numCamera) {\r\n          case \"1\":\r\n            this.camera = new Camera(this.renderer);\r\n            this.camera.addContainerToScene(this.scene);\r\n            break;\r\n          case \"2\":\r\n            this.camera = new OrbitalCamera(this.renderer);\r\n            break;\r\n          case \"3\":\r\n            this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n            break;\r\n          case \"4\":\r\n            this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n            break;\r\n          case \"5\":\r\n            this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.carLogic.notifyObservers();\r\n      },\r\n      false\r\n    );\r\n  }\r\n\r\n  async createAmmo() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.tempTransform = new Ammo.btTransform();\r\n    let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n    let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n    let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n    let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n    this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(\r\n      dispatcher,\r\n      overlappingPairCache,\r\n      solver,\r\n      collisionConfiguratation\r\n    );\r\n    this.physicsWorld.setGravity(new Ammo.btVector3(0, -9.8, 0));\r\n\r\n    const onEnterColission = Ammo.addFunction(async (cp, obj0, obj1) => {\r\n      let Ammo = await AmmoInstance.getInstance();\r\n      obj0 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj0, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      obj1 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj1, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      if (\r\n        obj0.threeObject &&\r\n        obj1.threeObject &&\r\n        (obj0.threeObject.threeDModel.name === \"driverCar\" ||\r\n          obj1.threeObject.threeDModel.name === \"driverCar\")\r\n      ) {\r\n        cp = Ammo.wrapPointer(cp, Ammo.btManifoldPoint);\r\n        const userPersistentData = cp.get_m_userPersistentData();\r\n        if (userPersistentData === 0) {\r\n            obj0.onCollide ? obj0.onCollide() : obj1.onCollide();\r\n            //Se cambia el contactId para denotar que la colision es constante. Para no restar puntos infinitamente.\r\n            const collisionContactID = 1; \r\n            cp.set_m_userPersistentData(collisionContactID);\r\n       }\r\n      }\r\n    });\r\n    this.physicsWorld.setContactProcessedCallback(onEnterColission);\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.camera.handleResize();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n  }\r\n\r\n  vecDistance(vectorA, vectorB){\r\n    return vectorA.distanceTo(vectorB);\r\n  }\r\n\r\n  getMaxSizeStreets(){\r\n    let maxX = 0, maxZ = 0;\r\n    for (let i=0; i< this.jsonLevel.streets.length; i++){\r\n      const street = this.jsonLevel.streets[i];\r\n      if ( maxX < street.position_x + street.long_x/2 ) {\r\n        maxX = street.position_x + street.long_x/2;\r\n      }\r\n      if ( maxZ < street.position_y + street.long_y/2 ) {\r\n        maxZ = street.position_y + street.long_y/2;\r\n      }\r\n    }\r\n    return [maxX, maxZ];\r\n  }\r\n\r\n  \r\n  generateSegmentedScenesChildren(){\r\n    const [maxX, maxZ] = this.getMaxSizeStreets();\r\n    this.segmentedScenes = [];\r\n    for (let i=0; i< parseInt(maxX/SEGMENT_SIZE) + 1; i++){\r\n      this.segmentedScenes.push([]);\r\n      for (let j=0; j<parseInt(maxZ/SEGMENT_SIZE) + 1; j++){\r\n        const segmentPosition = new THREE.Vector3(\r\n          i*SEGMENT_SIZE,\r\n          0,\r\n          j*SEGMENT_SIZE\r\n        );\r\n        this.segmentedScenes[i].push(this.scene.children.filter(\r\n          object => object.isLight || \r\n                      object.name === \"GREEN_FIELD\" || \r\n                      object.name.includes(\"traffic_car\") ||\r\n                      object.name === \"driverCar\" ||\r\n                      this.vecDistance(object.position, segmentPosition) <= MAXIMUM_DISTANCE_FROM_PLAYER_TO_RENDER\r\n        ));\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  getReducedScene() {\r\n    const cloneScene = new THREE.Scene();\r\n    if(this.segmentedScenes.length === 0){\r\n      this.generateSegmentedScenesChildren();\r\n    }\r\n    cloneScene.children = this.segmentedScenes\r\n    [\r\n      parseInt(this.lastPlayerPos.x/SEGMENT_SIZE)\r\n    ]\r\n    [\r\n      parseInt(this.lastPlayerPos.z/SEGMENT_SIZE)\r\n    ]\r\n    return cloneScene;\r\n  }\r\n\r\n  animation() {\r\n    this.stats.begin();\r\n    let deltaTime = this.clock.getDelta();\r\n    this.physicsWorld.stepSimulation(deltaTime, 10);\r\n    this.jsonLevel[\"has-traffic\"] && this.trafficModel.animate();\r\n    this.objectsToAnimate.forEach(function (object) {\r\n      object.animate();\r\n    });\r\n    this.physicsToUpdate.forEach(function (phys) {\r\n      phys.updatePhysics();\r\n    });\r\n    this.camera.setPositionRelativeToObject();\r\n    XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n    this.setState({\r\n      velocity: this.carLogic.getSpeed(),\r\n      currentRPM: this.carLogic.getCurrentRPM(),\r\n      currentShift: this.carLogic.getCurrentShift(),\r\n    });\r\n    // this.lastPlayerPos = this.carLogic.getDataToAnimate()[\"position\"];\r\n    // this.lastRenderScene = this.getReducedScene();\r\n    // this.renderer.render(this.lastRenderScene, this.camera.getCameraInstance());\r\n    this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n    this.stats.end();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100vw\" }}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            right: \"10px\",\r\n            color: \"red\",\r\n            width: \"175px\",\r\n          }}\r\n          id=\"Acelerador\"\r\n        >\r\n          <p style={{ zIndex: 20, display: \"float\", fontWeight: \"bold\" }}>\r\n            Cambio Actual: {parseInt(this.state.currentShift)}\r\n          </p>\r\n        </div>\r\n        <div\r\n          ref={(mount) => {\r\n            this.mount = mount;\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <div id=\"button-box\" style={{position:\"absolute\", top:\"5%\", right:\"5%\"}}>\r\n          <div className={\"MainMenuTitle\"}>\r\n            <h1 style={{textAlign:\"center\", fontSize:\"7rem\"}}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/scene\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/configs\")}\r\n            >\r\n              Configuración\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"right\", paddingRight:30}}>Configurations</h3>\r\n                        </div>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const ItemsContext = createContext();\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport { ItemsContext } from '../LevelEditorContext/ItemsContext';\r\n\r\n\r\nconst allUnselected = {\r\n    \"cone\": null,\r\n    \"trapecio\": null,\r\n    \"street\": null\r\n};\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const {setLastSelectedItem, lastSelectedItem} = React.useContext(ItemsContext);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    //const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    const [itemSelected, setItemSelected] = React.useState(allUnselected);\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        const dictSelection = {...allUnselected};\r\n        dictSelection[item] = \"selected\";\r\n        setItemSelected(dictSelection);\r\n        setLastSelectedItem({\r\n            selectedItem: item,\r\n            scale: 1.0,\r\n            positionX: 0.0,\r\n            positionY: 0.0,\r\n            zIndex: lastSelectedItem ? lastSelectedItem.zIndex + 1 : 1\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"left\", paddingLeft:10}}>Items</h3>\r\n                        </div>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <Grid style={{justifyContent: \"center\", display: \"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n                        {\r\n                            Object.entries(itemSelected).map(([nameItem, isSelected]) => {\r\n                                return (\r\n                                    <img \r\n                                        alt={`${nameItem}`}\r\n                                        key={nameItem}\r\n                                        src={`${nameItem}.png`} \r\n                                        width={75}\r\n                                        height={75} \r\n                                        className={`imageLevelEditor ${isSelected}`} \r\n                                        onClick={() => handleSelection(nameItem)}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport {useState} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst MAX_WIDTH_INPUT = 40;\r\nconst MAX_HEIGHT_INPUT = 40;\r\n\r\nexport const InputsGrid = ({setGridDimensions, gridDimensions}) => {\r\n    const [InputWidth, setInputWidth] = useState(gridDimensions.width);\r\n    const [InputHeight, setInputHeight] = useState(gridDimensions.height);\r\n\r\n    const onSubmit = () =>{\r\n      setGridDimensions(\r\n        {\r\n          width: InputWidth, \r\n          height: InputHeight\r\n        }\r\n      );\r\n    }\r\n  return (\r\n    <Grid container  direction=\"row\" width={\"80%\"} marginLeft={'10%'}\r\n    justifyContent=\"space-evenly\"\r\n    alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={2}>\r\n        <p>Ancho:</p>\r\n          <input \r\n            value={InputWidth} \r\n            type=\"number\" \r\n            step=\"1\" \r\n          onChange={\r\n              (event) => {\r\n                let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                setInputWidth(value > MAX_WIDTH_INPUT ? MAX_WIDTH_INPUT : value);\r\n              }\r\n        } \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={2}>\r\n          <div>\r\n            <p>Alto:</p>\r\n            <input \r\n              value={InputHeight} \r\n              type=\"number\" \r\n              step=\"1\" \r\n              onChange={\r\n                (event) => {\r\n                  let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                  setInputHeight(value > MAX_HEIGHT_INPUT ? MAX_HEIGHT_INPUT : value);\r\n                  \r\n                }\r\n              }\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button variant=\"contained\" onClick={onSubmit}>Actualizar</Button>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n","\r\nconst STANDARD_BOX_LONG = 30;\r\n\r\nexport class AbstractStreet{\r\n\r\n    constructor(ninePerNineGrid, rowIndex, columnIndex){\r\n        const rightFilled = ninePerNineGrid[1][2].filled;\r\n        const topFilled = ninePerNineGrid[0][1].filled;\r\n        const botFilled = ninePerNineGrid[2][1].filled;\r\n        const leftFilled = ninePerNineGrid[1][0].filled;\r\n        this.rotation = this.determineStreetRotation(topFilled, leftFilled, botFilled, rightFilled);\r\n        this.long = [\r\n            STANDARD_BOX_LONG, \r\n            STANDARD_BOX_LONG\r\n        ];\r\n        this.position = [\r\n            rowIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2, \r\n            columnIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2\r\n        ];\r\n    }\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //To implement by each son\r\n    }\r\n\r\n    static sumValueForCell(cell){\r\n        return cell.filled ? 1 : 0\r\n    }\r\n\r\n    static calculateNeighboursFilled(ninePerNineGrid){\r\n        let rowCount = 0;\r\n        let columnCount = 0;\r\n        rowCount += AbstractStreet.sumValueForCell(ninePerNineGrid[1][0]) + AbstractStreet.sumValueForCell(ninePerNineGrid[1][2]);\r\n        columnCount += AbstractStreet.sumValueForCell(ninePerNineGrid[0][1]) + AbstractStreet.sumValueForCell(ninePerNineGrid[2][1]);\r\n        return [rowCount, columnCount];\r\n    }\r\n\r\n    isStraight(){\r\n        return false;\r\n    }\r\n\r\n\r\n    determineStreetRotation(){\r\n        //To be defined by sons\r\n    }\r\n\r\n    getAsJSON(){\r\n        return {\r\n            \"position_x\": this.position[0],\r\n            \"position_y\": this.position[1],\r\n            \"rotation\": this.rotation,\r\n            \"long_x\": this.long[0],\r\n            \"long_y\": this.long[1]\r\n        }\r\n    }\r\n\r\n    getPositionAsRowAndColumn(){\r\n        const row = (this.position[0] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        const col = (this.position[1] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        return [row, col];\r\n    }\r\n\r\n\r\n    getPositionX(){\r\n        return this.position[0];\r\n    }\r\n\r\n    getPositionY(){\r\n        return this.position[1];\r\n    }\r\n\r\n    getLongX(){\r\n        return this.long[0];\r\n    }\r\n\r\n    getLongY(){\r\n        return this.long[1];\r\n    }\r\n   \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_TO_LEFT\": Math.PI*3/2,\r\n    \"LEFT_TO_BOT\": 0,\r\n    \"BOT_TO_RIGHT\": Math.PI/2,\r\n    \"RIGHT_TO_TOP\": Math.PI\r\n}\r\n\r\nexport class Curve extends AbstractStreet{\r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //Tiene que tener solo 2 lindantes, y no ser en misma direccion.\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return (rowCount === 1 && columnCount === 1);\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left){\r\n            return POSSIBLE_ROTATIONS[\"TOP_TO_LEFT\"];\r\n        }\r\n        if(left && bot){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_TO_BOT\"];\r\n        }\r\n        if(bot && right){\r\n            return POSSIBLE_ROTATIONS[\"BOT_TO_RIGHT\"];\r\n        }\r\n        if(right && top){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_TO_TOP\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"CURVE\";\r\n        return dict;\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"HORIZONTAL\": 0,\r\n    \"VERTICAL\": Math.PI/2\r\n}\r\n\r\nexport class StraightStreet extends AbstractStreet {\r\n    \r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        \r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);\r\n        return(columnCount === 2 && rowCount === 0 )|| (columnCount === 0 && rowCount === 2 )\r\n\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && bot){\r\n            return POSSIBLE_ROTATIONS[\"VERTICAL\"];\r\n        }\r\n        if(left && right){\r\n            return POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n        }\r\n    }\r\n\r\n    isStraight(){\r\n        return true;\r\n    }\r\n\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"STRAIGHT\";\r\n        return dict;\r\n    }\r\n\r\n\r\n    isHorizontal(){\r\n        return this.rotation === POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_SINGLE\": Math.PI,\r\n    \"LEFT_SINGLE\": Math.PI*3/2,\r\n    \"BOT_SINGLE\": 0,\r\n    \"RIGHT_SINGLE\": Math.PI/2\r\n}\r\nexport class TStreet extends AbstractStreet {\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 1 )|| (columnCount === 1 && rowCount === 2 );\r\n    }\r\n    \r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left && right){\r\n            return POSSIBLE_ROTATIONS[\"TOP_SINGLE\"];\r\n        }\r\n        if(left && bot && top){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_SINGLE\"];\r\n        }\r\n        if(bot && right && left){\r\n            return POSSIBLE_ROTATIONS[\"BOT_SINGLE\"];\r\n        }\r\n        if(right && top && bot){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_SINGLE\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"T_STREET\";\r\n        return dict;\r\n    }\r\n\r\n}","export class StraightStreetLinker{\r\n\r\n    constructor(arrayOfStreets){\r\n        this.sections = this.segregateSections(arrayOfStreets);\r\n        this.sectionsAsJSON = this.linkSections();\r\n    }\r\n\r\n    //Genero un array para cada tramo recto, que contenga todas las StraightStreets de ese tramo\r\n    //Cada array de seccion va dentro de un array general y eso retornamos\r\n    segregateSections(arrayOfStreets){\r\n        // Recorro array de streets --> Armo un hashMap de filas, y otro de columnas.\r\n        // Para cada fila o columna, separar las subsecciones correspondientes.\r\n        const rows = {};\r\n        const cols = {};\r\n        let sectionsArray = [];\r\n\r\n        for(let i = 0; i < arrayOfStreets.length; i++){\r\n            let [streetRow, streetCol] = arrayOfStreets[i].getPositionAsRowAndColumn();\r\n            if( arrayOfStreets[i].isHorizontal() ){\r\n                if( !(streetRow in rows) ){\r\n                    rows[streetRow] = [];\r\n                }\r\n                rows[streetRow].push({\"idx\":streetCol, \"street\":arrayOfStreets[i]});\r\n            }\r\n            else{\r\n                if( !(streetCol in cols) ){\r\n                    cols[streetCol] = [];\r\n                }\r\n                cols[streetCol].push({\"idx\":streetRow, \"street\":arrayOfStreets[i]});\r\n            }\r\n        }\r\n        for(const [, value] of Object.entries(rows)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        for(const [, value] of Object.entries(cols)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        return sectionsArray;\r\n        \r\n    }\r\n\r\n\r\n    generateArraySubsections(array){\r\n        const finalArray = [];\r\n        //Sort de array por idx creciente... CREEMOS que ya viene sorteado - VERIFICAR.\r\n        for ( let i=0; i<array.length; i++){\r\n            //Primer elemento, o no son lindantes\r\n            if( i === 0 || (Math.abs(array[i][\"idx\"] - array[i-1][\"idx\"]) > 1)){\r\n                finalArray.push([array[i][\"street\"]]);\r\n            }else{\r\n                finalArray[finalArray.length - 1].push(array[i][\"street\"]);\r\n            }\r\n        }\r\n        return finalArray;\r\n    }\r\n\r\n\r\n    linkSections(){\r\n        const sectionsJSON = [];\r\n        for(let i = 0; i < this.sections.length; i++){\r\n            //Rotation is the same for all of them\r\n            const jsonForStreet = {\r\n                \"position_x\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionX(), 0)/this.sections[i].length,\r\n                \"position_y\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionY(), 0)/this.sections[i].length ,\r\n                \"rotation\": this.sections[i][0].rotation,\r\n                \"long_x\": this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongX(), 0) : this.sections[i][0].getLongX(),\r\n                \"long_y\": !this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongY(), 0) : this.sections[i][0].getLongY(),\r\n                \"type\": \"STRAIGHT\"\r\n            }\r\n            sectionsJSON.push(jsonForStreet);\r\n        }\r\n        return sectionsJSON;\r\n    }\r\n\r\n    getSectionsAsJSON(){\r\n        return this.sectionsAsJSON;\r\n    }\r\n}","import { StraightStreet, TStreet, Intersection, Curve, StraightStreetLinker } from \"./Street\";\r\n\r\nconst TYPES_OF_STREETS = [\r\n    StraightStreet,\r\n    Curve,\r\n    TStreet,\r\n    Intersection\r\n];\r\n\r\nexport class StreetFactory{\r\n    \r\n    constructor(levelGrid, isInfiniteLevel){\r\n        this.levelGrid = levelGrid;\r\n        this.getNinePerNineGrid = isInfiniteLevel ? this.getNinePerNineGridInfinite : this.getNinePerNineGridFinite;\r\n    }\r\n\r\n    constructStreets(){\r\n        const straightStreetsArray = [];\r\n        const curvedStreetsArray = [];\r\n        //ararco desde la parte superior izq\r\n        for ( let i = 0; i < this.levelGrid.length ; i++ ){\r\n            for ( let j = 0; j < this.levelGrid[i].length ; j++ ){\r\n                const myCell = this.levelGrid[i][j];\r\n                if (myCell.filled){\r\n                    const streetObject = this.defineTypeOfStreet(i, j);\r\n                    if (streetObject.isStraight()){\r\n                        straightStreetsArray.push(streetObject);\r\n                    }\r\n                    else{\r\n                        curvedStreetsArray.push(streetObject);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        const conjunctedStraightStreets = this.linkStraightStreets(straightStreetsArray);\r\n        let finalArray = curvedStreetsArray.map(street => street.getAsJSON());\r\n        return [...finalArray, ...conjunctedStraightStreets];\r\n        //const finalArray = [...conjunctedStraightStreets, ...curvedStreetsArray];\r\n        //return finalArray.map(street => street.getAsJSON());\r\n    }\r\n\r\n    getNinePerNineGridInfinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            const rowArray = [];\r\n            //Si es negativo es la ultima, y sino es el modulo entre el index y la cant de filas.\r\n            const realRow = i < 0 ? this.levelGrid.length-1 : i % this.levelGrid.length;\r\n            for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                //Simil row pero para columna\r\n                const realColumn = y < 0 ? this.levelGrid[realRow].length-1 : y % this.levelGrid[realRow].length;\r\n                rowArray.push(this.levelGrid[realRow][realColumn]);\r\n            }\r\n            matrix.push(rowArray);\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    getNinePerNineGridFinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        const celda_vacia = {\r\n            \"filled\": false,\r\n        }\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            //Casos Filas Imaginarias vacías\r\n            if (i < 0 || i === this.levelGrid.length){\r\n                matrix.push([celda_vacia, celda_vacia, celda_vacia]);\r\n            }else{\r\n                const rowArray = [];\r\n                for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                    if (y < 0 || y === this.levelGrid[i].length){\r\n                        rowArray.push(celda_vacia);\r\n                    }else{\r\n                        rowArray.push(this.levelGrid[i][y]);\r\n                    }\r\n                }\r\n                matrix.push(rowArray);\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    /* Example:\r\n        | | | | | | | |\r\n        | | | x x x | |\r\n        | | | x Y x | |\r\n        | | | x x x | |\r\n        | | | | | | | |\r\n    */\r\n    defineTypeOfStreet(row, column){\r\n        const ninePerNineGrid = this.getNinePerNineGrid(row, column);\r\n        let typeDefined = false;\r\n        let typeResult = undefined;\r\n        for ( let i = 0; i < TYPES_OF_STREETS.length && !typeDefined; i++){\r\n            typeDefined = TYPES_OF_STREETS[i].isValidNinePerNineGrid(ninePerNineGrid);\r\n            typeResult = TYPES_OF_STREETS[i];\r\n        }\r\n        if (!typeDefined){\r\n            throw new Error(\"No se pudo definir el tipo de calle dentro de los tipos validos.\");\r\n        }\r\n        //Row 0 es la de abajo del todo. Invertimos la row.\r\n        return new typeResult(ninePerNineGrid, this.levelGrid.length - 1 - row, column);\r\n    }\r\n\r\n\r\n    linkStraightStreets(straightStreetsArray){\r\n        const linker = new StraightStreetLinker(straightStreetsArray);\r\n        return linker.getSectionsAsJSON();\r\n    }\r\n    \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\n\r\nexport class Intersection extends AbstractStreet{\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 2 )\r\n    }\r\n\r\n    determineStreetRotation(){\r\n        //No sense to rotate it\r\n        return 0;\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"INTERSECTION\";\r\n        return dict;\r\n    }\r\n}\r\n","import { StreetFactory } from \"./StreetFactory\";\r\n\r\n\r\nexport function downloadObjectAsJson(exportObj, exportName){\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n};\r\n\r\n\r\n\r\n\r\nfunction getCountSidesPainted(levelGrid, i, j){\r\n    let aux = 0;\r\n    for (let x = i-1; x <= i+1 && x < levelGrid.length; x++){\r\n        if (x >= 0 && x !== i){\r\n            aux += levelGrid[x][j].filled ? 1 : 0;\r\n        }\r\n    }\r\n    for(let y = j-1; y <= j+1 && y < levelGrid[i].length; y++){\r\n        if(y >= 0 && y !== j){\r\n            aux += levelGrid[i][y].filled ? 1 : 0;\r\n        }\r\n    }\r\n    return aux;\r\n}\r\n\r\nfunction validateGridNotInfinite(levelGrid){\r\n    let valid = true;\r\n    let wrongCells = [];\r\n    for (let i=0; i<levelGrid.length; i++){\r\n        for (let j=0; j<levelGrid[i].length; j++){\r\n            if (levelGrid[i][j].filled && getCountSidesPainted(levelGrid, i,j) <= 1){\r\n                valid = false;\r\n                wrongCells.push([i,j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        \"valid\": valid,\r\n        \"wrongCells\": wrongCells\r\n    }\r\n}\r\n\r\nfunction validateGridInfinite(){\r\n\r\n}\r\n\r\nexport function validateGrid(levelGrid, isInfinite){\r\n    \r\n    return (isInfinite ? validateGridInfinite(levelGrid) : validateGridNotInfinite(levelGrid));\r\n    \r\n}\r\n\r\nexport function generateJSONFromGrid(levelGrid){\r\n    \r\n    const streetFactory = new StreetFactory(levelGrid);\r\n    const streetsArray = streetFactory.constructStreets();\r\n    const objectsAndStreets = {\r\n        \"streets\": streetsArray\r\n    };\r\n    return objectsAndStreets;\r\n\r\n    \r\n}","import { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport MemoryIcon from '@mui/icons-material/Memory';\r\nimport { downloadObjectAsJson, validateGrid, generateJSONFromGrid } from '../Resources/LevelEditor';\r\n\r\nconst COLORS = {\r\n  \"FILLED\": \"darkgray\",\r\n  \"EMPTY\": \"white\",\r\n  \"WARNING\": 'orange',\r\n};\r\n\r\nconst WIDTH_GRID_VIEW = 600;\r\nconst HEIGHT_GRID_VIEW = 600;\r\nconst LEFT_CLICK = 0;\r\nconst RIGHT_CLICK = 2;\r\n\r\n\r\nexport const LevelGrid = ({gridDimensions}) => {\r\n\r\n  const [levelGrid, setLevelGrid] = useState([]);\r\n  const [click, setClick] = useState(false);\r\n  const [rightClick, setRightClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let finalGrid = [];\r\n    for(let i=0; i<gridDimensions.height; i++){\r\n      let currentRow = [];\r\n      for(let j=0; j<gridDimensions.width; j++){\r\n        let newCell = {\r\n          \"filled\": false,\r\n          \"div_color\": COLORS[\"EMPTY\"]\r\n        }\r\n        currentRow.push(newCell);\r\n      }\r\n      finalGrid.push(currentRow);\r\n    }\r\n    setLevelGrid(finalGrid);\r\n  }, [gridDimensions.width, gridDimensions.height]);\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", (event) => {\r\n      event.preventDefault();\r\n      if(event.button === LEFT_CLICK){\r\n        setClick(false);\r\n      }else if (event.button === RIGHT_CLICK){\r\n        setRightClick(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"contextmenu\", (event) => { event.preventDefault(); });\r\n  }, []);\r\n\r\n\r\n  const arrayContains = (array, insiderArray) => {\r\n    if (!insiderArray || !array){\r\n      return false;\r\n    }\r\n    for (let i=0; i<array.length; i++){\r\n      let equals = true;\r\n      for (let j=0; j<array[i].length; j++){\r\n        try{\r\n          if(array[i][j] !== insiderArray[j]){\r\n            equals = false;\r\n          }\r\n        }catch(exc){j=array[i].length; equals=false;}\r\n      }\r\n      if(equals) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const onSubmitLevel = () =>{\r\n    let result = validateGrid(levelGrid);\r\n    let vec_aux = [...levelGrid];\r\n    for( let i=0; i< levelGrid.length; i++ ){\r\n      for( let j=0; j < levelGrid[i].length; j++){\r\n        if (vec_aux[i][j].filled){\r\n          vec_aux[i][j].div_color = arrayContains(result.wrongCells, [i,j]) ? COLORS[\"WARNING\"] : COLORS[\"FILLED\"];\r\n        }\r\n        \r\n      }\r\n    }\r\n    setLevelGrid(vec_aux);\r\n    if (result.valid) {\r\n      downloadObjectAsJson(generateJSONFromGrid(levelGrid), \"Driving_Simulator_Custom_Level.json\");\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const onEnterHoverWithClickCell = (row, col) => {\r\n    if(click){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(rightClick){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n  \r\n  const onClickCell = (row, col, btn_click) => {\r\n    if(btn_click === LEFT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(btn_click === RIGHT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        width: WIDTH_GRID_VIEW,\r\n        height: HEIGHT_GRID_VIEW,\r\n        marginTop: 25,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n      onMouseDown = {(event) => {\r\n        event.preventDefault();\r\n        if(event.button === LEFT_CLICK){\r\n          setClick(true);\r\n        }else if (event.button === RIGHT_CLICK){\r\n          setRightClick(true);\r\n        }\r\n      }}\r\n    >\r\n      {levelGrid.map((row, idx_row) => {\r\n        return(\r\n          <div \r\n            className=\"row-level-grid\" \r\n            id={`row_${idx_row}`}\r\n            key={`row_${idx_row}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: HEIGHT_GRID_VIEW/gridDimensions.height,\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            {row.map((cell, idx_col) => {\r\n              return (\r\n                <div \r\n                  className=\"cell-level-grid\" \r\n                  key={`cell_${idx_row}_${idx_col}`}\r\n                  id={`cell_${idx_row}_${idx_col}`} \r\n                  style={{\r\n                    backgroundColor: cell[\"div_color\"],\r\n                    width: `${100/gridDimensions.width}%`,\r\n                    height: \"100%\",\r\n                    border: \"1px solid black\"\r\n                  }} \r\n                  //onMouseEnter = {() => onEnterHoverWithClickCell(idx_row, idx_col)}\r\n                  onMouseMove = {(event) => {\r\n                    event.preventDefault();\r\n                    onEnterHoverWithClickCell(idx_row, idx_col);\r\n                  }}\r\n                  onMouseUp = {(event) => {\r\n                    onClickCell(idx_row, idx_col, event.button);\r\n                  }}\r\n                  \r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:40}}>\r\n        <Button variant=\"contained\" onClick={onSubmitLevel}  color=\"success\">\r\n          <MemoryIcon/> Procesar nivel...\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { ItemsContext } from './LevelEditorContext/ItemsContext';\r\nimport { useState } from 'react';\r\nimport { InputsGrid } from './Components/InputsGrid';\r\n\r\nimport { LevelGrid } from './Components/LevelGrid';\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = useState(false);\r\n  const [openConfigs, setOpenConfigs] = useState(false);\r\n\r\n  const [itemsInGrid, setItemsInGrid] = useState([]);\r\n\r\n  const [lastSelectedItem, setLastSelectedItem] = useState(null);\r\n\r\n  const [gridDimensions, setGridDimensions] = useState({width:20, height:20});\r\n\r\n  React.useEffect(() => {\r\n    if (lastSelectedItem !== null){\r\n      setItemsInGrid(currentItems => [...currentItems, lastSelectedItem]);\r\n    }\r\n  }, [lastSelectedItem]);\r\n\r\n  return (\r\n    <>\r\n      <ItemsContext.Provider value={{lastSelectedItem, setLastSelectedItem}}>\r\n        <div>\r\n          <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n            <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n              <AddIcon/>\r\n            </IconButton>\r\n            <h1>Driving Simulator - Level Editor</h1>\r\n            <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n              <InputsGrid setGridDimensions={setGridDimensions} gridDimensions={gridDimensions}></InputsGrid>\r\n              <LevelGrid gridDimensions = {gridDimensions}/>\r\n              {itemsInGrid.map((item, idx) => {\r\n                return(\r\n                  <span key={idx}></span>\r\n                  /*<img \r\n                    key={idx} \r\n                    src={`${item.selectedItem}.png`} \r\n                    width={item.scale*75} \r\n                    height={item.scale*75} \r\n                    style={{\r\n                      top:item.positionY, \r\n                      left:item.positionX,\r\n                      position: \"absolute\",\r\n                      zIndex: item.zIndex.toString()\r\n                    }}\r\n                    onClick={() => {console.log(`OPEN CONFIGS OF idx: ${idx}, obj: ${JSON.stringify(itemsInGrid[idx])}`)}}\r\n                  />*/\r\n                );\r\n              })}\r\n          </div>\r\n          \r\n        </div>\r\n        <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n        <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n      </ItemsContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","//export const API_URL = \"https://backend-bata340.cloud.okteto.net\";\r\nexport const API_URL = \"http://localhost:8001\";\r\nexport const VALID_REGEX_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;","import { createContext } from \"react\";\r\n\r\nexport const SessionContext  = createContext(undefined);","\r\nconst { createHash } = require('crypto');\r\n\r\nexport const hash = (string) => {\r\n  return createHash('sha256').update(string).digest('hex');\r\n}","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants'\r\nimport { SessionHooks } from '../Sessions/SessionHooks';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const LoginForm = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const { setSessionWithResponse } = SessionHooks();\r\n\r\n  const postLogin = async () => {\r\n    try{\r\n        const APIResponse = await fetch(\r\n            `${API_URL}/users/login`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": hash(password)\r\n                })\r\n            }\r\n        );\r\n        if (APIResponse.status !== 200){\r\n            const json = await APIResponse.json();\r\n            const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n            let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n            throw new Error(error_msg);\r\n        }\r\n        return APIResponse.json();\r\n    }catch(e){\r\n        throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  const validateFields = () => {\r\n    const errors = []\r\n    if (password === \"\"){\r\n        errors.push(\"El campo contraseña se encuentra vacío.\");\r\n    }\r\n    if (email === \"\"){\r\n        errors.push(\"El campo email se encuentra vacío\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n        errors.push(\"El email establecido es inválido.\");\r\n      }\r\n    if(errors.length > 0){\r\n        setError(errors);\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n  }\r\n\r\n\r\n  const submitLogin = async (event) => {\r\n    event.preventDefault();\r\n    if(!validateFields()){\r\n        return;\r\n    }\r\n    try{\r\n        const loginResponse = await postLogin();\r\n        setSessionWithResponse(loginResponse);\r\n        /*TODO: DAR UN FEEDBACK DE SESION INICIADA CORRECTAMENTE ANTES DE REDIR*/\r\n        navigate(\"/\");\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n\r\n  const postLoginGoogle = async (token) => {\r\n    const APIResponse = await fetch(\r\n        `${API_URL}/users/login_google`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"token\": token\r\n            })\r\n        }\r\n    );\r\n    if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n    }\r\n    return APIResponse.json();\r\n  }\r\n\r\n  const submitGoogleLogin = async (token) => {\r\n    try{\r\n        const responseAPI = await postLoginGoogle(token);\r\n        setSessionWithResponse(responseAPI);\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitLogin}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Iniciar Sesión</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type=\"text\" \r\n                    onChange={(event) => setEmail(event.target.value)} \r\n                    value={email} \r\n                    name=\"email\"\r\n                    label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPassword(event.target.value)} \r\n                    value={password} \r\n                    name=\"password\"\r\n                    label=\"Contraseña\"\r\n                    InputProps={{ // <-- This is where the toggle button is added.\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">Iniciar Sesión</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/signup\"}>¿No posees una cuenta? Registrate aquí...</Link>\r\n            </div>\r\n            <div style={{marginTop:20, display:\"flex\", justifyContent:\"center\", textAlign:\"center\", alignContent:\"center\"}}>\r\n                <GoogleLogin\r\n                    onSuccess={credentialResponse => {\r\n                        const OAuthToken = credentialResponse.credential;\r\n                        submitGoogleLogin(OAuthToken);\r\n                    }}\r\n                    onError={() => {\r\n                        setError(['El inicio de sesión con Google ha fallado.']);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n","import { useContext } from 'react';\r\nimport { SessionContext } from './SessionContext';\r\n\r\nexport const SessionHooks = () => {\r\n  \r\n    const { session, setSession } = useContext(SessionContext);\r\n\r\n\r\n    const setSessionWithResponse = (loginResponse) => {\r\n        setSession({\r\n            user: loginResponse.user,\r\n            jwt: loginResponse.jwt\r\n        });\r\n    }\r\n\r\n    const getUser = () => {\r\n        return session.user ? session.user : undefined;\r\n    }\r\n\r\n    const getJWT = () => {\r\n        return session.jwt ? session.jwt : undefined;\r\n    }\r\n\r\n    return({\r\n        setSessionWithResponse,\r\n        getUser,\r\n        getJWT\r\n    })\r\n}\r\n","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\n\r\n\r\nexport const SignUpForm = () => {\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState(\"\");\r\n  const [nameToShow, setNameToShow] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const validateFields = () => {\r\n    const errorArray = [];\r\n    if (email === \"\" || password === \"\" || passwordConfirmation === \"\" || nameToShow === \"\"){\r\n      errorArray.push(\"Aún existen campos sin completar.\")\r\n    }\r\n    if (password !== passwordConfirmation){\r\n      errorArray.push(\"Las contraseñas establecidas no coinciden.\");\r\n    }\r\n    if (password.length < 8){\r\n      errorArray.push(\"La contraseña debe tener una longitud mínima de 8 caracteres.\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n      errorArray.push(\"El email establecido es inválido.\");\r\n    }\r\n    if(errorArray.length > 0){\r\n      setError(errorArray);\r\n      return false;\r\n    }else{\r\n      setError(undefined);\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  const postSignUp = async () => {\r\n    const fetchUrl = `${API_URL}/users/register`;\r\n    try{\r\n      const APIResponse = await fetch(\r\n        fetchUrl,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n              \"email\": email,\r\n              \"password\": hash(password),\r\n              \"name_to_show\": nameToShow\r\n          })\r\n        }\r\n      );\r\n      if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      return APIResponse.json();\r\n  }catch(e){\r\n      throw new Error(e);\r\n  }\r\n  }\r\n\r\n\r\n  const submitSignUp = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateFields()){\r\n      return;\r\n    }\r\n    // eslint-disable-next-line\r\n    const res = await postSignUp();\r\n    /*TODO: Mostrar dialog de creado exitoso, y despues mandarlo al login...*/\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitSignUp}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Crea tu cuenta</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setEmail(event.target.value)} \r\n                  value={email} \r\n                  name=\"email\"\r\n                  label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setNameToShow(event.target.value)} \r\n                  value={nameToShow} \r\n                  name=\"username\"\r\n                  label=\"Nombre para mostrar\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  onChange={(event) => setPassword(event.target.value)} \r\n                  value={password} \r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPasswordConfirmation(event.target.value)} \r\n                    value={passwordConfirmation} \r\n                    name=\"passwordConfirmation\"\r\n                    label=\"Repetir Contraseña\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">CREAR CUENTA</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/login\"}>¿Ya poses una cuenta? Inicia sesión...</Link>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n","import { SessionContext } from \"./SessionContext\";\r\nimport { useState } from 'react'\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nexport const SessionProvider = ( {childElement} ) => {\r\n  \r\n    const [session, setSession] = useState({\r\n        user: undefined,\r\n        jwt: undefined\r\n    });\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"18785041157-s9ga39r0i6up45radtj3soo6je1pneon.apps.googleusercontent.com\">\r\n            <SessionContext.Provider value={{session, setSession}}>\r\n                {childElement}\r\n            </SessionContext.Provider>\r\n        </GoogleOAuthProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CardContentHover = () => {\r\n  return (\r\n    <div>CardContentHover</div>\r\n  )\r\n}\r\n","import { CardContent, CardHeader, CardMedia } from '@mui/material'\r\nimport React from 'react'\r\n\r\nexport const CardContentNotHover = ({level}) => {\r\n  return (\r\n    <CardContent>\r\n        <CardMedia\r\n         component=\"img\"\r\n         height={200}\r\n         width={\"100%\"}\r\n         image={`/levels/images/${level.image}`}\r\n         title={level.title}\r\n         sx={{ objectFit: \"contain\", justifyContent: \"center\", display: \"flex\" }}\r\n        />\r\n        <CardHeader\r\n            title={level.title}\r\n            subheader={level.description}\r\n        />\r\n    </CardContent>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Card, CardActions, Grid } from '@mui/material';\r\nimport { CardContentHover } from './CardLevel/CardContentHover';\r\nimport { CardContentNotHover } from './CardLevel/CardContentNotHover';\r\n\r\nexport const LevelsSelectionGrid = () => {\r\n\r\n  const [levels, setLevels] = React.useState([]);\r\n  const [cardHovers, setCardHovers] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const levelsEffect = [];\r\n    fetch(\"./levels/basics.json\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      levelsEffect.push(data);\r\n      fetch(\"./levels/reversa.json\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            levelsEffect.push(data);\r\n            fetch(\"./levels/adelanto.json\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                levelsEffect.push(data);\r\n                fetch(\"./levels/giro_en_u.json\")\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    levelsEffect.push(data);\r\n                    fetch(\"./levels/estacionamiento.json\")\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                        levelsEffect.push(data);\r\n                        fetch(\"./levels/manejo_libre.json\")\r\n                        .then((response) => response.json())\r\n                        .then((data) => {\r\n                            levelsEffect.push(data);\r\n                            const hovers = {};\r\n                            for (let i=0; i<levelsEffect.length; i++){\r\n                                hovers[levelsEffect[i].title] = false;\r\n                            }\r\n                            setLevels(levelsEffect);\r\n                            setCardHovers(hovers);\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    });\r\n    \r\n    \r\n    \r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={4} rowSpacing={4} alignContent=\"center\" justifyContent=\"space-around\" sx={{padding:\"2rem\"}}>\r\n        {levels.map(level => \r\n            <Grid item xs={12} md={6} lg={4} key={level.title}>\r\n                <Card sx={{height:400}}>\r\n                    <CardActions  \r\n                        onMouseOver={ () => setCardHovers({...cardHovers, [level.title]:true}) }\r\n                        onMouseOut={ () => setCardHovers({...cardHovers, [level.title]:false}) }\r\n                    >\r\n                        {cardHovers[level.title] ?\r\n                            <CardContentHover level={level}/>\r\n                        :\r\n                            <CardContentNotHover level={level}/>\r\n                        }\r\n                    </CardActions>\r\n                </Card>\r\n            </Grid>\r\n        )}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Grid } from '@mui/material'\r\nimport { LevelsSelectionGrid } from './Components/LevelsSelectionGrid'\r\n\r\nexport const LevelsList = () => {\r\n  return (\r\n    <Grid container spacing={2} rowSpacing={2}>\r\n        <Grid item xs={12} style={{textAlign:\"center\"}}>\r\n            <h1>Driving Simulator - Seleccionar Nivel</h1>\r\n        </Grid>\r\n        <Grid item xs={12} alignContent=\"center\" justifyContent=\"center\" style={{textAlign:\"center\"}}>\r\n            <img src=\"logo_transp.png\" width=\"150\" alt=\"Driving Simulator Logo\"/>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <LevelsSelectionGrid />\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import ThreeScene from \"./Scene/ThreeScene\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MainMenu } from \"./Menus/MainMenu\";\r\nimport { LevelEditor } from \"./Menus/LevelEditor\";\r\nimport {\r\n  HashRouter as Router,\r\n  Routes as Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { LoginForm } from \"./Menus/Components/LoginForm\";\r\nimport { SignUpForm } from \"./Menus/Components/SignUpForm\";\r\nimport { SessionProvider } from \"./Menus/Sessions/SessionProvider\";\r\nimport { LevelsList } from \"./Menus/LevelsList\";\r\n\r\nfunction App() {\r\n  const [json, setJson] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Driving Simulator\";\r\n    fetch(\"./levels/estacionamiento.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setJson(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <SessionProvider\r\n      childElement={\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/levels\" element={<LevelsList/>} />\r\n            <Route exact path=\"/scene\" element={json && <ThreeScene jsonLevel={json} />} />\r\n            <Route exact path=\"/\" element={<MainMenu />} />\r\n            <Route exact path=\"/level-editor\" element={<LevelEditor />} />\r\n            <Route exact path=\"/login\" element={<LoginForm />} />\r\n            <Route exact path=\"/signup\" element={<SignUpForm />} />\r\n          </Switch>\r\n        </Router>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n\r\n"],"sourceRoot":""}