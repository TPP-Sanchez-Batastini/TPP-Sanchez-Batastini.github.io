{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","Levels/LevelsFactory.js","addons/VRbutton.js","Scene/ThreeScene.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","car","this","valueClutch","valueAccelerator","accelerate","valueBrake","brake","valueShift","changeShift","wheelAxesValue","turnDirection","turnOnCar","update","mode","changeShiftBox","Observer","observedState","newState","Camera","renderer","camera","THREE","window","innerWidth","innerHeight","group","add","aspect","updateProjectionMatrix","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","lookAt","positionToLookAt","x","y","z","offsetVector","CarOffsetCamera","positionCamera","cameraOffsetRotated","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","loadAsync","threeDObject","result","scene","objectName","scale","loadFBX","modelVariable","loadGLTF","name","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","moveCar","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","Math","PI","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","quaternion","w","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","steeringWheel","children","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorTwo","rotationYVectorOne","rotateX","require","default","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","i","length","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","doActionByMapping","updateCar","axes","handleAccelerate","handleBrake","console","log","buttons","pressed","doActionsPedals","doActionsWheel","doActionsDPad","doActionsButtons","doActionsShifter","LogitechG29ControllerSingleton","Error","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","abs","axe","value","doActionHotKeys","doActionsAxes","doActionsTriggers","XboxControllerSingleton","Observable","observers","observer","index","indexOf","splice","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","getInstance","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","width","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringValue","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","changeValueInRPMCurve","TurnedOnEngine","CarEngine","engineState","shiftBox","shutDownEngine","clutchIsPressed","rpmReturn","handleEngineShutdown","RPMModification","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","shift","newShift","oldVelocity","getCurrentRPM","normalFactorRPM","calculateNormalFactorRPM","XValue","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactorToDecrement","normalFactor","ManualBox","isValidShift","changeRPM","getValueForNewRPM","SemiAutomaticBox","Car","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","buildAmmoPhysics","engineCanApplyForce","setEngineForce","getEngineForce","getVelocity","turnOn","setSteeringRotation","positionAndRotation","updatePhysics","getDataToAnimate","getCurrentShift","GeneralPhysics","generateShape","setMargin","getMotionState","getWorldTransform","notifyObservers","velocityVector","velVectorBT","applyForce","CylinderPhysics","btCylinderShape","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","undefined","load","material","map","materialBox","geometryPlane","box","cone","BoxPhysics","LevelFactory","level","physicsToUpdate","objectsToAnimate","createLevel0","forEach","phys","object","animate","height","pathTexture","normalMapPath","wrapS","wrapT","repeat","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","ramp","addToScene","conePhysics","attachObserver","createRectangle","createCone","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","opacity","outline","zIndex","xr","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","requestSession","optionalFeatures","setItem","end","showEnterVR","xrSessionIsGranted","click","catch","exception","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","ThreeScene","state","alpha","setSize","setClearColor","outputEncoding","clock","createAmmo","ambientLight","sunLight","animation","bind","handleWindowResize","generateEvents","mount","appendChild","body","createButton","enabled","e","removeInstance","event","numCamera","key","removeObserver","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","handleResize","render","getCameraInstance","deltaTime","getDelta","setAnimationLoop","stepSimulation","setPositionRelativeToObject","checkEvents","setState","getSpeed","top","fontWeight","parseInt","velocity","ref","Component","App","useEffect","title","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.21dee9cf.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.35;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.group =  new THREE.Object3D().add(this.camera);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") == \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.55,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n                let offsetVector = new Vector3(0,0,5);\r\n                offsetVector.applyQuaternion(this.observedState.rotation);\r\n                positionToLookAt.x += offsetVector.x;\r\n                positionToLookAt.y += offsetVector.y;\r\n                positionToLookAt.z += offsetVector.z;\r\n                this.camera.lookAt(positionToLookAt);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader()\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        super('res/models/source/AutoConInterior.gltf');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n    }\r\n\r\n\r\n    async addToScene(scene){\r\n        await super.addToScene(scene, \"driverCar\", POSITION, SCALE);\r\n        //this.addPhysicsView(scene)\r\n        \r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, -this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, -this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n\r\n        let rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation\r\n        );\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(-this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(-this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation + this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n            this.globalControllerHandler.updateCar();\r\n        }\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                console.log(\"DPAD DOWN\");\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                console.log(\"DPAD LEFT\");\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                console.log(\"DPAD RIGHT\");\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                console.log(\"DPAD UP\");\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            console.log(\"BOTON X\");\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            console.log(\"BOTON TRIANGULO\");\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            console.log(\"BOTON CIRCULO\");\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            console.log(\"BOTON CUADRADO\");\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.carLogic.changeShiftBox(\"manual\");\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            console.log(\"BOTON +\");\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            console.log(\"BOTON -\");\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            console.log(\"BOTON L2\");\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            console.log(\"BOTON L3\");\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n            console.log(\"BOTON R3\");\r\n        this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            console.log(\"BOTON ENTER\");\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            console.log(\"BOTON SHARE\");\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            console.log(\"BOTON OPTIONS\");\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            console.log(\"BOTON BUMPER LEFT\");\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            console.log(\"BOTON BUMPER RIGHT\");\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            console.log(\"RUEDA IZQ\");\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            console.log(\"RUEDA DER\");\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n            this.globalControllerHandler.updateCar();\r\n        }\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n           // console.log(\"Adelante/Abajo Joy Izq: \" + this.gamepad.axes[this.yLeftAxe]);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n            //console.log(\"Izq/Der Joy Izq: \" + this.gamepad.axes[this.xLeftAxe]);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n           // console.log(\"Adelante/Abajo Joy Der: \" + this.gamepad.axes[this.yRightAxe]);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n           // console.log(\"Izq/Der Joy Der: \" + this.gamepad.axes[this.xRightAxe]);\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n            //console.log(this.gamepad.buttons[this.buttonR2]);\r\n            //this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n            console.log(\"accelerator: \" + this.gamepad.buttons[this.buttonR2].value);\r\n            //this.auto.acelerar();\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n            //this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n            //console.log(\"Break: \" + this.gamepad.buttons[this.buttonL2].value);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            //console.log(\"Aumento de marcha (R1)\");\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                console.log(\"Marcha Actual: \" + this.actualShift)\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            //console.log(\"reduccion de marcha (L1)\");\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                console.log(\"Marcha Actual: \" + this.actualShift)\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            console.log(\"shareButton\");\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            console.log(\"padUp\");\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            console.log(\"padDown\");\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            console.log(\"padLeft\");\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            console.log(\"padRight\");\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            console.log(\"buttonA\");\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            console.log(\"buttonB\");\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            console.log(\"buttonY\");\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            console.log(\"buttonX\");\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            console.log(\"buttonR3\");\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            console.log(\"buttonL3\");\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            console.log(\"padUp\");\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            console.log(\"padDown\");\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            console.log(\"padLeft\");\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            console.log(\"padRight\");\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            console.log(\"Menu\");\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n        \r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        this.engineState = new TurnedOnEngine();\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4 } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst POSITION = [0,0,0];\r\nconst FACTOR_BRAKE_TO_FORCE = 300;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld){\r\n        super();\r\n        this.carEngine = new CarEngine();\r\n        this.shiftBox = new ManualBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(POSITION[0], POSITION[1], POSITION[2]);\r\n        this.rotationQuaternion = new Vector4(0,0,0,1);\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        this.carPhysics.buildAmmoPhysics();\r\n        \r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.setMargin(0.05);\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n           // console.log(this.observedState);\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n    }\r\n}","import * as THREE from 'three';\r\nimport BoxPhysics from '../LogicModel/Physics/PhysicsTypes/BoxPhysics';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\n// import ConePhysics from '../LogicModel/Physics/PhysicsTypes/ConePhysics'\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\n\r\nexport default class LevelFactory {\r\n\r\n\r\n    constructor(level, scene,physicsWorld){\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld\r\n        this.physicsToUpdate = [];\r\n        this.objectsToAnimate = [];\r\n        if(level === 0){\r\n            this.createLevel0()\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        })\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n    }\r\n\r\n\r\n    async createRectangle(position,length, width, height ,rotation, pathTexture, Ammo, normalMapPath = null){\r\n        \r\n        const texture = new THREE.TextureLoader().load( pathTexture );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( length, height );\r\n        const floorMaterial = new THREE.MeshStandardMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        if( normalMapPath ){\r\n            let normalTexture = new THREE.TextureLoader().load(\r\n                normalMapPath\r\n            );\r\n            normalTexture.repeat.set( length, height );\r\n            normalTexture.wrapS = THREE.RepeatWrapping;\r\n            normalTexture.wrapT = THREE.RepeatWrapping;\r\n            floorMaterial.normalMap = normalTexture;\r\n            floorMaterial.normalScale.set(10, 10);\r\n        }\r\n        const rampa = new THREE.BoxGeometry( length, width, height);\r\n        rampa.rotateX(rotation);\r\n        const quaternionRamp = new THREE.Quaternion();\r\n        quaternionRamp.setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), rotation);\r\n\r\n        let rampPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            quaternionRamp ,  //Quaternion2\r\n            new Ammo.btVector3(0,0,0), //Inertia\r\n            0, //Mass\r\n            new THREE.Vector3(length, width, height), //Shape\r\n            this.physicsWorld, //Physics World\r\n            1000 // friction\r\n        ); \r\n        \r\n        await rampPhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(rampPhysics);\r\n        let ramp = new THREE.Mesh( rampa, floorMaterial );\r\n        ramp.position.set(position[0],position[1],position[2]);\r\n        this.scene.add(ramp);\r\n    }\r\n\r\n\r\n    async createCone(position , Ammo){\r\n        let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        cone.addToScene(this.scene, \"trafficCone\", position, [ 0.5, 0.5, 0.5]);\r\n        let conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(cone.RADIUS_BOTTOM, cone.HEIGHT/2, cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(conePhysics);\r\n        conePhysics.attachObserver(cone);\r\n        this.objectsToAnimate.push(cone);\r\n    }\r\n\r\n\r\n    async createLevel0(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.createRectangle( [ 10, 0, 10 ], 10, 2, 10, -Math.PI/8, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ -10, 0, 10 ], 10, 2, 10, -Math.PI/4, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ 0, 0, 0 ], 100, 0.1, 100, 0, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createCone( [ 0, 0.5, 10 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 30 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 20 ], Ammo );\r\n    }\r\n\r\n}\r\n\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport Camera from '../Camera/Camera';\r\nimport CarOffsetCamera from '../Camera/CarOffsetCamera';\r\nimport OrbitalCamera from '../Camera/OribtalCamera';\r\nimport CarModel from '../3DModels/CarModel';\r\nimport LogitechG29ControllerSingleton from '../LogicModel/ControllerMapping/LogitechG29Controller';\r\nimport XboxControllerSingleton from '../LogicModel/ControllerMapping/XboxController';\r\nimport Car from '../LogicModel/CarLogic/Car';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\nimport { Vector3 } from 'three';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\nimport LevelFactory from '../Levels/LevelsFactory';\r\nimport  {VRButton}  from '../addons/VRbutton';\r\n\r\nexport default class ThreeScene extends Component{\r\n    \r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            \"currentRPM\": 0,\r\n            \"velocity\": 0,\r\n            \"currentShift\": 0,\r\n        };\r\n        this.physicsToUpdate = [];\r\n        localStorage.setItem(\"VR\", false);\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        //Generate elements needed to render the scene\r\n        this.objectsToAnimate = [];\r\n        this.scene = new THREE.Scene();\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true });\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\r\n        this.renderer.setClearColor( 0x87cefa, 1 );\r\n        this.renderer.outputEncoding = THREE.sRGBEncoding;\r\n        this.camera = new Camera(this.renderer);\r\n        \r\n        this.clock = new THREE.Clock();\r\n\r\n        //Ammo.js\r\n        await this.createAmmo();\r\n\r\n        //Add elements to the scene\r\n        this.ambientLight = new THREE.AmbientLight(0xffffff, 1.0);\r\n        this.scene.add(this.ambientLight);\r\n        this.sunLight = new THREE.DirectionalLight( 0xffffff, 1.0 );\r\n        this.sunLight.position.set( 0, 100, 0 );\r\n        this.scene.add( this.sunLight );\r\n        \r\n        let Ammo = await AmmoInstance.getInstance() ;\r\n\r\n        this.level = new LevelFactory(0,this.scene, this.physicsWorld);\r\n        this.physicsToUpdate.push(this.level);\r\n        this.objectsToAnimate.push(this.level);\r\n\r\n        this.cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        this.cone.addToScene(this.scene, \"trafficCone\", [10,0,0], [1,1,1]);\r\n        this.conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(10,0,0), \r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(this.cone.RADIUS_BOTTOM, this.cone.HEIGHT/2, this.cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await this.conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(this.conePhysics);\r\n        this.conePhysics.attachObserver(this.cone);\r\n        this.objectsToAnimate.push(this.cone);\r\n\r\n        //Add driver's car to scene\r\n        this.carLogic = new Car(this.physicsWorld);\r\n        let carModel = new CarModel();\r\n        this.carLogic.attachObserver(carModel);\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n        this.carLogic.notifyObservers();\r\n        \r\n        //Bind this to methods of the class\r\n        this.animation = this.animation.bind(this);\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n        this.generateEvents = this.generateEvents.bind(this);\r\n        \r\n        //Handle resize and gamepad connection on window.\r\n        this.generateEvents();\r\n\r\n        //Append canvas to DOM in HTML and start animating\r\n        this.mount.appendChild(this.renderer.domElement);\r\n        this.animation();\r\n\r\n        document.body.appendChild( VRButton.createButton( this.renderer ) );\r\n        this.renderer.xr.enabled = true;\r\n        \r\n    }\r\n\r\n\r\n    generateEvents(){\r\n        window.addEventListener(\"resize\", this.handleWindowResize);\r\n        window.addEventListener(\"gamepaddisconnected\", function(e){\r\n            LogitechG29ControllerSingleton.removeInstance();  \r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            var numCamera = event.key;\r\n            this.carLogic.removeObserver(this.camera);\r\n            switch(numCamera){\r\n                case \"1\":\r\n                    this.camera = new Camera(this.renderer);\r\n                    break;\r\n                case \"2\":\r\n                    this.camera = new OrbitalCamera(this.renderer);\r\n                    break;\r\n                case \"3\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"4\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"5\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.carLogic.attachObserver(this.camera);\r\n            this.carLogic.notifyObservers();\r\n\r\n          }, false);\r\n    }\r\n\r\n\r\n    async createAmmo(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.tempTransform = new Ammo.btTransform();\r\n        let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n        let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n        let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n        let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n        this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, overlappingPairCache, solver, collisionConfiguratation);\r\n        this.physicsWorld.setGravity(new Ammo.btVector3(0,-9.8,0));\r\n    }\r\n\r\n\r\n    handleWindowResize(){\r\n        this.camera.handleResize();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance() );\r\n    }\r\n\r\n\r\n    animation(){\r\n        let deltaTime = this.clock.getDelta();\r\n        this.renderer.setAnimationLoop(this.animation);\r\n        this.physicsWorld.stepSimulation(deltaTime, 10);\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        });\r\n        this.camera.setPositionRelativeToObject();\r\n        XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n        this.setState({\"velocity\": this.carLogic.getSpeed(), \"currentRPM\": this.carLogic.getCurrentRPM(), \"currentShift\": this.carLogic.getCurrentShift()});\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance());\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div style={{position:\"absolute\", left:\"10px\", top:\"10px\", color:\"red\"}} id=\"Acelerador\">\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Velocidad: {parseInt(this.state.velocity)} km/h\r\n                    </p>\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        RPM: {parseInt(this.state.currentRPM)}\r\n                    </p>\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Cambio Actual: {parseInt(this.state.currentShift)}\r\n                    </p>\r\n                </div>\r\n                <div ref={mount => {this.mount = mount;}}></div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","import ThreeScene from './Scene/ThreeScene';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    document.title = 'Driving Simulator';\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ThreeScene/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n"],"sourceRoot":""}