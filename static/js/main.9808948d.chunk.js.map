{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/Models.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics.js","3DModels/StraightStreet.js","3DModels/Intersection.js","3DModels/Curve.js","3DModels/TStreet.js","3DModels/Checkpoint.js","Levels/LevelScore.js","Levels/LevelsFactory.js","addons/VRbutton.js","LogicModel/IA/TrafficModel.js","Menus/Sessions/SessionContext.jsx","Menus/Constants/Constants.js","Menus/Components/EndOfLevelModal.jsx","Menus/Components/ConfigGrafics.jsx","Menus/Components/PauseModal.jsx","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/LevelEditorContext/ItemsContext.jsx","Menus/Components/ItemsDrawer.jsx","Menus/Components/InputsGrid.jsx","Menus/Resources/Street/AbstractStreet.js","Menus/Resources/Street/Curve.js","Menus/Resources/Street/StraightStreet.js","Menus/Resources/Street/TStreet.js","Menus/Resources/Street/StraightStreetLinker.js","Menus/Resources/StreetFactory.js","Menus/Resources/Street/Intersection.js","Menus/Resources/LevelEditor.js","Menus/Components/LevelGrid.jsx","Menus/LevelEditor.jsx","Menus/Sessions/SessionHooks.jsx","Menus/Resources/Hasher.js","Menus/Components/LoginForm.jsx","Menus/Components/SignUpForm.jsx","Menus/Sessions/SessionProvider.jsx","Menus/Components/CardLevel/LevelCardContent.jsx","Menus/Components/LevelsSelectionGrid.jsx","Menus/Components/LoginDialog.jsx","Menus/Components/LoginButton.jsx","Menus/LevelsList.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","constructor","car","this","handleAccelerate","valueClutch","valueAccelerator","accelerate","handleBrake","valueBrake","brake","doHorn","changeShift","valueShift","turnDirection","wheelAxesValue","turnOnCar","updateCar","update","changeShiftBox","mode","turnRightLight","turnLeftLight","turnParkingLight","Observer","observedState","newState","Camera","renderer","super","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","rotation","handleResize","aspect","updateProjectionMatrix","setPositionRelativeToObject","cameraOffset","Vector3","applyQuaternion","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","rotationQuat","x","y","z","w","normalize","quaternion","getCameraInstance","addContainerToScene","scene","rotate","CarOffsetCamera","positionCamera","cameraOffsetRotated","positionToLookAt","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","async","loadAsync","threeDObject","objectName","scale","modelVariable","loadFBX","e","loadGLTF","name","getModel","animate","ModelsSingleton","carModel","building_1","building_2","building_3","building_4","changeMaterialsToBasic","children","i","length","child","isGroup","isMesh","newMaterial","prototype","call","material","receiveShadow","castShadow","pathToTextureRcvd","result","Models","static","loadModels","Error","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","LIGTH_TIC","CarModel","isIA","arguments","undefined","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","lastTurnOff","Date","generateRetrovisor","plane","graphSettings","JSON","parse","retrovisor","Reflector","textureWidth","MirrorResMultiplier","textureHeight","clipBias","multisample","AAEspejos","rotateX","rotateY","generateLeftMirror","leftMirrorGeometry","leftMirror","container","Object3D","generateRightMirror","rightMirrorGeometry","rightMirror","generateMirrors","CreateMirrors","generateSpotlights","shouldTurnLightsOn","lightsOn","rightSpotlight","leftSpotlight","targetRight","targetLeft","target","shadow","mapSize","width","height","near","far","fov","intensity","angle","distance","rightTurnlight","targetTurnRight","leftTurnlight","targetTurnLeft","rightTurnlightBack","targetTurnRightBack","leftTurnlightBack","targetTurnLeftBack","generateDirectionalLight","dirLight","turnRigth","time","timePassed","turnLeft","hasMirrors","models","getInstance","clone","moveCar","addPhysicsView","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","watchPhysicsColliders","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorOne","default","require","LogitechG29Controller","pause","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","checkEvents","doActionByMapping","doActionsPedals","axes","doActionsWheel","doActionsDPad","doActionsButtons","buttons","pressed","doActionsShifter","setCamera","updatePauseFun","LogitechG29ControllerSingleton","instance","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","doActionsAxes","axe","doActionHotKeys","value","doActionsTriggers","XboxControllerSingleton","Observable","observers","attachObserver","observer","removeObserver","index","indexOf","splice","notifyObservers","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","updatePhysics","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","getRigidBody","setEngineForce","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringRotation","setSteeringValue","getVelocity","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","changeValueInRPMCurve","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","TurnedOnEngine","CarEngine","useAudio","engineState","playbackRate","turnOn","Audio","play","soundEngine","close","setTimeout","AudioContext","webkitAudioContext","fetch","then","response","arrayBuffer","buffer","decodeAudioData","soundEngineSource","createBufferSource","loop","connect","destination","start","clutchIsPressed","handleEngineShutdown","shiftBox","shutDownEngine","isInConditionToAccelerate","engineCanApplyForce","rpmReturn","changeRPM","RPMModification","log","getCurrentRPM","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","isValidShift","shift","calculateNormalFactorRPM","newShift","oldVelocity","getValueForNewRPM","normalFactorRPM","XValue","getEngineForce","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactor","getCurrentShift","ManualBox","SemiAutomaticBox","Car","initialPosition","initialRotation","Quaternion","identity","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","turnRigthLigth","turnLeftLigth","positionAndRotation","getDataToAnimate","getLastRotation","dirVector","rightDir","getSpeed","GeneralPhysics","generateShape","getMotionState","getWorldTransform","setLinearVelocity","velocityVector","velVectorBT","applyForce","BoxPhysics","setMargin","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","load","map","materialBox","geometryPlane","box","cone","CylinderPhysics","btCylinderShape","CustomGeometryPhysics","triangle_mesh","btTriangleMesh","vectA","vectB","vectC","verticesPos","getAttribute","array","triangles","setX","setY","setZ","addTriangle","destroy","btBvhTriangleMeshShape","StraightStreet","pathToNormalMap","SIZE","SIDEWALK_HEIGHT","createSidewalkMesh","wrapS","wrapT","repeat","materialSidewalk","geometrySidewalk","createStreetMesh","mesh","iter","model3D","loadBuildingBlock","parseInt","random","LONG","updateMatrix","updateMatrixWorld","matrixAutoUpdate","secondModel3D","rotationY","baseStreet","leftSidewalk","rightSidewalk","createBuildings","Intersection","SQUARE_SIZE","getLerpPoints","vec1","vec2","quantPoints","points","createSidewalkCurve","initialPoint","lerpPoints","pointsCurve","getPoints","secondLerpPoints","thirdLerpPoints","fourthLerpPoints","getGeometrySidewalk","geom","columnas","aux_vertices","indexes","uv1","uv2","uv3","accum_x","accum_z","uv","vertex","filas","j","vertexArr","Float32Array","uvArr","setIndex","setAttribute","computeVertexNormals","sidewalk","Curve","TOP_CENTER","createLongSidewalkCurve","fifthLerpPoints","sixthLerpPoints","getGeometryLongSidewalk","createLongSidewalkMesh","longSidewalk","TStreet","createStraightSidewalkMesh","createBuilding","Checkpoint","checkpointsData","RADIUS","stepHeartbeat","LEAST_OPACITY","MAX_OPACITY","newOpacity","opacity","transparent","checkpoint","LevelScore","initialScore","score","timeStart","alterScore","isNaN","getCurrentScore","getCurrentTime","timeInSeconds","seconds","minutes","toString","padStart","LevelFactory","endLevel","checkpointUpdate","levelScore","physicsToUpdate","objectsToAnimate","notifyCheckpointUpdate","STREET_TYPES","createStreet","bind","createCurve","createTStreet","createIntersection","OBJECTS","createCone","forEach","phys","object","pathTexture","normalMapPath","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","buildAmmoPhysics","ramp","addToScene","conePhysics","threeObject","onCollide","street","streetPhysics","movingLeft","leftSidewalkPhysics","movingRight","rightSidewalkPhysics","tStreet","movingOne","cornerPhysicsOne","movingTwo","cornerPhysicsTwo","intersection","cornerPhysicsThree","cornerPhysicsFour","curve","movingCorner","cornerPhysics","longSidePhysics","segmentsQuantity","buildStreetPhysics","buildIntersectionPhysics","buildCurvePhysics","buildTStreetPhysics","checkpoints","checkpointPhysics","removeRigidBody","rigidyBody","removeCollisionObject","remove","end","createCheckpoint","position_x","position_y","createRectangle","long","type","segments","json","streets","instantiateStreet","long_x","long_y","objects","obj","instantiateObject","getScore","getTime","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","outline","zIndex","xr","isSessionSupported","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","sessionInit","optionalFeatures","requestSession","setItem","showEnterVR","xrSessionIsGranted","click","catch","exception","console","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","TrafficModel","SIZE_OF_TRAFFIC","timeSinceLastUpdate","now","trafficWorker","Worker","currentTraffic","levelStreets","lastID","straightStreetIndex","straightStreets","filter","elem","lastCarRotation","carOffset","onmessage","onReceiveResponseFromWorker","updateCarEngines","data","getNextCarPos","pos_x_street","pos_y_street","isSide","max_x_offset","max_y_offset","positionData","carPaint","onCollideWithCarOfTraffic","object3D","engine","deleteCar","carId","objectsInTraffic","generateCar","updateTraffic","trafficCars","Object","entries","entry","carData","frontPosition","backPosition","sub","postMessage","playersCar","carActions","keys","steering","values","carObject","SessionContext","createContext","API_URL","VALID_REGEX_EMAIL","EndOfLevelModal","_ref","minScore","levelId","timeInMs","openModal","setOpenModal","React","useState","navigate","useNavigate","useContext","useEffect","user","APIResponse","method","headers","body","stringify","userId","status","endMSG","detail","msg","error_msg","statusText","postEndOfLevel","_jsx","Modal","open","_jsxs","Box","className","_Fragment","Button","onClick","reloadTab","reload","backToMenu","calidadEspejos","label","createMirrors","true_value_aa","true_value_res","resolucion","true_value","resolucionVR","ConfigGrafics","pausedLevel","indexEspejos","setIndexEspejos","indexRes","setIndexRes","indexVR","setIndexVR","viewDist","setViewDist","setLightsOn","typeController","setTypeController","currentConfig","currentController","ViewDistance","Grid","direction","justifyContent","alignItems","item","xs","md","InputLabel","Select","labelId","onChange","boxSizing","MenuItem","Typography","gutterBottom","Slider","defaultValue","marks","max","min","valueLabelDisplay","FormControlLabel","control","Switch","checked","sm","margin","espejosElem","newConfig","variant","PauseModal","selectedTab","setSelectedTab","TabContext","scrollButtons","TabList","handleChange","event","newTab","Tab","wrapped","sx","overflowY","maxHeight","TabPanel","CardMedia","component","image","objectFit","maxWidth","rowSpacing","ThreeSceneWrapper","state","useLocation","jsonLevel","ThreeScene","getTimeAsMs","timeStr","hours","split","Component","velocity","gotAnyEvent","stats","Stats","reducedScene","alpha","powerPreference","antialias","shadowMap","enabled","clock","finishedLevel","levelPaused","initializedReducedScene","updateCheckpoint","props","generateGeneralElements","animation","handleWindowResize","generateEvents","addPlayerCar","generateLevel","addVR","pauseLevel","createAmmo","addGeneralLights","createTraffic","resMult","ResMultiplier","setPixelRatio","devicePixelRatio","setSize","setAnimationLoop","componentWillUnmount","dom","level","trafficModel","getElementById","VRScale","VRResMultiplier","setFramebufferScaleFactor","mount","appendChild","createButton","updateDataLevel","createLevelCustom","geomField","matField","meshField","setClearColor","showPanel","light","initial_position","initial_rotation","generateInitialTraffic","removeInstance","keyPressed","key","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","onEnterColission","addFunction","cp","obj0","obj1","castObject","wrapPointer","btManifoldPoint","get_m_userPersistentData","collisionContactID","set_m_userPersistentData","setContactProcessedCallback","render","vecDistance","vectorA","vectorB","distanceTo","getMaxSizeStreets","maxX","maxZ","playersPosition","viewDistance","newChildren","begin","deltaTime","getDelta","stepSimulation","setState","currentPos","lastPlayerPos","getReducedScene","endScore","endTime","newStatePause","paused","top","right","fontWeight","ref","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","backgroundColor","MainMenu","flexDirection","ConfigDrawer","openConfigs","handleDrawerClose","setOpen","DrawerHeader","styled","_ref2","theme","spacing","mixins","toolbar","Drawer","flexShrink","anchor","ChevronRightIcon","paddingRight","Divider","ItemsContext","allUnselected","ItemsDrawer","openItems","setLastSelectedItem","lastSelectedItem","itemSelected","setItemSelected","paddingLeft","ChevronLeftIcon","_ref3","nameItem","isSelected","alt","src","dictSelection","selectedItem","positionX","positionY","handleSelection","InputsGrid","setGridDimensions","gridDimensions","InputWidth","setInputWidth","InputHeight","setInputHeight","marginLeft","step","replaceAll","onSubmit","STANDARD_BOX_LONG","AbstractStreet","ninePerNineGrid","rowIndex","columnIndex","rightFilled","filled","topFilled","botFilled","leftFilled","determineStreetRotation","cell","rowCount","columnCount","sumValueForCell","isStraight","getAsJSON","getPositionAsRowAndColumn","getPositionX","getPositionY","getLongX","getLongY","POSSIBLE_ROTATIONS","StraightStreetLinker","arrayOfStreets","sections","segregateSections","sectionsAsJSON","linkSections","rows","cols","sectionsArray","streetRow","streetCol","isHorizontal","generateArraySubsections","finalArray","sectionsJSON","jsonForStreet","reduce","acum","getSectionsAsJSON","TYPES_OF_STREETS","calculateNeighboursFilled","bot","dict","StreetFactory","levelGrid","isInfiniteLevel","getNinePerNineGrid","getNinePerNineGridInfinite","getNinePerNineGridFinite","constructStreets","straightStreetsArray","curvedStreetsArray","streetObject","defineTypeOfStreet","conjunctedStraightStreets","linkStraightStreets","indexRow","indexColumn","matrix","rowArray","realRow","realColumn","celda_vacia","row","column","typeResult","typeDefined","isValidNinePerNineGrid","getCountSidesPainted","aux","validateGrid","isInfinite","validateGridInfinite","valid","wrongCells","validateGridNotInfinite","COLORS","LevelGrid","setLevelGrid","setClick","rightClick","setRightClick","finalGrid","currentRow","newCell","preventDefault","arrayContains","insiderArray","equals","exc","marginTop","marginRight","onMouseDown","idx_row","idx_col","onMouseMove","onEnterHoverWithClickCell","col","levelGridCopy","div_color","onMouseUp","onClickCell","btn_click","onSubmitLevel","vec_aux","exportObj","exportName","dataStr","encodeURIComponent","downloadAnchorNode","downloadObjectAsJson","generateJSONFromGrid","MemoryIcon","LevelEditor","setOpenItems","setOpenConfigs","itemsInGrid","setItemsInGrid","currentItems","Provider","minHeight","IconButton","AddIcon","SettingsIcon","idx","SessionHooks","setSessionWithResponse","loginResponse","jwt","getUser","getJWT","closeSession","createHash","hash","string","digest","LoginForm","setLogin","setOpenDialog","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","isLoading","setIsLoading","loginFeedback","setLoginFeedback","submitGoogleLogin","responseAPI","token","postLoginGoogle","handleCloseDialog","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","validateFields","errors","match","postLogin","alignContent","Alert","severity","listerror","TextField","InputProps","endAdornment","InputAdornment","handleClickShowPassword","Visibility","VisibilityOff","CircularProgress","GoogleLogin","onSuccess","credentialResponse","OAuthToken","credential","onError","SignUpForm","passwordConfirmation","setPasswordConfirmation","nameToShow","setNameToShow","signupFeedback","setSignupFeedback","loading","setLoading","errorArray","fetchUrl","name_to_show","postSignUp","SessionProvider","childElement","localSessionStr","localSession","GoogleOAuthProvider","clientId","LevelCard","isCompleted","setIsCompleted","completedData","setCompletedData","getTimeInMSAsString","completed","best_score","best_time","fetchUserProgress","CardContent","title","CardHeader","subheader","description","CheckCircleIcon","verticalAlign","CancelIcon","AccessTimeFilledIcon","SportsScoreIcon","startIcon","CarRentalIcon","seleccionarNivel","LevelsSelectionGrid","levels","setLevels","removeItem","levelsJSONs","level_json","fetchLevels","lg","Carousel","autoPlay","navButtonsAlwaysVisible","indicators","navButtonsProps","swipe","Card","boxShadow","CardActions","LoginDialog","openDialog","login","handleClose","fullWidth","LoginButton","username","setUsername","LevelsList","fontSize","ArrowBackIosNewIcon","App","Router","Route","exact","path","ReactDOM","createRoot"],"mappings":"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","file":"static/js/main.9808948d.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n    doHorn(){\r\n        this.car.doHorn();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n    turnRightLight(){\r\n        this.car.turnRightLight();\r\n    }\r\n    turnLeftLight(){\r\n        this.car.turnLeftLight();\r\n    }\r\n    turnParkingLight(){\r\n        this.car.turnParkingLight();\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.4;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 70, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n        this.rotation = 0;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") === \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                const rotationQuat = new THREE.Quaternion(this.observedState.rotation.x, this.observedState.rotation.y, this.observedState.rotation.z, this.observedState.rotation.w).normalize();\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), -5*Math.PI/180 + this.rotation); //SUMAR ROTACION EXTRA SI USAMOS EL JOYSTICK DERECHO\r\n                this.group.quaternion.copy(rotationQuat);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    \r\n    addContainerToScene(scene){\r\n        scene.add(this.group);\r\n    }\r\n\r\n    rotate(rotation){\r\n        this.rotation = rotation;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from 'three';\r\n\r\nclass ModelsSingleton{\r\n\r\n    constructor(){\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.carModel = null;\r\n        this.building_1 = null;\r\n        this.building_2 = null;\r\n        this.building_3 = null;\r\n        this.building_4 = null;\r\n    }\r\n\r\n\r\n    changeMaterialsToBasic(children){\r\n        for (let i=0; i < children.length; i++) {\r\n            const child = children[i];\r\n            \r\n            if(child.isGroup){\r\n                this.changeMaterialsToBasic(child.children);\r\n            }else if(child.isMesh){\r\n                const newMaterial = new THREE.MeshPhongMaterial();\r\n                THREE.MeshBasicMaterial.prototype.copy.call( newMaterial, child.material );\r\n                child.material = newMaterial;\r\n                child.receiveShadow = true;\r\n                child.castShadow = true;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async loadGLTF(pathToTextureRcvd){\r\n        let pathToTexture = pathToTextureRcvd;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        this.changeMaterialsToBasic(result.scene.children);\r\n        return result.scene;\r\n    }\r\n\r\n    async loadModels(){\r\n        this.carModel = this.loadGLTF('res/models/source/Mercedes.glb');\r\n        this.building_1 = this.loadGLTF('res/models/source/buildings/Building_1.glb');\r\n        this.building_2 = this.loadGLTF('res/models/source/buildings/Building_2.glb');\r\n        this.building_3 = this.loadGLTF('res/models/source/buildings/Building_3.glb');\r\n        this.building_4 = this.loadGLTF('res/models/source/buildings/Building_4.glb');\r\n        return \"OK\";\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default class Models{\r\n\r\n    static ModelsSingleton\r\n\r\n    static async getInstance(){\r\n        if (!Models.ModelsSingleton){\r\n            Models.ModelsSingleton = new ModelsSingleton();\r\n            let res = await Models.ModelsSingleton.loadModels();\r\n            if (res === \"OK\"){\r\n                return Models.ModelsSingleton;\r\n            }else{\r\n                throw new Error(\"Error al cargar los modelos.\");\r\n            }\r\n        }else{\r\n            return Models.ModelsSingleton;\r\n        }\r\n        \r\n    }\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector';\r\nimport { Object3D } from 'three';\r\nimport Models from './Models';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\n//const STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = 0.13\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nconst LIGTH_TIC = 1000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(isIA = true){\r\n        //super('res/models/source/AutoConInterior.glb');\r\n        super('res/models/source/Mercedes.glb');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n        this.isIA = isIA;\r\n        this.lastTurnOff = new Date();\r\n    }\r\n\r\n\r\n    generateRetrovisor(){\r\n        const plane = new THREE.PlaneGeometry(0.145, 0.085);\r\n        const graphSettings = JSON.parse(localStorage.getItem(\"graphic_config\"));\r\n        const retrovisor = new Reflector(\r\n            plane,\r\n            {\r\n                textureWidth: window.innerWidth * graphSettings.MirrorResMultiplier,\r\n                textureHeight: window.innerHeight * graphSettings.MirrorResMultiplier,\r\n                clipBias: 0.35,\r\n                multisample: graphSettings.AAEspejos\r\n            }\r\n        );\r\n        retrovisor.rotateX( Math.PI-0.04 );\r\n        retrovisor.rotateY( 0.35 );\r\n        retrovisor.position.set(0.075,0.625,0.31);\r\n        this.threeDModel.add(retrovisor);\r\n    }\r\n\r\n\r\n    generateLeftMirror(){\r\n        const leftMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const graphSettings = JSON.parse(localStorage.getItem(\"graphic_config\"));\r\n        const leftMirror = new Reflector(\r\n            leftMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth * graphSettings.MirrorResMultiplier,\r\n                textureHeight: window.innerHeight * graphSettings.MirrorResMultiplier,\r\n                clipBias: 0,\r\n                multisample: graphSettings.AAEspejos\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(leftMirror);\r\n        container.position.set(0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.13);\r\n        leftMirror.rotateY(-18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateRightMirror(){\r\n        const graphSettings = JSON.parse(localStorage.getItem(\"graphic_config\"));\r\n        const rightMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const rightMirror = new Reflector(\r\n            rightMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth * graphSettings.MirrorResMultiplier,\r\n                textureHeight: window.innerHeight * graphSettings.MirrorResMultiplier,\r\n                clipBias: 0,\r\n                multisample: graphSettings.AAEspejos\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(rightMirror);\r\n        container.position.set(-0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.1);\r\n        rightMirror.rotateY(18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateMirrors(){\r\n        const graphSettings = JSON.parse(localStorage.getItem(\"graphic_config\"));\r\n        if (!this.isIA && graphSettings.CreateMirrors) {\r\n            this.generateRetrovisor();\r\n            this.generateLeftMirror();\r\n            this.generateRightMirror();\r\n        }\r\n    }\r\n\r\n    generateSpotlights(){\r\n        const shouldTurnLightsOn = JSON.parse(localStorage.getItem(\"graphic_config\")).lightsOn;\r\n        if(!this.isIA && shouldTurnLightsOn){\r\n            this.rightSpotlight = new THREE.SpotLight(0xffffff);\r\n            this.leftSpotlight = new THREE.SpotLight(0xffffff);\r\n            this.targetRight = new Object3D();\r\n            this.targetLeft = new Object3D();\r\n            this.targetRight.position.set(-0.8, 0.05, 3.0);\r\n            this.targetLeft.position.set(0.8, 0.05, 3.0);\r\n            this.rightSpotlight.position.set(-0.8, 0.3, 2.6);\r\n            this.leftSpotlight.position.set(0.8, 0.3, 2.6);\r\n            this.rightSpotlight.target = this.targetRight;\r\n            this.leftSpotlight.target = this.targetLeft;\r\n            this.leftSpotlight.castShadow = true;\r\n            this.rightSpotlight.castShadow = true;\r\n            this.rightSpotlight.shadow.mapSize.width = 1024;\r\n            this.leftSpotlight.shadow.mapSize.height = 1024;\r\n            this.rightSpotlight.shadow.camera.near = 0.1;\r\n            this.leftSpotlight.shadow.camera.near = 0.1;\r\n            this.rightSpotlight.shadow.camera.far = 2;\r\n            this.leftSpotlight.shadow.camera.far = 2;\r\n            this.rightSpotlight.shadow.camera.fov = 10;\r\n            this.leftSpotlight.shadow.camera.fov = 10;\r\n            this.rightSpotlight.intensity = 0.5;\r\n            this.leftSpotlight.intensity = 0.5;\r\n            this.rightSpotlight.angle = Math.PI/5;\r\n            this.leftSpotlight.angle = Math.PI/5;\r\n\r\n            this.rightSpotlight.distance = 15;\r\n            this.leftSpotlight.distance = 15;\r\n\r\n            this.threeDModel.add(this.leftSpotlight);\r\n            this.threeDModel.add(this.rightSpotlight);\r\n            this.threeDModel.add(this.targetLeft);\r\n            this.threeDModel.add(this.targetRight);\r\n\r\n        \r\n            this.rightTurnlight = new THREE.SpotLight(0xDB8A10);\r\n            this.targetTurnRight = new Object3D();\r\n            this.targetTurnRight.position.set(-0.85, 0.05, 3.0);\r\n            this.rightTurnlight.position.set(-0.8, 0.3, 2.6);\r\n            this.rightTurnlight.target = this.targetTurnRight;\r\n            this.rightTurnlight.castShadow = false;\r\n            this.rightTurnlight.intensity = 0;\r\n            this.rightTurnlight.angle = Math.PI/5;\r\n            this.rightTurnlight.distance = 10;\r\n            this.threeDModel.add(this.targetTurnRight);\r\n            this.threeDModel.add(this.rightTurnlight);\r\n            \r\n    \r\n            this.leftTurnlight = new THREE.SpotLight(0xDB8A10);\r\n            this.targetTurnLeft = new Object3D();\r\n            this.targetTurnLeft.position.set(0.85, 0.05, 3.0);\r\n            this.leftTurnlight.position.set(0.8, 0.3, 2.6);\r\n            this.leftTurnlight.target = this.targetTurnLeft;\r\n            this.leftTurnlight.castShadow = false;\r\n            this.leftTurnlight.intensity = 0;\r\n            this.leftTurnlight.angle = Math.PI/5;\r\n            this.leftTurnlight.distance = 10;\r\n            this.threeDModel.add(this.targetTurnLeft);\r\n            this.threeDModel.add(this.leftTurnlight);\r\n    \r\n    \r\n            this.rightTurnlightBack = new THREE.SpotLight(0xDB8A10);\r\n            this.targetTurnRightBack = new Object3D();\r\n            this.targetTurnRightBack.position.set(-0.85, 3, -3.0);\r\n            this.rightTurnlightBack.position.set(-0.8, 3.2, 2.6);\r\n            this.rightTurnlightBack.target = this.targetTurnRightBack;\r\n            this.rightTurnlightBack.castShadow = false;\r\n            this.rightTurnlightBack.intensity = 0;\r\n            this.rightTurnlightBack.angle = Math.PI/5;\r\n            this.rightTurnlightBack.distance = 10;\r\n            this.threeDModel.add(this.targetTurnRightBack);\r\n            this.threeDModel.add(this.rightTurnlightBack);\r\n    \r\n            this.leftTurnlightBack = new THREE.SpotLight(0xDB8A10);\r\n            this.targetTurnLeftBack = new Object3D();\r\n            this.targetTurnLeftBack.position.set(0.85, 3, -3.0);\r\n            this.leftTurnlightBack.position.set(0.8, 3.2, 2.6);\r\n            this.leftTurnlightBack.target = this.targetTurnLeftBack;\r\n            this.leftTurnlightBack.castShadow = false;\r\n            this.leftTurnlightBack.intensity = 0;\r\n            this.leftTurnlightBack.angle = Math.PI/5;\r\n            this.leftTurnlightBack.distance = 10;\r\n            this.threeDModel.add(this.targetTurnLeftBack);\r\n            this.threeDModel.add(this.leftTurnlightBack);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    generateDirectionalLight(scene){\r\n        if(!this.isIA){\r\n            this.dirLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n            this.dirLight.target = this.threeDModel;\r\n            this.dirLight.position.set(-2, 3, 5);\r\n            this.dirLight.castShadow = true;\r\n            this.dirLight.shadow.mapSize.width = window.innerWidth; // default\r\n            this.dirLight.shadow.mapSize.height = window.innerHeight; // default\r\n            this.dirLight.shadow.camera.near = 0.5; // default\r\n            this.dirLight.shadow.camera.far = 50; // default\r\n            scene.add(this.dirLight);\r\n            //this.threeDModel.add(this.dirLight);\r\n        }\r\n    }\r\n\r\n\r\n    turnRigth(){\r\n        const shouldTurnLightsOn = JSON.parse(localStorage.getItem(\"graphic_config\")).lightsOn;\r\n        if (this.isIA || !shouldTurnLightsOn)\r\n            return;\r\n        let time = new Date();\r\n        if(this.observedState[\"turnRigthLigth\"]  ){\r\n            let timePassed = time - this.lastTurnOff;\r\n            if( timePassed < LIGTH_TIC ){\r\n                this.rightTurnlight.intensity = 1;\r\n                this.rightTurnlightBack.intensity = 1;\r\n            }else if(timePassed < 2*LIGTH_TIC){\r\n                \r\n                this.rightTurnlight.intensity = 0;\r\n                this.rightTurnlightBack.intensity = 0;\r\n            }else{\r\n                this.lastTurnOff = new Date();\r\n            }\r\n        }else{\r\n            this.rightTurnlight.intensity = 0;\r\n            this.rightTurnlightBack.intensity = 0;\r\n        }\r\n    }\r\n\r\n    turnLeft(){\r\n        const shouldTurnLightsOn = JSON.parse(localStorage.getItem(\"graphic_config\")).lightsOn;\r\n        if (this.isIA || !shouldTurnLightsOn)\r\n            return;\r\n        let time = new Date();\r\n        if(this.observedState[\"turnLeftLigth\"]  ){\r\n            let timePassed = time - this.lastTurnOff;\r\n            if( timePassed < LIGTH_TIC ){\r\n                this.leftTurnlight.intensity = 1;\r\n                this.leftTurnlightBack.intensity = 1;\r\n            }else if(timePassed < 2*LIGTH_TIC){\r\n                this.leftTurnlight.intensity = 0;\r\n                this.leftTurnlightBack.intensity = 0;\r\n            }else{\r\n                this.lastTurnOff = new Date();\r\n            }\r\n        }else{\r\n            this.leftTurnlight.intensity = 0;\r\n            this.leftTurnlightBack.intensity = 0;\r\n        }\r\n    }\r\n\r\n\r\n    async addToScene(scene, name=\"driverCar\", hasMirrors = true){\r\n        const models = await Models.getInstance();\r\n        this.threeDModel = await models.carModel;\r\n        this.threeDModel = this.threeDModel.clone();\r\n        this.threeDModel.name = name;\r\n        this.threeDModel.position.x = POSITION[0];\r\n        this.threeDModel.position.y = POSITION[1];\r\n        this.threeDModel.position.z = POSITION[2];\r\n        this.threeDModel.scale.x = SCALE[0];\r\n        this.threeDModel.scale.y = SCALE[1];\r\n        this.threeDModel.scale.z = SCALE[2];\r\n        scene.add(this.threeDModel);\r\n        if(hasMirrors){\r\n            this.generateMirrors();\r\n        }\r\n        this.generateSpotlights();\r\n        this.generateDirectionalLight(scene);\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n            this.turnRigth();\r\n            this.turnLeft();\r\n            if (!this.isIA){\r\n                this.dirLight.position.set(\r\n                    this.observedState[\"position\"].x - 2, \r\n                    this.observedState[\"position\"].y + 3, \r\n                    this.observedState[\"position\"].z + 5\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        // let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        // let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        // let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        // let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'W222WheelFtR');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'W222WheelFtL');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'W222WheelBkR');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'W222WheelBkL');\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\n//const DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\n//const DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic,camera, pause){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.camera = camera;\r\n        this.pause = pause;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT){\r\n                if (this.camera.rotate)\r\n                    this.camera.rotate(-1);\r\n                \r\n            }else if (this.gamepad.axes[this.DPad] === this.valueDpadLEFT){\r\n                if (this.camera.rotate)\r\n                    this.camera.rotate(1);\r\n            };\r\n\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                this.globalControllerHandler.turnParkingLight();\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n            if (this.camera.rotate)\r\n                this.camera.rotate(0);\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            this.globalControllerHandler.doHorn();\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n            \r\n            this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            this.buttonsPressed[this.enter] = true;\r\n            this.pause();\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            \r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            this.globalControllerHandler.turnLeftLight();\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            this.globalControllerHandler.turnRightLight();\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n    setCamera(camera){\r\n        this.camera = camera;\r\n    }\r\n\r\n    updatePauseFun(pause){\r\n        this.pause = pause;\r\n    }\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic,camera, pause) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic,camera, pause);\r\n        }\r\n        LogitechG29ControllerSingleton.instance.setCamera(camera);\r\n        LogitechG29ControllerSingleton.instance.updatePauseFun(pause);\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto, camera, pause){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox') || gamepads[i].id.startsWith('xinput')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n        this.camera = camera;\r\n        this.pause = pause;\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n        }\r\n        let rotation = ((this.gamepad.axes[this.xRightAxe] )**3)\r\n        if (this.camera.rotate)\r\n            this.camera.rotate(-rotation);\r\n        // if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n        //     let rotation = ((this.gamepad.axes[this.xRightAxe] )**3)\r\n        //     this.camera.rotate(-rotation);\r\n        // }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            this.pause();\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.globalControllerHandler.turnParkingLight();\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.globalControllerHandler.turnLeftLight();\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.globalControllerHandler.turnRightLight();\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            this.globalControllerHandler.doHorn();\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n\r\n    setCamera(camera){\r\n        this.camera = camera;\r\n    }\r\n\r\n\r\n    updatePauseFun(pause){\r\n        this.pause = pause;\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto, camera, pause) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto, camera, pause);\r\n        }\r\n        XboxControllerSingleton.instance.setCamera(camera);\r\n        XboxControllerSingleton.instance.updatePauseFun(pause);\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(useAudio){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n        this.playbackRate = 1.1;\r\n        this.useAudio = useAudio;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        if(this.engineState instanceof TurnedOffEngine){\r\n            this.engineState = new TurnedOnEngine();\r\n            if (this.useAudio){\r\n                new Audio('./sounds/encendido.wav').play();\r\n                if(this.soundEngine) this.soundEngine.close();\r\n                setTimeout(() => {\r\n                    this.soundEngine = new (window.AudioContext || window.webkitAudioContext)();\r\n                    fetch(\"./sounds/engine.wav\").then(\r\n                        response => response.arrayBuffer()\r\n                    ).then(buffer => this.soundEngine.decodeAudioData(buffer)\r\n                    ).then(buffer => {\r\n                        this.soundEngineSource = this.soundEngine.createBufferSource();\r\n                        this.soundEngineSource.buffer = buffer;\r\n                        this.soundEngineSource.loop = true;\r\n                        this.soundEngineSource.connect(this.soundEngine.destination);\r\n                        this.soundEngineSource.start();\r\n                    });\r\n                }, 1300);\r\n            }            \r\n        }\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n                setTimeout(() => {\r\n                    new Audio('./sounds/turnoff.wav').play();\r\n                    if (this.soundEngine)\r\n                        this.soundEngine.close();\r\n                    this.soundEngine = null;\r\n                    this.soundEngineSource = null;\r\n                }, 1000);\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            //throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4, Quaternion } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst FACTOR_BRAKE_TO_FORCE = 180;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld, initialPosition, useAudio = true, initialRotation = new Quaternion().identity()){\r\n        super();\r\n        this.carEngine = new CarEngine(useAudio);\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(initialPosition[0], initialPosition[1], initialPosition[2]);\r\n        this.rotationQuaternion = initialRotation;\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        this.turnRigthLigth = false;\r\n        this.turnLeftLigth = false;\r\n\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n    doHorn(){\r\n        new Audio(\"./sounds/bocina.wav\").play();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnRightLight(){\r\n        if(!this.turnRigthLigth && this.turnLeftLigth){\r\n            this.turnLeftLigth = false;\r\n        } \r\n        this.turnRigthLigth = !this.turnRigthLigth;\r\n    }\r\n\r\n\r\n    turnLeftLight(){\r\n        if(!this.turnLeftLigth && this.turnRigthLigth){\r\n            this.turnRigthLigth = false;\r\n        } \r\n        this.turnLeftLigth = !this.turnLeftLigth;\r\n    }\r\n\r\n    turnParkingLight(){\r\n        if(this.turnLeftLigth && this.turnRigthLigth){\r\n            this.turnLeftLigth = !this.turnLeftLigth;\r\n            this.turnRigthLigth = !this.turnRigthLigth;\r\n        }else{\r\n            this.turnRigthLigth = true;\r\n            this.turnLeftLigth = true;\r\n        }\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        const dirVector = new Vector3(0,0,1).applyQuaternion(this.rotation);\r\n        const rightDir = new Vector3(0,0,1).applyAxisAngle(new Vector3(0,1,0), -Math.PI/2).applyQuaternion(this.rotation);\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"dirVector\": dirVector,\r\n            \"frontPosition\": new Vector3(this.position.x + dirVector.x*2.5, this.position.y, this.position.z + dirVector.z*2.5),\r\n            \"backPosition\": new Vector3(this.position.x - dirVector.x*2.5, this.position.y, this.position.z - dirVector.z*2.5),\r\n            \"rightDirection\": rightDir,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM(),\r\n            \"turnRigthLigth\": this.turnRigthLigth,\r\n            \"turnLeftLigth\": this.turnLeftLigth,\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.castShadow = true;\r\n            cone.receiveShadow = true;\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class CustomGeometryPhysics extends GeneralPhysics{\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        // eslint-disable-next-line\r\n        let _triangle, triangle_mesh = new Ammo.btTriangleMesh();\r\n        //declare triangles position vectors\r\n        let vectA = new Ammo.btVector3(0, 0, 0);\r\n        let vectB = new Ammo.btVector3(0, 0, 0);\r\n        let vectC = new Ammo.btVector3(0, 0, 0);\r\n        //retrieve vertices positions from object\r\n        let verticesPos = this.shape.getAttribute('position').array;\r\n        let triangles = [];\r\n        for (let i = 0; i < verticesPos.length; i += 3) {\r\n            triangles.push({\r\n                x: verticesPos[i],\r\n                y: verticesPos[i + 1],\r\n                z: verticesPos[i + 2]\r\n            });\r\n        }\r\n        //use triangles data to draw ammo shape\r\n        for (let i = 0; i < triangles.length - 3; i += 3) {\r\n\r\n            vectA.setX(triangles[i].x);\r\n            vectA.setY(triangles[i].y);\r\n            vectA.setZ(triangles[i].z);\r\n\r\n            vectB.setX(triangles[i + 1].x);\r\n            vectB.setY(triangles[i + 1].y);\r\n            vectB.setZ(triangles[i + 1].z);\r\n\r\n            vectC.setX(triangles[i + 2].x);\r\n            vectC.setY(triangles[i + 2].y);\r\n            vectC.setZ(triangles[i + 2].z);\r\n\r\n            triangle_mesh.addTriangle(vectA, vectB, vectC, true);\r\n        }\r\n        Ammo.destroy(vectA);\r\n        Ammo.destroy(vectB);\r\n        Ammo.destroy(vectC);\r\n\r\n        var shape = new Ammo.btBvhTriangleMeshShape(triangle_mesh, true);\r\n        shape.setMargin(0);\r\n        return shape;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class StraightStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n    createSidewalkMesh(scale){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10*scale );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(scale){\r\n        const geometry = new THREE.BoxGeometry( 10*this.SIZE/24, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        \r\n        texture.repeat.set( 1, 2*scale );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsLeft_\"+iter;\r\n        secondModel3D.position.x = -10*this.SIZE/24;\r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh(scale);\r\n            const leftSidewalk = this.createSidewalkMesh(scale);\r\n            const rightSidewalk = this.createSidewalkMesh(scale);\r\n            baseStreet.position.set(0,0,0);\r\n            leftSidewalk.position.set(-8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            rightSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet).add(leftSidewalk).add(rightSidewalk)\r\n            for (let i=0; i<4*scale; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.scale.set(1.0, 1.0, scale);\r\n            leftSidewalk.scale.set(1.0, 1.0, scale);\r\n            rightSidewalk.scale.set(1.0, 1.0, scale);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            rightSidewalk.updateMatrix();\r\n            rightSidewalk.updateMatrixWorld();\r\n            rightSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            this.LONG = this.SIZE*scale;\r\n            this.threeDModel.LONG = this.LONG;\r\n            this.threeDModel.SIZE = this.SIZE;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\n\r\nexport default class Intersection extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 1, 1 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<4; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else if(i===2){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }else if(i===3){\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                }else{\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class Curve extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24+0.12;\r\n        this.TOP_CENTER = [this.SIZE/2-this.SQUARE_SIZE, this.SIDEWALK_HEIGHT, -this.SIZE/2+this.SQUARE_SIZE];\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    createLongSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SIZE/2,0,-this.SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(\r\n            initialPoint, \r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            5\r\n            );\r\n        const secondLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const thirdLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const fourthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2 - this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE, this.SIZE/2-this.SQUARE_SIZE), \r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector2(-this.SIZE/2+this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n        );\r\n        let pointsCurve = curve.getPoints(30);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const fifthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2+this.SQUARE_SIZE, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const sixthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2),\r\n            5\r\n        );\r\n        return [\r\n            ...lerpPoints, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints,\r\n            ...pointsCurve,\r\n            ...fifthLerpPoints,\r\n            ...sixthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    getGeometryLongSidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createLongSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(this.TOP_CENTER[0], this.TOP_CENTER[1], this.TOP_CENTER[2]);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SIZE/2)/this.SIZE, (points[i].z+this.SIZE/2)/this.SIZE);\r\n            uv3.push((this.TOP_CENTER[0]+this.SIZE/2)/this.SIZE, (this.TOP_CENTER[2]+this.SIZE/2)/this.SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    createLongSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 10, 10 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometryLongSidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsCurve_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsCurveOtherSide_\"+iter;\r\n        secondModel3D.position.x = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;      \r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = 10*this.SIZE/24;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 1, 1 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            const sidewalk = this.createSidewalkMesh();\r\n            sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n            sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n            sidewalk.updateMatrix();\r\n            sidewalk.updateMatrixWorld();\r\n            sidewalk.matrixAutoUpdate = false;\r\n            const longSidewalk = this.createLongSidewalkMesh();\r\n            longSidewalk.position.set(0,0,0);\r\n            longSidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n            longSidewalk.updateMatrix();\r\n            longSidewalk.updateMatrixWorld();\r\n            longSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(sidewalk).add(longSidewalk);\r\n            for (let i=0; i<3; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class TStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuilding(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D);\r\n    }\r\n\r\n\r\n    createStraightSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10 );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 1, 1 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<2; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else{\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            for (let i=0; i<4; i++){\r\n                this.createBuilding(position, i);\r\n            }\r\n            const leftSidewalk = this.createStraightSidewalkMesh();\r\n            leftSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(leftSidewalk);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\n\r\nexport default class Checkpoint extends VisualEntity{\r\n\r\n    constructor(checkpointsData){\r\n        super(null);\r\n        this.checkpointsData = checkpointsData;\r\n        this.RADIUS = 1;\r\n        this.HEIGHT = 5;\r\n        this.observedState = null;\r\n        this.stepHeartbeat = -0.002;\r\n        this.LEAST_OPACITY = 0.25;\r\n        this.MAX_OPACITY = 0.5;\r\n    } \r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        const currentOpacity = this.threeDModel.children[0].material.opacity;\r\n        const newOpacity = currentOpacity - this.stepHeartbeat;\r\n        this.threeDModel.children[0].material.opacity = newOpacity;\r\n        if(newOpacity <= this.LEAST_OPACITY || newOpacity >= this.MAX_OPACITY){\r\n            this.stepHeartbeat *= -1;\r\n        }\r\n    }\r\n\r\n    \r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS, this.RADIUS, this.HEIGHT, 32 );\r\n            const material = new THREE.MeshBasicMaterial( { color: 0x00ff00, opacity: 0.4, transparent:true });\r\n            const checkpoint = new THREE.Mesh( geometry, material );\r\n            checkpoint.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(checkpoint);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS *= scale[0];\r\n            this.RADIUS *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","export default class LevelScore {\r\n\r\n    constructor(initialScore = 0){\r\n        this.score = initialScore;\r\n        this.timeStart = new Date();\r\n    }\r\n\r\n    alterScore(points){\r\n        if (isNaN(points)){\r\n            throw new Error(\"Solo se puede alterar el puntaje con números.\");\r\n        }\r\n        this.score += points;\r\n    }\r\n\r\n    getCurrentScore(){\r\n        return this.score;\r\n    }\r\n\r\n    getCurrentTime(){\r\n        const timeInSeconds = parseInt((new Date() - this.timeStart)/1000);\r\n        const seconds = timeInSeconds%60;\r\n        const minutes = parseInt((timeInSeconds-seconds)/60);\r\n        const minutesUpToSixty = minutes%60;\r\n        const hours = parseInt((minutes-minutesUpToSixty)/24);\r\n        return `${hours.toString().padStart(2,'0')}:${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}`;\r\n    }\r\n}","import * as THREE from \"three\";\r\nimport BoxPhysics from \"../LogicModel/Physics/PhysicsTypes/BoxPhysics\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport TrafficCone from \"../3DModels/TrafficCone\";\r\nimport CylinderPhysics from \"../LogicModel/Physics/PhysicsTypes/CylinderPhysics\";\r\nimport CustomGeometryPhysics from \"../LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics\";\r\nimport StraightStreet from \"../3DModels/StraightStreet\";\r\nimport Intersection from \"../3DModels/Intersection\";\r\nimport Curve from \"../3DModels/Curve\";\r\nimport TStreet from \"../3DModels/TStreet\";\r\nimport Checkpoint from \"../3DModels/Checkpoint\";\r\nimport LevelScore from \"./LevelScore\";\r\n\r\n\r\nconst SUM_FOR_CHECKPOINT = 1000;\r\nconst SUB_FOR_CONE = -100;\r\nconst INITIAL_SCORE = 0;\r\n\r\nexport default class LevelFactory {\r\n  constructor(scene, physicsWorld, endLevel, checkpointUpdate) {\r\n    this.scene = scene;\r\n    this.physicsWorld = physicsWorld;\r\n    this.levelScore = new LevelScore(INITIAL_SCORE);\r\n    this.physicsToUpdate = [];\r\n    this.objectsToAnimate = [];\r\n    this.endLevel = endLevel;\r\n    this.notifyCheckpointUpdate = checkpointUpdate;\r\n    this.STREET_TYPES = {\r\n      \"STRAIGHT\": this.createStreet.bind(this),\r\n      \"CURVE\": this.createCurve.bind(this),\r\n      \"T_STREET\": this.createTStreet.bind(this),\r\n      \"INTERSECTION\": this.createIntersection.bind(this)\r\n    };\r\n    this.OBJECTS = {\r\n      \"CONE\": this.createCone.bind(this)\r\n    };\r\n  }\r\n\r\n  updatePhysics() {\r\n    this.physicsToUpdate.forEach(function (phys) {\r\n      phys.updatePhysics();\r\n    });\r\n  }\r\n\r\n  animate() {\r\n    this.objectsToAnimate.forEach(function (object) {\r\n      object.animate();\r\n    });\r\n  }\r\n\r\n  async createRectangle(\r\n    position,\r\n    length,\r\n    width,\r\n    height,\r\n    rotation,\r\n    pathTexture,\r\n    Ammo,\r\n    normalMapPath = null\r\n  ) {\r\n    const texture = new THREE.TextureLoader().load(pathTexture);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(length, height);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n    });\r\n    if (normalMapPath) {\r\n      let normalTexture = new THREE.TextureLoader().load(normalMapPath);\r\n      normalTexture.repeat.set(length, height);\r\n      normalTexture.wrapS = THREE.RepeatWrapping;\r\n      normalTexture.wrapT = THREE.RepeatWrapping;\r\n      floorMaterial.normalMap = normalTexture;\r\n      floorMaterial.normalScale.set(10, 10);\r\n    }\r\n    const rampa = new THREE.BoxGeometry(length, width, height);\r\n    rampa.rotateX(rotation);\r\n    const quaternionRamp = new THREE.Quaternion();\r\n    quaternionRamp.setFromAxisAngle(new THREE.Vector3(1, 0, 0), rotation);\r\n\r\n    let rampPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      quaternionRamp, //Quaternion2\r\n      new Ammo.btVector3(0, 0, 0), //Inertia\r\n      0, //Mass\r\n      new THREE.Vector3(length, width, height), //Shape\r\n      this.physicsWorld, //Physics World\r\n      1000 // friction\r\n    );\r\n\r\n    await rampPhysics.buildAmmoPhysics();\r\n    //this.physicsToUpdate.push(rampPhysics);\r\n    let ramp = new THREE.Mesh(rampa, floorMaterial);\r\n    ramp.position.set(position[0], position[1], position[2]);\r\n    this.scene.add(ramp);\r\n  }\r\n\r\n  async createCone(position, Ammo, rotationY) {\r\n    let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n    cone = await cone.addToScene(this.scene, \"trafficCone\", position, [0.5, 1, 0.5]);\r\n    let conePhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationY),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      10,\r\n      new THREE.Vector3(\r\n        cone.RADIUS_BOTTOM,\r\n        cone.HEIGHT / 2,\r\n        cone.RADIUS_BOTTOM\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await conePhysics.buildAmmoPhysics();\r\n    conePhysics.rigidBody.threeObject = cone;\r\n    conePhysics.rigidBody.onCollide = () => {\r\n      this.levelScore.alterScore(SUB_FOR_CONE);\r\n    };\r\n    this.physicsToUpdate.push(conePhysics);\r\n    conePhysics.attachObserver(cone);\r\n    this.objectsToAnimate.push(cone);\r\n  }\r\n\r\n  async buildStreetPhysics(position, street, Ammo, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(street.SIZE, 0.1, street.LONG),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingLeft = new THREE.Vector3(\r\n      (-8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let leftSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingLeft.x,\r\n        position[1] + movingLeft.y,\r\n        position[2] + movingLeft.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await leftSidewalkPhysics.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + street.SIDEWALK_HEIGHT / 2 + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildTStreetPhysics(position, Ammo, tStreet, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingOne = new THREE.Vector3(\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n        0,\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2\r\n      ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingOne.x,\r\n        position[1] + movingOne.y,\r\n        position[2] + movingOne.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const movingTwo = new THREE.Vector3(\r\n      -tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n      0,\r\n      tStreet.SIZE / 2 - tStreet.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingTwo.x,\r\n        position[1] + movingTwo.y,\r\n        position[2] + movingTwo.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * tStreet.SIZE) / 24,\r\n      tStreet.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * tStreet.SIZE) / 24,\r\n        tStreet.SIDEWALK_HEIGHT,\r\n        tStreet.SIZE\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildIntersectionPhysics(position, Ammo, intersection) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const cornerPhysicsThree = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsThree.buildAmmoPhysics();\r\n    const cornerPhysicsFour = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsFour.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildCurvePhysics(position, Ammo, curve, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingCorner = new THREE.Vector3(\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2,\r\n      0,\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingCorner.x,\r\n        position[1] + movingCorner.y,\r\n        position[2] + movingCorner.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysics.buildAmmoPhysics();\r\n    const longSidePhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometryLongSidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await longSidePhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async createStreet(position, Ammo, rotationY, segmentsQuantity) {\r\n    let street = new StraightStreet(\"textures/road.jpg\");\r\n    await street.addToScene(\r\n      this.scene,\r\n      \"street\",\r\n      position,\r\n      segmentsQuantity,\r\n      rotationY\r\n    );\r\n    await this.buildStreetPhysics(position, street, Ammo, rotationY);\r\n  }\r\n\r\n  async createIntersection(position, Ammo) {\r\n    let intersection = new Intersection(\"textures/roadWithCrossWalk.jpg\");\r\n    await intersection.addToScene(this.scene, \"intersection\", position);\r\n    await this.buildIntersectionPhysics(position, Ammo, intersection);\r\n  }\r\n\r\n  async createCurve(position, Ammo, rotationY) {\r\n    let curve = new Curve(\"textures/roadWithCrossWalk.jpg\");\r\n    await curve.addToScene(this.scene, \"curve\", position, rotationY);\r\n    await this.buildCurvePhysics(position, Ammo, curve, rotationY);\r\n  }\r\n\r\n  async createTStreet(position, Ammo, rotationY) {\r\n    let tStreet = new TStreet(\"textures/roadWithCrossWalk.jpg\");\r\n    await tStreet.addToScene(this.scene, \"tStreet\", position, rotationY);\r\n    await this.buildTStreetPhysics(position, Ammo, tStreet, rotationY);\r\n  }\r\n\r\n\r\n  async createCheckpoint(position, checkpoints){\r\n    let checkpoint = new Checkpoint(checkpoints);\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await checkpoint.addToScene(this.scene, \"checkpoint\", position, [1,1,1]);\r\n    let checkpointPhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      1,\r\n      new THREE.Vector3(\r\n        checkpoint.RADIUS,\r\n        checkpoint.HEIGHT / 2,\r\n        checkpoint.RADIUS\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    this.physicsToUpdate.push(checkpointPhysics);\r\n    await checkpointPhysics.buildAmmoPhysics();\r\n    checkpointPhysics.rigidBody.threeObject = checkpoint;\r\n    checkpointPhysics.rigidBody.onCollide = async () => {\r\n      this.physicsWorld.removeRigidBody( checkpointPhysics.rigidyBody );\r\n      this.physicsWorld.removeCollisionObject( checkpointPhysics.rigidBody );\r\n      this.levelScore.alterScore(SUM_FOR_CHECKPOINT);\r\n      this.scene.remove( checkpoint.threeDModel );\r\n      const lastElemUsed = checkpoints.shift();\r\n      if (lastElemUsed.end){\r\n        this.endLevel(this.levelScore.getCurrentScore(), this.levelScore.getCurrentTime() );\r\n      } else if(checkpoints.length > 0){\r\n        await this.createCheckpoint([checkpoints[0].position_x, 1, checkpoints[0].position_y], checkpoints);\r\n        this.notifyCheckpointUpdate();\r\n      }\r\n    };\r\n    checkpointPhysics.attachObserver(checkpoint);\r\n    this.objectsToAnimate.push(checkpoint);\r\n  }\r\n\r\n  async createLevel0() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.createRectangle(\r\n      [10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 8,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [-10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 4,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [0, 0, 0],\r\n      100,\r\n      0.1,\r\n      100,\r\n      0,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createCone([0, 0.5, 10], Ammo);\r\n    this.createCone([0, 0.5, 30], Ammo);\r\n    this.createCone([0, 0.5, 20], Ammo);\r\n  }\r\n\r\n\r\n  async instantiateStreet(position, rotation, long, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    let segments = (long[0] === 30 ? long[1] : long[0])/30;\r\n    await this.STREET_TYPES[type]([position[0], 0, position[1]], Ammo, rotation, segments);\r\n  }\r\n\r\n\r\n  async instantiateObject(position, rotation, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await this.OBJECTS[type]([position[0], 0.5, position[1]], Ammo, rotation);\r\n  }\r\n\r\n  async createLevelCustom(json) {\r\n    \r\n    for( let i=0 ; i<json.streets.length; i++ ){\r\n      let street = json.streets[i];\r\n      await this.instantiateStreet(\r\n        [street.position_x,street.position_y], \r\n        street.rotation, \r\n        [street.long_x, street.long_y], \r\n        street.type\r\n      );\r\n    }\r\n    for( let i=0 ; i<json.objects.length; i++){\r\n      let obj = json.objects[i];\r\n      await this.instantiateObject(\r\n        [obj.position_x,obj.position_y], \r\n        obj.rotation, \r\n        obj.type\r\n      );\r\n    }\r\n    if (json.checkpoints.length > 0){\r\n      await this.createCheckpoint(\r\n        [json.checkpoints[0].position_x, 1, json.checkpoints[0].position_y],\r\n        json.checkpoints\r\n      );\r\n    }\r\n    return {\r\n      physicsToUpdate: this.physicsToUpdate,\r\n      objectsToAnimate: this.objectsToAnimate\r\n    };\r\n    // json.checkpoints.forEach --> Instancio y guardo en un array\r\n    // onCollide de un checkpoint --> saco ese de la escena y agrego uno nuevo (El que le sigue)\r\n    // Si el checkpoint es el ultimo --> Fin de nivel? Solo si esta marcado con un bool de fin nivel o algo asi\r\n  }\r\n\r\n\r\n  getScore(){\r\n    return this.levelScore.getCurrentScore();\r\n  }\r\n\r\n  getTime(){\r\n    return this.levelScore.getCurrentTime();\r\n  }\r\n}\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import CarModel from \"../../3DModels/CarModel\";\r\nimport Observer from \"../../ObserverPattern/Observer\";\r\nimport Car from \"../CarLogic/Car.js\";\r\nimport * as THREE from \"three\";\r\n\r\nconst CLUTCH_PRESSED = 0;\r\nconst CLUTCH_NOT_PRESSED = 1;\r\nconst CAR_OFFSET_CONSTRUCTOR = 10;\r\n\r\n\r\nexport default class TrafficModel extends Observer {\r\n\r\n    constructor(scene, physicsWorld, streets){\r\n        super();\r\n        this.SIZE_OF_TRAFFIC = 10;\r\n        this.timeSinceLastUpdate = Date.now();\r\n        this.trafficWorker = new Worker(\"./workers/TrafficWorker.js\");\r\n        this.currentTraffic = {};\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld;\r\n        this.levelStreets = streets;\r\n        \r\n        this.lastID = 0;\r\n        this.straightStreetIndex = 0;\r\n        this.straightStreets = this.levelStreets.filter(elem => elem.type === \"STRAIGHT\");\r\n        this.lastCarRotation = 0;\r\n        this.carOffset = 0;\r\n        \r\n        this.trafficWorker.onmessage = (message) => {\r\n            this.onReceiveResponseFromWorker(message);\r\n        }\r\n    }\r\n\r\n    async onReceiveResponseFromWorker(message){\r\n        this.updateCarEngines(message.data);\r\n    }\r\n\r\n\r\n    async onCollideWithCarOfTraffic () {\r\n        console.log(\"CHOCASTE AL AUTO\");\r\n    }\r\n\r\n\r\n    getNextCarPos(){\r\n        if(this.lastCarRotation !== 0){\r\n            this.lastCarRotation = 0;\r\n            \r\n            this.straightStreetIndex += 1;\r\n            this.straightStreetIndex = this.straightStreetIndex % this.straightStreets.length;\r\n            if (this.straightStreetIndex === 0){\r\n                this.carOffset += CAR_OFFSET_CONSTRUCTOR;\r\n            }\r\n        }else{\r\n            if(this.lastID > 0){\r\n                this.lastCarRotation = Math.PI;\r\n            }\r\n        }\r\n        return {\r\n            pos_x_street: this.straightStreets[this.straightStreetIndex].position_x,\r\n            pos_y_street: this.straightStreets[this.straightStreetIndex].position_y,\r\n            isSide: this.straightStreets[this.straightStreetIndex].rotation > 0,\r\n            max_x_offset: this.straightStreets[this.straightStreetIndex].long_y,\r\n            max_y_offset: this.straightStreets[this.straightStreetIndex].long_x,\r\n            carOffset: this.carOffset,\r\n            rotation: this.lastCarRotation\r\n        }\r\n    }\r\n\r\n\r\n    async generateCar(){\r\n        const positionData = this.getNextCarPos();\r\n        let carLogic = new Car(\r\n            this.physicsWorld, \r\n            [\r\n                positionData.pos_x_street + (positionData.isSide ? positionData.carOffset-positionData.max_x_offset/2 : (positionData.rotation > 0) ? 2.5 : -2.5) ,\r\n                2,\r\n                positionData.pos_y_street + (!positionData.isSide ? positionData.carOffset-positionData.max_y_offset/2 : (positionData.rotation > 0) ? -2.5 : 2.5)\r\n            ], \r\n            false, \r\n            new THREE.Quaternion().setFromAxisAngle(\r\n                new THREE.Vector3(0,1,0), \r\n                positionData.isSide ? Math.PI/2+positionData.rotation : positionData.rotation\r\n            )\r\n        );\r\n        await carLogic.carPhysics.buildAmmoPhysics(); \r\n        \r\n        let carModel = new CarModel();\r\n        await carModel.addToScene(this.scene, `traffic_car_${this.lastID}`, false);\r\n        const carPaint = carModel.threeDModel.children.filter(child => child.name === \"W222Body\")[0].children[0];\r\n        carPaint.material = carPaint.material.clone();\r\n        carPaint.material.color.set(0xffffff*Math.random());\r\n\r\n        carLogic.carPhysics.rigidBody.threeObject = carModel;\r\n        carLogic.carPhysics.rigidBody.onCollide = this.onCollideWithCarOfTraffic;\r\n\r\n        carLogic.attachObserver(carModel);\r\n        carLogic.notifyObservers();\r\n        \r\n        this.currentTraffic[this.lastID] = {\r\n            object3D: carModel,\r\n            engine: carLogic\r\n        };\r\n        this.lastID += 1;\r\n        return carModel;\r\n    }\r\n\r\n\r\n    deleteCar(carId){\r\n        this.currentTraffic[carId].engine.removeObserver(this.currentTraffic[carId].object3D);\r\n        this.physicsWorld.removeRigidBody( this.currentTraffic[carId].engine.carPhysics.rigidyBody );\r\n        this.physicsWorld.removeCollisionObject( this.currentTraffic[carId].engine.carPhysics.rigidyBody );\r\n        this.scene.remove( this.currentTraffic[carId].object3D.threeDModel );\r\n        delete this.currentTraffic[carId];\r\n    }\r\n\r\n\r\n    async generateInitialTraffic(){\r\n        const objectsInTraffic = [];\r\n        for (let i=0; i<this.SIZE_OF_TRAFFIC; i++){\r\n            objectsInTraffic.push(await this.generateCar());\r\n        }\r\n        return objectsInTraffic;\r\n    }\r\n\r\n    updateTraffic(){\r\n        const trafficCars = [];\r\n        Object.entries(this.currentTraffic).forEach(entry => {\r\n            const [carId, value] = entry;\r\n            const carData = value.engine.getDataToAnimate();\r\n            carData.carId = carId;\r\n            const carOffset = new THREE.Vector3(0,0,2.5).applyQuaternion(carData.rotation);\r\n            carData.frontPosition = carData.position.add(carOffset);\r\n            carData.backPosition = carData.position.sub(carOffset);\r\n            delete carData.physicsBody;\r\n            delete carData.wheelsData;\r\n            trafficCars.push(carData);\r\n        });\r\n        if (this.observedState){\r\n            delete this.observedState.physicsBody;\r\n            delete this.observedState.wheelsData;\r\n            const carOffset = new THREE.Vector3(0,0,2.5).applyQuaternion(this.observedState.rotation);\r\n            this.observedState.frontPosition = this.observedState.position.add(carOffset);\r\n            this.observedState.backPosition = this.observedState.position.sub(carOffset);\r\n        }\r\n        this.trafficWorker.postMessage({\r\n            playersCar: this.observedState,\r\n            streets: this.levelStreets,\r\n            trafficCars\r\n        });\r\n    }\r\n\r\n\r\n    /* carActions trae un object que tiene de key carId, y de value:\r\n        * deleteCar: boolean -> define si desinstancia el auto o no\r\n        * accelerate: float entre 0 y 1 -> define si acelera o no el auto\r\n        * brake: float entre 0 y 1 -> define si frena o no el auto\r\n        * steering: float entre -1 y 1 -> define la rotacion del volante\r\n    */ \r\n    updateCarEngines(carActions){\r\n        Object.keys(carActions).forEach(carId => {\r\n            if (carActions[carId].deleteCar){\r\n                this.deleteCar(carId);\r\n            }else{\r\n                this.currentTraffic[carId].engine.turnOnCar();\r\n                this.currentTraffic[carId].engine.turnDirection(carActions[carId].steering);\r\n                this.currentTraffic[carId].engine.changeShift(CLUTCH_PRESSED, 1);\r\n                this.currentTraffic[carId].engine.accelerate(CLUTCH_NOT_PRESSED, carActions[carId].accelerate);  \r\n                this.currentTraffic[carId].engine.brake(CLUTCH_PRESSED, carActions[carId].brake);\r\n                this.currentTraffic[carId].engine.update();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.updateTraffic();\r\n        Object.values(this.currentTraffic).forEach(carObject => {\r\n            carObject.object3D.animate();\r\n        });\r\n    }\r\n}","import { createContext } from \"react\";\r\n\r\nexport const SessionContext  = createContext(undefined);","export const API_URL = \"https://backend-bata340.cloud.okteto.net\";\r\n// export const API_URL = \"http://localhost:8001\";\r\nexport const VALID_REGEX_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;","import { Box, Modal, Button } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SessionContext } from '../Sessions/SessionContext';\r\nimport {API_URL} from '../Constants/Constants'\r\n\r\nexport const EndOfLevelModal = ({endLevel, score, time, minScore, levelId, timeInMs}) => {\r\n\r\n  const [openModal, setOpenModal] = React.useState(endLevel);\r\n  const navigate = useNavigate();\r\n  const {session} = React.useContext(SessionContext);\r\n\r\n\r\n  const postEndOfLevel = async () => {\r\n    try{\r\n      const APIResponse = await fetch(\r\n        `${API_URL}/user_progress/end_of_level`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            userId: session.user.id,\r\n            levelId: levelId,\r\n            score: score,\r\n            time: timeInMs\r\n          })\r\n        }\r\n      );\r\n      const json = await APIResponse.json();\r\n      if (APIResponse.status !== 200){\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n    }catch(e){\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    setOpenModal(endLevel);\r\n    if(endLevel && session.user){\r\n      postEndOfLevel();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [endLevel]);\r\n  \r\n  const reloadTab = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  const backToMenu = () => {\r\n    navigate(\"/levels\");\r\n  }\r\n   \r\n  return (\r\n    <Modal open = {openModal} >\r\n        <Box className={\"end_of_level_dialog\"}>\r\n          {\r\n            minScore>score ? \r\n              <>\r\n                <h1>Nivel Fallido</h1>\r\n                <p style={{color:\"red\"}}>El puntaje m&iacute;nimo para pasar el nivel es de: {minScore}, y tu puntaje fue de: {score}</p>\r\n              </> :\r\n              <>\r\n                <h1>\r\n                  ¡Nivel Superado!\r\n                </h1> \r\n                <p style={{color:\"green\"}}><strong>Tu puntaje final es</strong>: {score}</p>\r\n              </>\r\n          }\r\n          \r\n          <p><strong>Tiempo transcurrido:</strong> {time}</p>\r\n          <Button onClick={reloadTab}>\r\n                Reintentar\r\n            </Button>\r\n            <Button onClick={backToMenu}>\r\n                Volver al menu\r\n            </Button>\r\n        </Box>\r\n\r\n\r\n    </Modal>\r\n  )\r\n}\r\n","import Slider from \"@mui/material/Slider\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Switch,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst calidadEspejos = [\r\n  {\r\n    value: 0,\r\n    label: \"Desactivado\",\r\n    createMirrors: false,\r\n    true_value_aa: 0,\r\n    true_value_res: 0\r\n  },\r\n  {\r\n    value: 1,\r\n    label: \"Baja\",\r\n    createMirrors: true,\r\n    true_value_res: 0.3,\r\n    true_value_aa: 0\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"Media\",\r\n    createMirrors: true,\r\n    true_value_res: 0.6,\r\n    true_value_aa: 2\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"Alta\",\r\n    createMirrors: true,\r\n    true_value_res: 1,\r\n    true_value_aa: 4\r\n  },\r\n];\r\nconst resolucion = [\r\n  {\r\n    value: 1,\r\n    label: \"Baja\",\r\n    true_value: 0.25\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"Media\",\r\n    true_value: 0.5\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"Alta\",\r\n    true_value: 1\r\n  },\r\n];\r\n\r\nconst resolucionVR = [\r\n  {\r\n    value: 0,\r\n    label: \"X0.25\",\r\n    true_value: 0.25\r\n  },\r\n  {\r\n    value: 1,\r\n    label: \"X0.50\",\r\n    true_value: 0.50\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"X0.75\",\r\n    true_value: 0.75\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"X1\",\r\n    true_value: 1\r\n  },\r\n];\r\n\r\n\r\nexport const ConfigGrafics = ({ pausedLevel, pause }) => {\r\n\r\n\r\n  const [indexEspejos, setIndexEspejos] = React.useState(3);\r\n  const [indexRes, setIndexRes] = React.useState(3);\r\n  const [indexVR, setIndexVR] = React.useState(2);\r\n  const [viewDist, setViewDist] = React.useState(100);\r\n  const [lightsOn, setLightsOn] = React.useState(true);\r\n  const [typeController, setTypeController] = React.useState(\"G29\");\r\n\r\n  React.useEffect(() => {\r\n    const currentConfig = JSON.parse(localStorage.getItem(\"graphic_config\"));\r\n    const currentController = localStorage.getItem(\"controller\");\r\n    setIndexEspejos(currentConfig.indexEspejos);\r\n    setIndexVR(currentConfig.indexVR);\r\n    setIndexRes(currentConfig.indexRes);\r\n    setViewDist(currentConfig.ViewDistance);\r\n    setLightsOn(currentConfig.lightsOn);\r\n    setTypeController(currentController);\r\n  }, []);\r\n\r\n  function submitConfig() {\r\n    const espejosElem = calidadEspejos.filter(elem => elem.value === indexEspejos)[0];\r\n    const newConfig = {\r\n        \"VRResMultiplier\": resolucionVR.filter(elem => elem.value === indexVR)[0].true_value,\r\n        \"ResMultiplier\": resolucion.filter(elem => elem.value === indexRes)[0].true_value,\r\n        \"AAEspejos\": espejosElem.true_value_aa,\r\n        \"MirrorResMultiplier\": espejosElem.true_value_res,\r\n        \"CreateMirrors\": espejosElem.createMirrors,\r\n        \"ViewDistance\": viewDist,\r\n        \"lightsOn\": lightsOn,\r\n        \"indexEspejos\": indexEspejos,\r\n        \"indexRes\": indexRes,\r\n        \"indexVR\": indexVR,\r\n    };\r\n    localStorage.setItem(\"graphic_config\", JSON.stringify(newConfig));\r\n    localStorage.setItem(\"controller\", typeController);\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item xs={12} md={8}>\r\n        <InputLabel id=\"controller-label\">Tipo de control</InputLabel>\r\n        <Select\r\n            labelId=\"controller-label\"\r\n            id=\"controller-select\"\r\n            value={typeController}\r\n            label=\"Tipo de control\"\r\n            onChange={(e) => {console.log(e);setTypeController(e.target.value);}}\r\n            style={{width:\"100%\", boxSizing:\"border-box\"}}\r\n        >\r\n            <MenuItem value={\"XInput\"}>Control de Xbox</MenuItem>\r\n            <MenuItem value={\"G29\"}>Volante con palanca</MenuItem>\r\n        </Select>\r\n      </Grid>\r\n      <Grid item xs={12} md={8}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          Calidad Espejos\r\n        </Typography>\r\n        <Slider defaultValue={3} marks={calidadEspejos} max={3} onChange={(e) => {setIndexEspejos(e.target.value)}} value={indexEspejos} />\r\n      </Grid>\r\n      <Grid item xs={12} md={8}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          Resolución\r\n        </Typography>\r\n        <Slider defaultValue={3} marks={resolucion} max={3} min={1} onChange={(e) => {setIndexRes(e.target.value)}} value={indexRes} />\r\n      </Grid>\r\n      <Grid item xs={12} md={8}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          Resolución Vr\r\n        </Typography>\r\n        <Slider defaultValue={2} marks={resolucionVR} max={3} onChange={(e) => {setIndexVR(e.target.value)}} value={indexVR}/>\r\n      </Grid>\r\n      <Grid item xs={12} md={8}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          Distancia de visión (metros)\r\n        </Typography>\r\n        <Slider valueLabelDisplay=\"auto\" defaultValue={100} max={300} value={viewDist} onChange={(e) => {setViewDist(e.target.value)}} />\r\n      </Grid>\r\n      <Grid item xs={12} md={8}>\r\n        <FormControlLabel\r\n          control={<Switch label=\"\" onChange={(e) => {setLightsOn(e.target.checked)}} value={lightsOn} />}\r\n          label=\"Activar luces vehiculos\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={8} md={4} style={{ textAlign: \"center\" }}>\r\n        <Box style={{ textAlign: \"center\", margin: \"auto\" }}>\r\n          <Button onClick={submitConfig} variant=\"contained\" color=\"success\">\r\n            Aplicar Cambios y Reiniciar\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Box, Modal, Button, Tab, CardMedia, Grid } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\r\nimport { ConfigGrafics } from './ConfigGrafics';\r\n\r\nexport const PauseModal = ({pausedLevel, pause}) => {\r\n\r\n  const [openModal, setOpenModal] = React.useState(pausedLevel ? pausedLevel : false);\r\n  const navigate = useNavigate();\r\n  const [selectedTab, setSelectedTab] = React.useState(\"joystick\");\r\n\r\n  React.useEffect(() => {\r\n    if (pausedLevel !== undefined && pausedLevel !== null)\r\n      setOpenModal(pausedLevel);\r\n\r\n  }, [pausedLevel]);\r\n  \r\n  const reloadTab = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  const backToMenu = () => {\r\n    navigate(\"/levels\");\r\n  }\r\n  const handleChange = (event, newTab) => {\r\n    setSelectedTab(newTab);\r\n  };\r\n   \r\n  return (\r\n    <Modal open = {openModal}>\r\n      <Box className={\"pause_menu\"}>\r\n        <h1>\r\n          Pausa\r\n        </h1> \r\n        <TabContext value={selectedTab} variant=\"fullWidth\" scrollButtons=\"auto\">\r\n          <Box>\r\n            <TabList scrollButtons=\"auto\" variant=\"fullWidth\" onChange={handleChange} aria-label=\"pause-tabs\">\r\n              <Tab label=\"Cómo manejar con Joystick\" value={\"joystick\"} wrapped/>\r\n              <Tab label=\"Cómo manejar con volante\" value={\"volante\"} wrapped/>\r\n              <Tab label=\"Configuración\" value={\"config\"} wrapped/>\r\n            </TabList >\r\n          </Box>\r\n          <Box sx={{ overflowY: \"scroll\", maxHeight: \"50vh\" }}>\r\n            <TabPanel value={\"joystick\"}>\r\n              <CardMedia\r\n                component=\"img\"\r\n                width={\"100%\"}\r\n                height={\"100%\"}\r\n                image={`/controlesJoystick.png`}\r\n                \r\n                style={{ borderRadius:20}}\r\n                sx={{ objectFit: \"contain\", justifyContent: \"center\", display: \"flex\", maxHeight:\"100%\", maxWidth:\"100%\"}}\r\n              />\r\n            </TabPanel>\r\n            <TabPanel value={\"volante\"}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                width={\"100%\"}\r\n                height={\"100%\"}\r\n                image={`/controlesVolante.png`}\r\n                style={{ borderRadius:20}}\r\n                sx={{ objectFit: \"contain\", justifyContent: \"center\", display: \"flex\", maxHeight:\"100%\", maxWidth:\"100%\"}}\r\n              />\r\n            </TabPanel>\r\n            <TabPanel value={\"config\"}>\r\n              <ConfigGrafics/>\r\n            </TabPanel>\r\n            <Grid container justifyContent={\"space-around\"} alignItems={\"center\"} rowSpacing={2}>\r\n              <Grid item xs={12} md={4} style={{textAlign:\"center\"}}>\r\n                <Box style={{textAlign:\"center\", margin:\"auto\"}}>\r\n                  <Button onClick={backToMenu} color=\"error\" variant=\"contained\">\r\n                    Volver al menu\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} md={4} style={{textAlign:\"center\"}}>\r\n                <Box style={{textAlign:\"center\", margin:\"auto\"}}>\r\n                  <Button onClick={reloadTab} variant=\"outlined\" color=\"error\">\r\n                    Reintentar\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} md={4} style={{textAlign:\"center\"}}>\r\n                <Box style={{textAlign:\"center\", margin:\"auto\"}}>\r\n                  <Button onClick={pause} variant=\"contained\">\r\n                    Seguir\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </TabContext>\r\n        \r\n      </Box>\r\n      \r\n    </Modal>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Camera from \"../Camera/Camera\";\r\nimport CarOffsetCamera from \"../Camera/CarOffsetCamera\";\r\nimport OrbitalCamera from \"../Camera/OribtalCamera\";\r\nimport CarModel from \"../3DModels/CarModel\";\r\nimport LogitechG29ControllerSingleton from \"../LogicModel/ControllerMapping/LogitechG29Controller\";\r\nimport XboxControllerSingleton from \"../LogicModel/ControllerMapping/XboxController\";\r\nimport Car from \"../LogicModel/CarLogic/Car\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport { Vector3 } from \"three\";\r\nimport LevelFactory from \"../Levels/LevelsFactory\";\r\nimport { VRButton } from \"../addons/VRbutton\";\r\nimport Stats from \"stats.js\";\r\nimport TrafficModel from \"../LogicModel/IA/TrafficModel\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { EndOfLevelModal } from \"../Menus/Components/EndOfLevelModal\";\r\nimport { PauseModal } from \"../Menus/Components/PauseModal\";\r\n\r\nexport default function ThreeSceneWrapper(){\r\n  const {state} = useLocation();\r\n  const {jsonLevel} = state;\r\n\r\n  return (\r\n    <ThreeScene jsonLevel = {jsonLevel}/>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst getTimeAsMs = (timeStr) => {\r\n  const [hours, minutes, seconds] = timeStr.split(\":\");\r\n  return parseInt(hours)*60*60*1000+parseInt(minutes)*60*1000+parseInt(seconds)*1000;\r\n}\r\n\r\nexport class ThreeScene extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentRPM: 0,\r\n      velocity: 0,\r\n      currentShift: 0,\r\n    };\r\n    this.physicsToUpdate = [];\r\n    localStorage.setItem(\"VR\", false);\r\n    this.gotAnyEvent = false;\r\n    this.stats = new Stats();\r\n    this.objectsToAnimate = [];\r\n    this.scene = new THREE.Scene();\r\n    this.reducedScene = new THREE.Scene();\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      powerPreference: \"high-performance\",\r\n      antialias: true,\r\n    });\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.clock = new THREE.Clock();\r\n    this.finishedLevel = false;\r\n    this.levelPaused = false;\r\n    this.score = 0;\r\n    this.time = 0;\r\n    this.initializedReducedScene = false;\r\n    this.checkpointUpdate = false;\r\n  }\r\n\r\n\r\n  updateCheckpoint(){\r\n    this.checkpointUpdate = true;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.jsonLevel = this.props.jsonLevel;\r\n    this.generateGeneralElements = this.generateGeneralElements.bind(this);\r\n    this.animation = this.animation.bind(this);\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n    this.generateEvents = this.generateEvents.bind(this);\r\n    this.addPlayerCar = this.addPlayerCar.bind(this);\r\n    this.generateLevel = this.generateLevel.bind(this);\r\n    this.addVR = this.addVR.bind(this);\r\n    this.endLevel = this.endLevel.bind(this);\r\n    this.pauseLevel = this.pauseLevel.bind(this);\r\n    this.updateCheckpoint = this.updateCheckpoint.bind(this);\r\n    await this.generateGeneralElements();\r\n    await this.createAmmo();\r\n    await this.addGeneralLights();\r\n    await this.generateLevel();\r\n    await this.addPlayerCar();\r\n    if(this.jsonLevel[\"has_traffic\"]){\r\n      await this.createTraffic();\r\n    }\r\n    this.generateEvents();\r\n    await this.addVR();\r\n    const resMult = JSON.parse(localStorage.getItem(\"graphic_config\")).ResMultiplier;\r\n    this.renderer.setPixelRatio(window.devicePixelRatio * resMult);\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.setAnimationLoop(this.animation);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.renderer.setAnimationLoop(null);\r\n    delete this.scene;\r\n    delete this.objectsToAnimate;\r\n    delete this.physicsToUpdate;\r\n    delete this.physicsWorld;\r\n    this.stats.dom.remove();\r\n    delete this.stats;\r\n    delete this.level;\r\n    delete this.carLogic;\r\n    delete this.carModel;\r\n    delete this.trafficModel;\r\n    delete this.jsonLevel;\r\n    delete this.camera;\r\n    document.getElementById(\"VRButton\").remove();\r\n    delete this.renderer;\r\n  }\r\n\r\n  async addVR() {\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.renderer.xr.enabled = true;\r\n    const VRScale = JSON.parse(localStorage.getItem(\"graphic_config\")).VRResMultiplier\r\n    this.renderer.xr.setFramebufferScaleFactor(VRScale);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    document.body.appendChild(VRButton.createButton(this.renderer));\r\n  }\r\n\r\n  async onReceiveResponseFromSceneWorker(message){\r\n    this.initializedReducedScene = true;\r\n    this.reducedScene.children = message.data;\r\n  }\r\n\r\n  async generateLevel() {\r\n    this.level = new LevelFactory(this.scene, this.physicsWorld, this.endLevel, this.updateCheckpoint);\r\n    let updateDataLevel = await this.level.createLevelCustom(this.jsonLevel);\r\n    this.objectsToAnimate = [\r\n      ...this.objectsToAnimate,\r\n      ...updateDataLevel.objectsToAnimate,\r\n    ];\r\n    this.physicsToUpdate = [\r\n      ...this.physicsToUpdate,\r\n      ...updateDataLevel.physicsToUpdate,\r\n    ];\r\n    const geomField = new THREE.BoxGeometry(10000, 10000);\r\n    const texture = new THREE.TextureLoader().load(\"./textures/pasto.jpeg\");\r\n    texture.repeat.set(500, 500);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    const matField = new THREE.MeshBasicMaterial({ map: texture });\r\n    const meshField = new THREE.Mesh(geomField, matField);\r\n    meshField.name = \"GREEN_FIELD\";\r\n    meshField.position.set(0, -1, 0);\r\n    meshField.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\r\n    this.scene.add(meshField);\r\n  }\r\n\r\n  async generateGeneralElements() {\r\n    this.renderer.setClearColor(0x87cefa, 1);\r\n    this.camera = new Camera(this.renderer);\r\n    this.camera.addContainerToScene(this.scene);\r\n    this.stats.showPanel(0);\r\n    document.body.appendChild(this.stats.dom);\r\n    if (!localStorage.getItem(\"graphic_config\")){\r\n      localStorage.setItem(\"graphic_config\", JSON.stringify({\r\n        \"VRResMultiplier\": 0.75,\r\n        \"ResMultiplier\": 1,\r\n        \"AAEspejos\": 4,\r\n        \"MirrorResMultiplier\": 1,\r\n        \"CreateMirrors\": true,\r\n        \"ViewDistance\": 100,\r\n        \"lightsOn\": true,\r\n        \"indexEspejos\": 3,\r\n        \"indexRes\": 3,\r\n        \"indexVR\": 2,\r\n      }));\r\n    }\r\n    if (!localStorage.getItem(\"controller\")){\r\n      localStorage.setItem(\"controller\", \"G29\");\r\n    }\r\n  }\r\n\r\n  async addGeneralLights() {\r\n    const light = new THREE.AmbientLight(0xffffff, 0.5);\r\n    light.name = \"AmbientLight\";\r\n    this.scene.add(light);\r\n  }\r\n\r\n  async addPlayerCar() {\r\n    this.carLogic = new Car(\r\n      this.physicsWorld, \r\n      [this.jsonLevel.initial_position[0],1,this.jsonLevel.initial_position[1]], //Initial Position\r\n      true, // Use Engine Audio\r\n      new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 0, 1, 0 ), this.jsonLevel.initial_rotation ) // Initial Rotation\r\n    );\r\n    await this.carLogic.carPhysics.buildAmmoPhysics();\r\n    let carModel = new CarModel(false);\r\n    if (localStorage.getItem(\"controller\") === \"XInput\"){\r\n      this.carLogic.changeShiftBox(\"semi-auto\");\r\n    }else{\r\n      this.carLogic.changeShiftBox(\"manual\");\r\n    }\r\n    this.carLogic.carPhysics.rigidBody.threeObject = carModel;\r\n    this.carLogic.attachObserver(carModel);\r\n    this.carLogic.attachObserver(this.camera);\r\n    this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n    this.carLogic.notifyObservers();\r\n  }\r\n\r\n\r\n  async createTraffic(){\r\n    this.trafficModel = new TrafficModel(this.scene, this.physicsWorld, this.jsonLevel.streets);\r\n    this.carLogic.attachObserver(this.trafficModel);\r\n    await this.trafficModel.generateInitialTraffic();\r\n  }\r\n\r\n  generateEvents() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    window.addEventListener(\"gamepaddisconnected\", function (e) {\r\n      LogitechG29ControllerSingleton.removeInstance();\r\n    });\r\n\r\n    document.addEventListener(\r\n      \"keydown\",\r\n      (event) => {\r\n        var keyPressed = event.key;\r\n        if (!isNaN(keyPressed) && parseInt(keyPressed) >= 1 && parseInt(keyPressed) <= 5){\r\n          this.carLogic.removeObserver(this.camera);\r\n        }\r\n        switch (keyPressed) {\r\n          case \"1\":\r\n            this.camera = new Camera(this.renderer);\r\n            this.camera.addContainerToScene(this.reducedScene);\r\n            this.camera.addContainerToScene(this.scene);\r\n            break;\r\n          case \"2\":\r\n            this.camera = new OrbitalCamera(this.renderer);\r\n            break;\r\n          case \"3\":\r\n            this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n            break;\r\n          case \"4\":\r\n            this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n            break;\r\n          case \"5\":\r\n            this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n            break;\r\n          case \"Escape\":\r\n            this.pauseLevel();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        if (!isNaN(keyPressed) && parseInt(keyPressed) >= 1 && parseInt(keyPressed) <= 5){\r\n          this.carLogic.attachObserver(this.camera);\r\n          this.carLogic.notifyObservers();\r\n        }\r\n      },\r\n      false\r\n    );\r\n  }\r\n\r\n  async createAmmo() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.tempTransform = new Ammo.btTransform();\r\n    let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n    let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n    let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n    let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n    this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(\r\n      dispatcher,\r\n      overlappingPairCache,\r\n      solver,\r\n      collisionConfiguratation\r\n    );\r\n    this.physicsWorld.setGravity(new Ammo.btVector3(0, -9.8, 0));\r\n\r\n    const onEnterColission = Ammo.addFunction(async (cp, obj0, obj1) => {\r\n      let Ammo = await AmmoInstance.getInstance();\r\n      obj0 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj0, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      obj1 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj1, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      if (\r\n        obj0.threeObject &&\r\n        obj1.threeObject &&\r\n        (obj0.threeObject.threeDModel.name === \"driverCar\" ||\r\n          obj1.threeObject.threeDModel.name === \"driverCar\")\r\n      ) {\r\n        cp = Ammo.wrapPointer(cp, Ammo.btManifoldPoint);\r\n        const userPersistentData = cp.get_m_userPersistentData();\r\n        if (userPersistentData === 0) {\r\n            obj0.onCollide ? obj0.onCollide() : obj1.onCollide();\r\n            //Se cambia el contactId para denotar que la colision es constante. Para no restar puntos infinitamente.\r\n            const collisionContactID = 1; \r\n            cp.set_m_userPersistentData(collisionContactID);\r\n       }\r\n      }\r\n    });\r\n    this.physicsWorld.setContactProcessedCallback(onEnterColission);\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.camera.handleResize();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n  }\r\n\r\n  vecDistance(vectorA, vectorB){\r\n    return vectorA.distanceTo(vectorB);\r\n  }\r\n\r\n  getMaxSizeStreets(){\r\n    let maxX = 0, maxZ = 0;\r\n    for (let i=0; i< this.jsonLevel.streets.length; i++){\r\n      const street = this.jsonLevel.streets[i];\r\n      if ( maxX < street.position_x + street.long_x/2 ) {\r\n        maxX = street.position_x + street.long_x/2;\r\n      }\r\n      if ( maxZ < street.position_y + street.long_y/2 ) {\r\n        maxZ = street.position_y + street.long_y/2;\r\n      }\r\n    }\r\n    return [maxX, maxZ];\r\n  }\r\n\r\n  async getReducedScene(playersPosition) {\r\n    const viewDistance = JSON.parse(localStorage.getItem(\"graphic_config\")).ViewDistance;\r\n    const newChildren = this.scene.children.filter(\r\n      object => (\r\n          object.name === \"GREEN_FIELD\" || \r\n          object.name === \"AmbientLight\" ||\r\n          object.name === \"driverCar\" ||\r\n          this.vecDistance(object.position, playersPosition) <= viewDistance ||\r\n          //Si es una calle recta, esto ayuda a que se vea aunque el centro este mas lejos que la viewDistance\r\n          (object.LONG && \r\n            this.vecDistance(object.position, playersPosition) <= viewDistance + object.LONG\r\n          )\r\n      )\r\n    );\r\n    this.reducedScene.children = newChildren;\r\n    this.initializedReducedScene = true;\r\n  }\r\n\r\n  animation() {\r\n    this.stats.begin();\r\n    if(!this.levelPaused){\r\n      let deltaTime = this.clock.getDelta();\r\n      this.physicsWorld.stepSimulation(deltaTime, 10);\r\n      this.jsonLevel[\"has_traffic\"] && this.trafficModel.animate();\r\n      this.objectsToAnimate.forEach(function (object) {\r\n        object.animate();\r\n      });\r\n      this.physicsToUpdate.forEach(function (phys) {\r\n        phys.updatePhysics();\r\n      });\r\n      this.camera.setPositionRelativeToObject();\r\n      if (localStorage.getItem(\"controller\") === \"XInput\"){\r\n        XboxControllerSingleton.getInstance(this.carLogic, this.camera,this.pauseLevel).checkEvents();\r\n      }else{\r\n        LogitechG29ControllerSingleton.getInstance(this.carLogic, this.camera, this.pauseLevel).checkEvents();\r\n      }\r\n      this.setState({\r\n        ...this.state,\r\n        velocity: this.carLogic.getSpeed(),\r\n        currentRPM: this.carLogic.getCurrentRPM(),\r\n        currentShift: this.carLogic.getCurrentShift(),\r\n        score: this.level.getScore(),\r\n        time: this.level.getTime()\r\n      });\r\n      const currentPos = this.carLogic.getDataToAnimate()[\"position\"];\r\n      if (!this.lastPlayerPos || this.checkpointUpdate || this.vecDistance(this.lastPlayerPos, currentPos) >= 30){\r\n        this.lastPlayerPos = currentPos;\r\n        this.checkpointUpdate = false;\r\n        this.getReducedScene(this.lastPlayerPos);\r\n      }\r\n      if (this.initializedReducedScene){\r\n        this.renderer.render(this.reducedScene, this.camera.getCameraInstance());\r\n      }else{\r\n        this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n      }\r\n      \r\n    }\r\n    this.stats.end();\r\n  }\r\n\r\n  endLevel(score ,time){\r\n    this.finishedLevel = true;\r\n    this.score = score;\r\n    this.time = time;\r\n    this.setState({...this.state, endScore: score, endTime: time, finishedLevel: true});\r\n  }\r\n\r\n  pauseLevel(){\r\n    const newStatePause = !this.levelPaused;\r\n    this.levelPaused = newStatePause;\r\n    this.setState({...this.state, paused: newStatePause});\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100vw\" }}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            right: \"10px\",\r\n            color: \"red\",\r\n            width: \"175px\",\r\n          }}\r\n          id=\"Acelerador\"\r\n        >\r\n          <p style={{ zIndex: 20, display: \"float\", fontWeight: \"bold\" }}>\r\n            Cambio Actual: {parseInt(this.state.currentShift)}\r\n          </p>\r\n          <p style={{ zIndex: 20, display: \"float\", fontWeight: \"bold\" }}>\r\n            Puntaje Actual: {this.state.score}\r\n          </p>\r\n          <p style={{ zIndex: 20, display: \"float\", fontWeight: \"bold\" }}>\r\n            Tiempo Actual: {this.state.time}\r\n          </p>\r\n        </div>\r\n        <div\r\n          ref={(mount) => {\r\n            this.mount = mount;\r\n          }}\r\n        ></div>\r\n        \r\n        <EndOfLevelModal \r\n          endLevel={this.state.finishedLevel ? this.state.finishedLevel : this.finishedLevel} \r\n          score={this.state.endScore} \r\n          time = {this.state.endTime}\r\n          minScore={this.jsonLevel ? this.jsonLevel[\"minimum_to_win\"] : 0}\r\n          levelId={this.jsonLevel ? this.jsonLevel.id : undefined}\r\n          timeInMs= {this.state.endTime ? getTimeAsMs( this.state.endTime) : 0}\r\n        />\r\n\r\n        <PauseModal\r\n          pausedLevel={this.state.paused}\r\n          pause={this.pauseLevel}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Grid } from \"@mui/material\";\r\nimport './styles.css'\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundColor: \"#B1E6F2\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <Grid \r\n          container \r\n          rowSpacing={2} \r\n          justifyContent=\"center\"\r\n          alignItems={\"center\"} \r\n          flexDirection={\"column\"} \r\n          className={\"containerMainMenu\"}\r\n        >\r\n          <Grid item xs={12} className={\"MainMenuTitle\"}>\r\n            <h1 className={\"titleMainMenu\"}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </Grid>\r\n          <Grid item xs={12} className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/levels\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </Grid>\r\n          <Grid item xs={12} className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"right\", paddingRight:30}}>Configurations</h3>\r\n                        </div>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const ItemsContext = createContext();\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport { ItemsContext } from '../LevelEditorContext/ItemsContext';\r\n\r\n\r\nconst allUnselected = {\r\n    \"cone\": null,\r\n    \"trapecio\": null,\r\n    \"street\": null\r\n};\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const {setLastSelectedItem, lastSelectedItem} = React.useContext(ItemsContext);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    //const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    const [itemSelected, setItemSelected] = React.useState(allUnselected);\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        const dictSelection = {...allUnselected};\r\n        dictSelection[item] = \"selected\";\r\n        setItemSelected(dictSelection);\r\n        setLastSelectedItem({\r\n            selectedItem: item,\r\n            scale: 1.0,\r\n            positionX: 0.0,\r\n            positionY: 0.0,\r\n            zIndex: lastSelectedItem ? lastSelectedItem.zIndex + 1 : 1\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"left\", paddingLeft:10}}>Items</h3>\r\n                        </div>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <Grid style={{justifyContent: \"center\", display: \"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n                        {\r\n                            Object.entries(itemSelected).map(([nameItem, isSelected]) => {\r\n                                return (\r\n                                    <img \r\n                                        alt={`${nameItem}`}\r\n                                        key={nameItem}\r\n                                        src={`${nameItem}.png`} \r\n                                        width={75}\r\n                                        height={75} \r\n                                        className={`imageLevelEditor ${isSelected}`} \r\n                                        onClick={() => handleSelection(nameItem)}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport {useState} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst MAX_WIDTH_INPUT = 40;\r\nconst MAX_HEIGHT_INPUT = 40;\r\n\r\nexport const InputsGrid = ({setGridDimensions, gridDimensions}) => {\r\n    const [InputWidth, setInputWidth] = useState(gridDimensions.width);\r\n    const [InputHeight, setInputHeight] = useState(gridDimensions.height);\r\n\r\n    const onSubmit = () =>{\r\n      setGridDimensions(\r\n        {\r\n          width: InputWidth, \r\n          height: InputHeight\r\n        }\r\n      );\r\n    }\r\n  return (\r\n    <Grid container  direction=\"row\" width={\"80%\"} marginLeft={'10%'}\r\n    justifyContent=\"space-evenly\"\r\n    alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={2}>\r\n        <p>Ancho:</p>\r\n          <input \r\n            value={InputWidth} \r\n            type=\"number\" \r\n            step=\"1\" \r\n          onChange={\r\n              (event) => {\r\n                let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                setInputWidth(value > MAX_WIDTH_INPUT ? MAX_WIDTH_INPUT : value);\r\n              }\r\n        } \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={2}>\r\n          <div>\r\n            <p>Alto:</p>\r\n            <input \r\n              value={InputHeight} \r\n              type=\"number\" \r\n              step=\"1\" \r\n              onChange={\r\n                (event) => {\r\n                  let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                  setInputHeight(value > MAX_HEIGHT_INPUT ? MAX_HEIGHT_INPUT : value);\r\n                  \r\n                }\r\n              }\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button variant=\"contained\" onClick={onSubmit}>Actualizar</Button>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n","\r\nconst STANDARD_BOX_LONG = 30;\r\n\r\nexport class AbstractStreet{\r\n\r\n    constructor(ninePerNineGrid, rowIndex, columnIndex){\r\n        const rightFilled = ninePerNineGrid[1][2].filled;\r\n        const topFilled = ninePerNineGrid[0][1].filled;\r\n        const botFilled = ninePerNineGrid[2][1].filled;\r\n        const leftFilled = ninePerNineGrid[1][0].filled;\r\n        this.rotation = this.determineStreetRotation(topFilled, leftFilled, botFilled, rightFilled);\r\n        this.long = [\r\n            STANDARD_BOX_LONG, \r\n            STANDARD_BOX_LONG\r\n        ];\r\n        this.position = [\r\n            rowIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2, \r\n            columnIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2\r\n        ];\r\n    }\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //To implement by each son\r\n    }\r\n\r\n    static sumValueForCell(cell){\r\n        return cell.filled ? 1 : 0\r\n    }\r\n\r\n    static calculateNeighboursFilled(ninePerNineGrid){\r\n        let rowCount = 0;\r\n        let columnCount = 0;\r\n        rowCount += AbstractStreet.sumValueForCell(ninePerNineGrid[1][0]) + AbstractStreet.sumValueForCell(ninePerNineGrid[1][2]);\r\n        columnCount += AbstractStreet.sumValueForCell(ninePerNineGrid[0][1]) + AbstractStreet.sumValueForCell(ninePerNineGrid[2][1]);\r\n        return [rowCount, columnCount];\r\n    }\r\n\r\n    isStraight(){\r\n        return false;\r\n    }\r\n\r\n\r\n    determineStreetRotation(){\r\n        //To be defined by sons\r\n    }\r\n\r\n    getAsJSON(){\r\n        return {\r\n            \"position_x\": this.position[0],\r\n            \"position_y\": this.position[1],\r\n            \"rotation\": this.rotation,\r\n            \"long_x\": this.long[0],\r\n            \"long_y\": this.long[1]\r\n        }\r\n    }\r\n\r\n    getPositionAsRowAndColumn(){\r\n        const row = (this.position[0] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        const col = (this.position[1] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        return [row, col];\r\n    }\r\n\r\n\r\n    getPositionX(){\r\n        return this.position[0];\r\n    }\r\n\r\n    getPositionY(){\r\n        return this.position[1];\r\n    }\r\n\r\n    getLongX(){\r\n        return this.long[0];\r\n    }\r\n\r\n    getLongY(){\r\n        return this.long[1];\r\n    }\r\n   \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_TO_LEFT\": Math.PI*3/2,\r\n    \"LEFT_TO_BOT\": 0,\r\n    \"BOT_TO_RIGHT\": Math.PI/2,\r\n    \"RIGHT_TO_TOP\": Math.PI\r\n}\r\n\r\nexport class Curve extends AbstractStreet{\r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //Tiene que tener solo 2 lindantes, y no ser en misma direccion.\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return (rowCount === 1 && columnCount === 1);\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left){\r\n            return POSSIBLE_ROTATIONS[\"TOP_TO_LEFT\"];\r\n        }\r\n        if(left && bot){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_TO_BOT\"];\r\n        }\r\n        if(bot && right){\r\n            return POSSIBLE_ROTATIONS[\"BOT_TO_RIGHT\"];\r\n        }\r\n        if(right && top){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_TO_TOP\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"CURVE\";\r\n        return dict;\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"HORIZONTAL\": 0,\r\n    \"VERTICAL\": Math.PI/2\r\n}\r\n\r\nexport class StraightStreet extends AbstractStreet {\r\n    \r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        \r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);\r\n        return(columnCount === 2 && rowCount === 0 )|| (columnCount === 0 && rowCount === 2 )\r\n\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && bot){\r\n            return POSSIBLE_ROTATIONS[\"VERTICAL\"];\r\n        }\r\n        if(left && right){\r\n            return POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n        }\r\n    }\r\n\r\n    isStraight(){\r\n        return true;\r\n    }\r\n\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"STRAIGHT\";\r\n        return dict;\r\n    }\r\n\r\n\r\n    isHorizontal(){\r\n        return this.rotation === POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_SINGLE\": Math.PI,\r\n    \"LEFT_SINGLE\": Math.PI*3/2,\r\n    \"BOT_SINGLE\": 0,\r\n    \"RIGHT_SINGLE\": Math.PI/2\r\n}\r\nexport class TStreet extends AbstractStreet {\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 1 )|| (columnCount === 1 && rowCount === 2 );\r\n    }\r\n    \r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left && right){\r\n            return POSSIBLE_ROTATIONS[\"TOP_SINGLE\"];\r\n        }\r\n        if(left && bot && top){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_SINGLE\"];\r\n        }\r\n        if(bot && right && left){\r\n            return POSSIBLE_ROTATIONS[\"BOT_SINGLE\"];\r\n        }\r\n        if(right && top && bot){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_SINGLE\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"T_STREET\";\r\n        return dict;\r\n    }\r\n\r\n}","export class StraightStreetLinker{\r\n\r\n    constructor(arrayOfStreets){\r\n        this.sections = this.segregateSections(arrayOfStreets);\r\n        this.sectionsAsJSON = this.linkSections();\r\n    }\r\n\r\n    //Genero un array para cada tramo recto, que contenga todas las StraightStreets de ese tramo\r\n    //Cada array de seccion va dentro de un array general y eso retornamos\r\n    segregateSections(arrayOfStreets){\r\n        // Recorro array de streets --> Armo un hashMap de filas, y otro de columnas.\r\n        // Para cada fila o columna, separar las subsecciones correspondientes.\r\n        const rows = {};\r\n        const cols = {};\r\n        let sectionsArray = [];\r\n\r\n        for(let i = 0; i < arrayOfStreets.length; i++){\r\n            let [streetRow, streetCol] = arrayOfStreets[i].getPositionAsRowAndColumn();\r\n            if( arrayOfStreets[i].isHorizontal() ){\r\n                if( !(streetRow in rows) ){\r\n                    rows[streetRow] = [];\r\n                }\r\n                rows[streetRow].push({\"idx\":streetCol, \"street\":arrayOfStreets[i]});\r\n            }\r\n            else{\r\n                if( !(streetCol in cols) ){\r\n                    cols[streetCol] = [];\r\n                }\r\n                cols[streetCol].push({\"idx\":streetRow, \"street\":arrayOfStreets[i]});\r\n            }\r\n        }\r\n        for(const [, value] of Object.entries(rows)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        for(const [, value] of Object.entries(cols)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        return sectionsArray;\r\n        \r\n    }\r\n\r\n\r\n    generateArraySubsections(array){\r\n        const finalArray = [];\r\n        //Sort de array por idx creciente... CREEMOS que ya viene sorteado - VERIFICAR.\r\n        for ( let i=0; i<array.length; i++){\r\n            //Primer elemento, o no son lindantes\r\n            if( i === 0 || (Math.abs(array[i][\"idx\"] - array[i-1][\"idx\"]) > 1)){\r\n                finalArray.push([array[i][\"street\"]]);\r\n            }else{\r\n                finalArray[finalArray.length - 1].push(array[i][\"street\"]);\r\n            }\r\n        }\r\n        return finalArray;\r\n    }\r\n\r\n\r\n    linkSections(){\r\n        const sectionsJSON = [];\r\n        for(let i = 0; i < this.sections.length; i++){\r\n            //Rotation is the same for all of them\r\n            const jsonForStreet = {\r\n                \"position_x\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionX(), 0)/this.sections[i].length,\r\n                \"position_y\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionY(), 0)/this.sections[i].length ,\r\n                \"rotation\": this.sections[i][0].rotation,\r\n                \"long_x\": this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongX(), 0) : this.sections[i][0].getLongX(),\r\n                \"long_y\": !this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongY(), 0) : this.sections[i][0].getLongY(),\r\n                \"type\": \"STRAIGHT\"\r\n            }\r\n            sectionsJSON.push(jsonForStreet);\r\n        }\r\n        return sectionsJSON;\r\n    }\r\n\r\n    getSectionsAsJSON(){\r\n        return this.sectionsAsJSON;\r\n    }\r\n}","import { StraightStreet, TStreet, Intersection, Curve, StraightStreetLinker } from \"./Street\";\r\n\r\nconst TYPES_OF_STREETS = [\r\n    StraightStreet,\r\n    Curve,\r\n    TStreet,\r\n    Intersection\r\n];\r\n\r\nexport class StreetFactory{\r\n    \r\n    constructor(levelGrid, isInfiniteLevel){\r\n        this.levelGrid = levelGrid;\r\n        this.getNinePerNineGrid = isInfiniteLevel ? this.getNinePerNineGridInfinite : this.getNinePerNineGridFinite;\r\n    }\r\n\r\n    constructStreets(){\r\n        const straightStreetsArray = [];\r\n        const curvedStreetsArray = [];\r\n        //ararco desde la parte superior izq\r\n        for ( let i = 0; i < this.levelGrid.length ; i++ ){\r\n            for ( let j = 0; j < this.levelGrid[i].length ; j++ ){\r\n                const myCell = this.levelGrid[i][j];\r\n                if (myCell.filled){\r\n                    const streetObject = this.defineTypeOfStreet(i, j);\r\n                    if (streetObject.isStraight()){\r\n                        straightStreetsArray.push(streetObject);\r\n                    }\r\n                    else{\r\n                        curvedStreetsArray.push(streetObject);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        const conjunctedStraightStreets = this.linkStraightStreets(straightStreetsArray);\r\n        let finalArray = curvedStreetsArray.map(street => street.getAsJSON());\r\n        return [...finalArray, ...conjunctedStraightStreets];\r\n        //const finalArray = [...conjunctedStraightStreets, ...curvedStreetsArray];\r\n        //return finalArray.map(street => street.getAsJSON());\r\n    }\r\n\r\n    getNinePerNineGridInfinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            const rowArray = [];\r\n            //Si es negativo es la ultima, y sino es el modulo entre el index y la cant de filas.\r\n            const realRow = i < 0 ? this.levelGrid.length-1 : i % this.levelGrid.length;\r\n            for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                //Simil row pero para columna\r\n                const realColumn = y < 0 ? this.levelGrid[realRow].length-1 : y % this.levelGrid[realRow].length;\r\n                rowArray.push(this.levelGrid[realRow][realColumn]);\r\n            }\r\n            matrix.push(rowArray);\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    getNinePerNineGridFinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        const celda_vacia = {\r\n            \"filled\": false,\r\n        }\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            //Casos Filas Imaginarias vacías\r\n            if (i < 0 || i === this.levelGrid.length){\r\n                matrix.push([celda_vacia, celda_vacia, celda_vacia]);\r\n            }else{\r\n                const rowArray = [];\r\n                for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                    if (y < 0 || y === this.levelGrid[i].length){\r\n                        rowArray.push(celda_vacia);\r\n                    }else{\r\n                        rowArray.push(this.levelGrid[i][y]);\r\n                    }\r\n                }\r\n                matrix.push(rowArray);\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    /* Example:\r\n        | | | | | | | |\r\n        | | | x x x | |\r\n        | | | x Y x | |\r\n        | | | x x x | |\r\n        | | | | | | | |\r\n    */\r\n    defineTypeOfStreet(row, column){\r\n        const ninePerNineGrid = this.getNinePerNineGrid(row, column);\r\n        let typeDefined = false;\r\n        let typeResult = undefined;\r\n        for ( let i = 0; i < TYPES_OF_STREETS.length && !typeDefined; i++){\r\n            typeDefined = TYPES_OF_STREETS[i].isValidNinePerNineGrid(ninePerNineGrid);\r\n            typeResult = TYPES_OF_STREETS[i];\r\n        }\r\n        if (!typeDefined){\r\n            throw new Error(\"No se pudo definir el tipo de calle dentro de los tipos validos.\");\r\n        }\r\n        //Row 0 es la de abajo del todo. Invertimos la row.\r\n        return new typeResult(ninePerNineGrid, this.levelGrid.length - 1 - row, column);\r\n    }\r\n\r\n\r\n    linkStraightStreets(straightStreetsArray){\r\n        const linker = new StraightStreetLinker(straightStreetsArray);\r\n        return linker.getSectionsAsJSON();\r\n    }\r\n    \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\n\r\nexport class Intersection extends AbstractStreet{\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 2 )\r\n    }\r\n\r\n    determineStreetRotation(){\r\n        //No sense to rotate it\r\n        return 0;\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"INTERSECTION\";\r\n        return dict;\r\n    }\r\n}\r\n","import { StreetFactory } from \"./StreetFactory\";\r\n\r\n\r\nexport function downloadObjectAsJson(exportObj, exportName){\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n};\r\n\r\n\r\n\r\n\r\nfunction getCountSidesPainted(levelGrid, i, j){\r\n    let aux = 0;\r\n    for (let x = i-1; x <= i+1 && x < levelGrid.length; x++){\r\n        if (x >= 0 && x !== i){\r\n            aux += levelGrid[x][j].filled ? 1 : 0;\r\n        }\r\n    }\r\n    for(let y = j-1; y <= j+1 && y < levelGrid[i].length; y++){\r\n        if(y >= 0 && y !== j){\r\n            aux += levelGrid[i][y].filled ? 1 : 0;\r\n        }\r\n    }\r\n    return aux;\r\n}\r\n\r\nfunction validateGridNotInfinite(levelGrid){\r\n    let valid = true;\r\n    let wrongCells = [];\r\n    for (let i=0; i<levelGrid.length; i++){\r\n        for (let j=0; j<levelGrid[i].length; j++){\r\n            if (levelGrid[i][j].filled && getCountSidesPainted(levelGrid, i,j) <= 1){\r\n                valid = false;\r\n                wrongCells.push([i,j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        \"valid\": valid,\r\n        \"wrongCells\": wrongCells\r\n    }\r\n}\r\n\r\nfunction validateGridInfinite(){\r\n\r\n}\r\n\r\nexport function validateGrid(levelGrid, isInfinite){\r\n    \r\n    return (isInfinite ? validateGridInfinite(levelGrid) : validateGridNotInfinite(levelGrid));\r\n    \r\n}\r\n\r\nexport function generateJSONFromGrid(levelGrid){\r\n    \r\n    const streetFactory = new StreetFactory(levelGrid);\r\n    const streetsArray = streetFactory.constructStreets();\r\n    const objectsAndStreets = {\r\n        \"streets\": streetsArray\r\n    };\r\n    return objectsAndStreets;\r\n\r\n    \r\n}","import { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport MemoryIcon from '@mui/icons-material/Memory';\r\nimport { downloadObjectAsJson, validateGrid, generateJSONFromGrid } from '../Resources/LevelEditor';\r\n\r\nconst COLORS = {\r\n  \"FILLED\": \"darkgray\",\r\n  \"EMPTY\": \"white\",\r\n  \"WARNING\": 'orange',\r\n};\r\n\r\nconst WIDTH_GRID_VIEW = 600;\r\nconst HEIGHT_GRID_VIEW = 600;\r\nconst LEFT_CLICK = 0;\r\nconst RIGHT_CLICK = 2;\r\n\r\n\r\nexport const LevelGrid = ({gridDimensions}) => {\r\n\r\n  const [levelGrid, setLevelGrid] = useState([]);\r\n  const [click, setClick] = useState(false);\r\n  const [rightClick, setRightClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let finalGrid = [];\r\n    for(let i=0; i<gridDimensions.height; i++){\r\n      let currentRow = [];\r\n      for(let j=0; j<gridDimensions.width; j++){\r\n        let newCell = {\r\n          \"filled\": false,\r\n          \"div_color\": COLORS[\"EMPTY\"]\r\n        }\r\n        currentRow.push(newCell);\r\n      }\r\n      finalGrid.push(currentRow);\r\n    }\r\n    setLevelGrid(finalGrid);\r\n  }, [gridDimensions.width, gridDimensions.height]);\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", (event) => {\r\n      event.preventDefault();\r\n      if(event.button === LEFT_CLICK){\r\n        setClick(false);\r\n      }else if (event.button === RIGHT_CLICK){\r\n        setRightClick(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"contextmenu\", (event) => { event.preventDefault(); });\r\n  }, []);\r\n\r\n\r\n  const arrayContains = (array, insiderArray) => {\r\n    if (!insiderArray || !array){\r\n      return false;\r\n    }\r\n    for (let i=0; i<array.length; i++){\r\n      let equals = true;\r\n      for (let j=0; j<array[i].length; j++){\r\n        try{\r\n          if(array[i][j] !== insiderArray[j]){\r\n            equals = false;\r\n          }\r\n        }catch(exc){j=array[i].length; equals=false;}\r\n      }\r\n      if(equals) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const onSubmitLevel = () =>{\r\n    let result = validateGrid(levelGrid);\r\n    let vec_aux = [...levelGrid];\r\n    for( let i=0; i< levelGrid.length; i++ ){\r\n      for( let j=0; j < levelGrid[i].length; j++){\r\n        if (vec_aux[i][j].filled){\r\n          vec_aux[i][j].div_color = arrayContains(result.wrongCells, [i,j]) ? COLORS[\"WARNING\"] : COLORS[\"FILLED\"];\r\n        }\r\n        \r\n      }\r\n    }\r\n    setLevelGrid(vec_aux);\r\n    if (result.valid) {\r\n      downloadObjectAsJson(generateJSONFromGrid(levelGrid), \"Driving_Simulator_Custom_Level.json\");\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const onEnterHoverWithClickCell = (row, col) => {\r\n    if(click){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(rightClick){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n  \r\n  const onClickCell = (row, col, btn_click) => {\r\n    if(btn_click === LEFT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(btn_click === RIGHT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        width: WIDTH_GRID_VIEW,\r\n        height: HEIGHT_GRID_VIEW,\r\n        marginTop: 25,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n      onMouseDown = {(event) => {\r\n        event.preventDefault();\r\n        if(event.button === LEFT_CLICK){\r\n          setClick(true);\r\n        }else if (event.button === RIGHT_CLICK){\r\n          setRightClick(true);\r\n        }\r\n      }}\r\n    >\r\n      {levelGrid.map((row, idx_row) => {\r\n        return(\r\n          <div \r\n            className=\"row-level-grid\" \r\n            id={`row_${idx_row}`}\r\n            key={`row_${idx_row}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: HEIGHT_GRID_VIEW/gridDimensions.height,\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            {row.map((cell, idx_col) => {\r\n              return (\r\n                <div \r\n                  className=\"cell-level-grid\" \r\n                  key={`cell_${idx_row}_${idx_col}`}\r\n                  id={`cell_${idx_row}_${idx_col}`} \r\n                  style={{\r\n                    backgroundColor: cell[\"div_color\"],\r\n                    width: `${100/gridDimensions.width}%`,\r\n                    height: \"100%\",\r\n                    border: \"1px solid black\"\r\n                  }} \r\n                  //onMouseEnter = {() => onEnterHoverWithClickCell(idx_row, idx_col)}\r\n                  onMouseMove = {(event) => {\r\n                    event.preventDefault();\r\n                    onEnterHoverWithClickCell(idx_row, idx_col);\r\n                  }}\r\n                  onMouseUp = {(event) => {\r\n                    onClickCell(idx_row, idx_col, event.button);\r\n                  }}\r\n                  \r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:40}}>\r\n        <Button variant=\"contained\" onClick={onSubmitLevel}  color=\"success\">\r\n          <MemoryIcon/> Procesar nivel...\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { ItemsContext } from './LevelEditorContext/ItemsContext';\r\nimport { useState } from 'react';\r\nimport { InputsGrid } from './Components/InputsGrid';\r\n\r\nimport { LevelGrid } from './Components/LevelGrid';\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = useState(false);\r\n  const [openConfigs, setOpenConfigs] = useState(false);\r\n\r\n  const [itemsInGrid, setItemsInGrid] = useState([]);\r\n\r\n  const [lastSelectedItem, setLastSelectedItem] = useState(null);\r\n\r\n  const [gridDimensions, setGridDimensions] = useState({width:20, height:20});\r\n\r\n  React.useEffect(() => {\r\n    if (lastSelectedItem !== null){\r\n      setItemsInGrid(currentItems => [...currentItems, lastSelectedItem]);\r\n    }\r\n  }, [lastSelectedItem]);\r\n\r\n  return (\r\n    <>\r\n      <ItemsContext.Provider value={{lastSelectedItem, setLastSelectedItem}} >\r\n        <div style={{backgroundColor: \"#B1E6F2\", minHeight:'100vh'}} >\r\n          <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n            <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n              <AddIcon/>\r\n            </IconButton>\r\n            <h1>Driving Simulator - Level Editor</h1>\r\n            <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n              <InputsGrid setGridDimensions={setGridDimensions} gridDimensions={gridDimensions}></InputsGrid>\r\n              <LevelGrid gridDimensions = {gridDimensions}/>\r\n              {itemsInGrid.map((item, idx) => {\r\n                return(\r\n                  <span key={idx}></span>\r\n                  /*<img \r\n                    key={idx} \r\n                    src={`${item.selectedItem}.png`} \r\n                    width={item.scale*75} \r\n                    height={item.scale*75} \r\n                    style={{\r\n                      top:item.positionY, \r\n                      left:item.positionX,\r\n                      position: \"absolute\",\r\n                      zIndex: item.zIndex.toString()\r\n                    }}\r\n                    onClick={() => {console.log(`OPEN CONFIGS OF idx: ${idx}, obj: ${JSON.stringify(itemsInGrid[idx])}`)}}\r\n                  />*/\r\n                );\r\n              })}\r\n          </div>\r\n          \r\n        </div>\r\n        <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n        <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n      </ItemsContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { SessionContext } from './SessionContext';\r\n\r\nexport const SessionHooks = () => {\r\n  \r\n    const { session, setSession } = useContext(SessionContext);\r\n\r\n\r\n    const setSessionWithResponse = (loginResponse) => {\r\n        localStorage.setItem(\"session\", JSON.stringify({\r\n            user: loginResponse.user,\r\n            exp: loginResponse.exp,\r\n            jwt: loginResponse.jwt\r\n        }));\r\n        setSession({\r\n            user: loginResponse.user,\r\n            exp: loginResponse.exp,\r\n            jwt: loginResponse.jwt\r\n        });\r\n    }\r\n\r\n\r\n    const closeSession = () => {\r\n        localStorage.setItem(\"session\", null);\r\n        setSession({\r\n            user: undefined,\r\n            exp: undefined,\r\n            jwt: undefined\r\n        });\r\n    }\r\n\r\n    const getUser = () => {\r\n        return session.user ? session.user : undefined;\r\n    }\r\n\r\n    const getJWT = () => {\r\n        return session.jwt ? session.jwt : undefined;\r\n    }\r\n\r\n    return({\r\n        setSessionWithResponse,\r\n        getUser,\r\n        getJWT,\r\n        closeSession\r\n    })\r\n}\r\n","\r\nconst { createHash } = require('crypto');\r\n\r\nexport const hash = (string) => {\r\n  return createHash('sha256').update(string).digest('hex');\r\n}","import React from \"react\";\r\nimport { API_URL } from \"../Constants/Constants\";\r\nimport { SessionHooks } from \"../Sessions/SessionHooks\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  CircularProgress,\r\n  DialogActions\r\n} from \"@mui/material\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { VALID_REGEX_EMAIL } from \"../Constants/Constants\";\r\nimport { hash } from \"../Resources/Hasher\";\r\n\r\nexport const LoginForm = ({ setLogin, setOpenDialog }) => {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const { setSessionWithResponse } = SessionHooks();\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [loginFeedback, setLoginFeedback] = React.useState(\"\");\r\n\r\n  const postLogin = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const APIResponse = await fetch(`${API_URL}/users/login`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: hash(password),\r\n        }),\r\n      });\r\n      if (APIResponse.status !== 200) {\r\n        const json = await APIResponse.json();\r\n        setIsLoading(false);\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg =\r\n          APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      setIsLoading(false);\r\n      return APIResponse.json();\r\n    } catch (e) {\r\n      setIsLoading(false);\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  const validateFields = () => {\r\n    const errors = [];\r\n    if (password === \"\") {\r\n      errors.push(\"El campo contraseña se encuentra vacío.\");\r\n    }\r\n    if (email === \"\") {\r\n      errors.push(\"El campo email se encuentra vacío\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)) {\r\n      errors.push(\"El email establecido es inválido.\");\r\n    }\r\n    if (errors.length > 0) {\r\n      setError(errors);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const submitLogin = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateFields()) {\r\n      return;\r\n    }\r\n    try {\r\n      const loginResponse = await postLogin();\r\n      setSessionWithResponse(loginResponse);\r\n      setLoginFeedback(\"Sesión iniciada correctamente.\");\r\n    } catch (e) {\r\n      setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  };\r\n\r\n  const postLoginGoogle = async (token) => {\r\n    const APIResponse = await fetch(`${API_URL}/users/login_google`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        token: token,\r\n      }),\r\n    });\r\n    if (APIResponse.status !== 200) {\r\n      const json = await APIResponse.json();\r\n      const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n      let error_msg =\r\n        APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n      throw new Error(error_msg);\r\n    }\r\n    return APIResponse.json();\r\n  };\r\n\r\n  const submitGoogleLogin = async (token) => {\r\n    try {\r\n      const responseAPI = await postLoginGoogle(token);\r\n      setSessionWithResponse(responseAPI);\r\n      setLoginFeedback(\"Sesión iniciada correctamente.\");\r\n    } catch (e) {\r\n      setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  };\r\n\r\n\r\n  const handleCloseDialog = () => {\r\n    setLoginFeedback(\"\");\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog onClose={handleCloseDialog} open={loginFeedback !== \"\"}>\r\n        <DialogTitle>\r\n          Inicio de sesión\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {loginFeedback}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} autoFocus>\r\n            Aceptar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <form onSubmit={submitLogin}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          {error && (\r\n            <Alert\r\n              severity=\"error\"\r\n              style={{ textAlign: \"justify\" }}\r\n              onClose={() => setError(undefined)}\r\n            >\r\n              Han ocurrido los siguientes errores:\r\n              <ul>\r\n                {error && error.map((listerror, idx) => (\r\n                  <li key={idx}>{listerror}</li>\r\n                ))}\r\n              </ul>\r\n            </Alert>\r\n          )}\r\n          <h1 sx={{position:\"absolute\",top:0}}>Iniciar Sesión</h1>\r\n          <div style={{ marginTop: 20 }}>\r\n            <TextField\r\n              style={{ width: \"80%\" }}\r\n              type=\"text\"\r\n              onChange={(event) => setEmail(event.target.value)}\r\n              value={email}\r\n              name=\"email\"\r\n              label=\"E-Mail\"\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            <TextField\r\n              style={{ width: \"80%\" }}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              value={password}\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            {\r\n              isLoading ?\r\n               <CircularProgress/>\r\n              :  \r\n              <Button variant=\"contained\" type=\"submit\">\r\n                Iniciar Sesión\r\n              </Button>\r\n            }\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            <p\r\n              className={\"p_button\"}\r\n              onClick={() => {\r\n                setLogin(false);\r\n              }}\r\n            >\r\n              ¿No posees una cuenta? Registrate aqu&iacute;...\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: 20,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              textAlign: \"center\",\r\n              alignContent: \"center\",\r\n            }}\r\n          >\r\n            <GoogleLogin\r\n              onSuccess={(credentialResponse) => {\r\n                const OAuthToken = credentialResponse.credential;\r\n                submitGoogleLogin(OAuthToken);\r\n              }}\r\n              onError={() => {\r\n                setError([\"El inicio de sesión con Google ha fallado.\"]);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { API_URL } from \"../Constants/Constants\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  CircularProgress,\r\n  DialogActions\r\n} from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { VALID_REGEX_EMAIL } from \"../Constants/Constants\";\r\nimport { hash } from \"../Resources/Hasher\";\r\n\r\nexport const SignUpForm = ({ setLogin, setOpenDialog }) => {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState(\"\");\r\n  const [nameToShow, setNameToShow] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const [signupFeedback, setSignupFeedback] = React.useState(\"\");\r\n  const [loading, setLoading] = React.useState(false);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const validateFields = () => {\r\n    const errorArray = [];\r\n    if (\r\n      email === \"\" ||\r\n      password === \"\" ||\r\n      passwordConfirmation === \"\" ||\r\n      nameToShow === \"\"\r\n    ) {\r\n      errorArray.push(\"Aún existen campos sin completar.\");\r\n    }\r\n    if (password !== passwordConfirmation) {\r\n      errorArray.push(\"Las contraseñas establecidas no coinciden.\");\r\n    }\r\n    if (password.length < 8) {\r\n      errorArray.push(\r\n        \"La contraseña debe tener una longitud mínima de 8 caracteres.\"\r\n      );\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)) {\r\n      errorArray.push(\"El email establecido es inválido.\");\r\n    }\r\n    if (errorArray.length > 0) {\r\n      setError(errorArray);\r\n      return false;\r\n    } else {\r\n      setError(undefined);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const postSignUp = async () => {\r\n    setLoading(true);\r\n    const fetchUrl = `${API_URL}/users/register`;\r\n    try {\r\n      const APIResponse = await fetch(fetchUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: hash(password),\r\n          name_to_show: nameToShow,\r\n        }),\r\n      });\r\n      if (APIResponse.status !== 200) {\r\n        const json = await APIResponse.json();\r\n        setLoading(false);\r\n        let error_msg = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        setError([error_msg]);\r\n        throw new Error(error_msg);\r\n      }\r\n      setLoading(false);\r\n      return APIResponse.json();\r\n    } catch (e) {\r\n      setError([\"\"+e])\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  const submitSignUp = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateFields()) {\r\n      return;\r\n    }\r\n    // eslint-disable-next-line\r\n    const res = await postSignUp();\r\n    setSignupFeedback(\"Su usuario ha sido creado exitosamente.\");\r\n  };\r\n\r\n\r\n  const handleCloseDialog = () => {\r\n    setSignupFeedback(\"\");\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog onClose={handleCloseDialog} open={signupFeedback !== \"\"}>\r\n        <DialogTitle>\r\n          Creación de usuario\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {signupFeedback}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} autoFocus>\r\n            Aceptar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <form onSubmit={submitSignUp}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n          }}\r\n        >\r\n          {error && (\r\n            <Alert\r\n              severity=\"error\"\r\n              style={{ textAlign: \"justify\" }}\r\n              onClose={() => setError(undefined)}\r\n            >\r\n              Han ocurrido los siguientes errores:\r\n              <ul>\r\n                {error.map((listerror, idx) => (\r\n                  <li key={idx}>{listerror}</li>\r\n                ))}\r\n              </ul>\r\n            </Alert>\r\n          )}\r\n          <h1 sx={{ position: \"absolute\", top: 0 }}>Crea tu cuenta</h1>\r\n          <div style={{ marginTop: 20 }}>\r\n            <TextField\r\n              style={{ width: \"80%\" }}\r\n              type=\"text\"\r\n              onChange={(event) => setEmail(event.target.value)}\r\n              value={email}\r\n              name=\"email\"\r\n              label=\"E-Mail\"\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            <TextField\r\n              style={{ width: \"80%\" }}\r\n              type=\"text\"\r\n              onChange={(event) => setNameToShow(event.target.value)}\r\n              value={nameToShow}\r\n              name=\"username\"\r\n              label=\"Nombre para mostrar\"\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            <TextField\r\n              style={{ width: \"80%\" }}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              value={password}\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              InputProps={{\r\n                // <-- This is where the toggle button is added.\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            <TextField\r\n              style={{ width: \"80%\" }}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              onChange={(event) => setPasswordConfirmation(event.target.value)}\r\n              value={passwordConfirmation}\r\n              name=\"passwordConfirmation\"\r\n              label=\"Repetir Contraseña\"\r\n            />\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            {\r\n              loading ? <CircularProgress/> :\r\n              <Button variant=\"contained\" type=\"submit\">\r\n                CREAR CUENTA\r\n              </Button>\r\n            }\r\n          </div>\r\n          <div style={{ marginTop: 20 }}>\r\n            <p\r\n              className={\"p_button\"}\r\n              onClick={() => {\r\n                setLogin(true);\r\n              }}\r\n            >\r\n              ¿Ya poses una cuenta? Inicia sesión...\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { SessionContext } from \"./SessionContext\";\r\nimport React, { useState } from 'react'\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nexport const SessionProvider = ( {childElement} ) => {\r\n  \r\n    const [session, setSession] = useState({\r\n        user: undefined,\r\n        exp: undefined,\r\n        jwt: undefined\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        const localSessionStr = localStorage.getItem(\"session\");\r\n        if (localSessionStr){\r\n            const localSession = JSON.parse(localSessionStr);\r\n            if (localSession && new Date(localSession.exp) > new Date()){\r\n                setSession({\r\n                    user: localSession.user,\r\n                    exp: localSession.exp,\r\n                    jwt: localSession.jwt\r\n                });\r\n            }else{\r\n                setSession({\r\n                    user: undefined,\r\n                    exp: undefined,\r\n                    jwt: undefined\r\n                });\r\n                localStorage.setItem(\"session\", null);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"18785041157-s9ga39r0i6up45radtj3soo6je1pneon.apps.googleusercontent.com\">\r\n            <SessionContext.Provider value={{session, setSession}}>\r\n                {childElement}\r\n            </SessionContext.Provider>\r\n        </GoogleOAuthProvider>\r\n    )\r\n}\r\n","import { CardContent, CardHeader, CardMedia, Grid, Typography, Button, Box } from '@mui/material'\r\nimport React from 'react'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport AccessTimeFilledIcon from '@mui/icons-material/AccessTimeFilled';\r\nimport SportsScoreIcon from '@mui/icons-material/SportsScore';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CarRentalIcon from '@mui/icons-material/CarRental';\r\nimport { SessionContext } from '../../Sessions/SessionContext';\r\nimport { API_URL } from '../../Constants/Constants';\r\nimport \"../../styles.css\";\r\n\r\nexport const LevelCard = ({level}) => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const {session} = React.useContext(SessionContext);\r\n  const [isCompleted, setIsCompleted] = React.useState(false);\r\n  const [completedData, setCompletedData] = React.useState({\r\n    score: undefined,\r\n    time: undefined\r\n  });\r\n\r\n  const seleccionarNivel = () => {\r\n    navigate(\"/scene\", { state: { jsonLevel: level } });\r\n  }\r\n\r\n\r\n  const getTimeInMSAsString = (timeInMs) => {\r\n    const timeInSeconds = parseInt(timeInMs/1000);\r\n    const seconds = timeInSeconds%60;\r\n    const minutes = parseInt((timeInSeconds-seconds)/60);\r\n    const minutesUpToSixty = minutes%60;\r\n    const hours = parseInt((minutes-minutesUpToSixty)/24);\r\n    return `${hours.toString().padStart(2,'0')}:${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}`;\r\n}\r\n\r\n\r\n  const fetchUserProgress = async () => {\r\n    try{\r\n      const APIResponse = await fetch(\r\n        `${API_URL}/user_progress/?level_id=${level.id}&user_id=${session.user.id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        }\r\n      );\r\n      const json = await APIResponse.json();\r\n      if (APIResponse.status !== 200){\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      setIsCompleted(json.completed);\r\n      setCompletedData({\r\n        score: json.best_score,\r\n        time: json.best_time ? getTimeInMSAsString(json.best_time) : json.best_time\r\n      })\r\n    }catch(e){\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (session && session.user){\r\n      fetchUserProgress();\r\n    }else{\r\n      setIsCompleted(false);\r\n      setCompletedData({\r\n        score: undefined,\r\n        time: undefined\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  return (\r\n    <CardContent style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", flexDirection:\"column\", width:\"100%\"}}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        width={400}\r\n        height={200}\r\n        image={`/levels/images/${level.image}`}\r\n        title={level.title}\r\n        style={{ borderRadius:20}}\r\n        sx={{ objectFit: \"contain\", justifyContent: \"center\", display: \"flex\", maxHeight:\"100%\", maxWidth:\"100%\"}}\r\n      />\r\n      <Grid container spacing={2} rowSpacing={2} justifyContent={\"space-around\"} alignItems=\"center\" alignContent=\"center\" className={\"card_text_wrapper\"}>\r\n        <Grid item xs={12} sm={9} style={{padding:0}}>\r\n          <CardHeader \r\n            title={level.title}\r\n            subheader={level.description}\r\n            style={{ padding:0}}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Box>\r\n            {isCompleted ?\r\n              <Typography style={{color:\"green\", fontWeight:\"bold\"}}>\r\n                <CheckCircleIcon style={{color:\"green\", verticalAlign:\"middle\", marginRight:10}}/>\r\n                COMPLETADO\r\n              </Typography>\r\n            :\r\n              <Typography style={{color:\"red\", fontWeight:\"bold\"}}>\r\n                <CancelIcon style={{color:'red', verticalAlign:\"middle\", marginRight:10}}/>\r\n                PENDIENTE\r\n              </Typography>\r\n            }\r\n          </Box>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} md={4}>\r\n          {isCompleted && <>\r\n            <Typography>\r\n              <AccessTimeFilledIcon style={{verticalAlign:\"middle\", marginRight:10}}/>\r\n              <strong>Mejor tiempo:</strong> \r\n            </Typography>\r\n            <Typography style={{marginLeft:35}}>\r\n              {completedData.time}\r\n            </Typography>\r\n          </>}\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          {isCompleted && <>\r\n            <Typography>\r\n              <SportsScoreIcon style={{verticalAlign:\"middle\", marginRight:10}}/>\r\n              <strong>Mejor puntaje:</strong>\r\n            </Typography>\r\n            <Typography style={{marginLeft:35}}>\r\n              {completedData.score}\r\n            </Typography>\r\n          </>}\r\n        </Grid>\r\n        <Grid item xs={12} md={4} style={{textAlign:\"center\"}}  >\r\n          <Button startIcon={<CarRentalIcon />} onClick={seleccionarNivel} className={\"accept_button\"}>\r\n            PRACTICAR\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Card, CardActions, Grid } from '@mui/material';\r\nimport { LevelCard } from './CardLevel/LevelCardContent';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport {API_URL} from '../Constants/Constants'\r\n\r\nexport const LevelsSelectionGrid = () => {\r\n\r\n  const [levels, setLevels] = React.useState([]);\r\n  \r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"VR\") !== null){\r\n        localStorage.removeItem(\"VR\");\r\n        window.location.reload();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const fetchLevels = async () => {\r\n    try{\r\n      const levelsJSONs = [];\r\n      const APIResponse = await fetch(\r\n        `${API_URL}/levels/`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n        }\r\n      );\r\n      const json = await APIResponse.json();\r\n      json.forEach(level => {\r\n        level.level_json = JSON.parse(level.level_json);\r\n        level.level_json.id = level.id;\r\n        levelsJSONs.push(level.level_json);\r\n      });\r\n      if (APIResponse.status !== 200){\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      setLevels(levelsJSONs);\r\n    }catch(e){\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetchLevels();\r\n  }, []);\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <Grid container justifyContent={\"center\"} alignItems={\"center\"} alignContent={\"center\"}>\r\n        <Grid item xs={12} md={9} lg={6} alignContent={\"center\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n            <Carousel\r\n                sx={{width:\"100%\", padding:\"20px\"}}\r\n                autoPlay={false}\r\n                navButtonsAlwaysVisible={true}\r\n                indicators={false}\r\n                navButtonsProps={{\r\n                    style: {\"opacity\":\"0.4\"}\r\n                }}\r\n                swipe={true}\r\n                className={\"levelsCarousel\"}\r\n                animation={'slide'}\r\n            >\r\n                {levels.map(level => \r\n                    <Card key={level.title} sx={{height:500, width:\"90%\", margin:\"auto\", background:\"transparent\", boxShadow: 0}}>\r\n                        <CardActions>\r\n                            <LevelCard level={level}/>\r\n                        </CardActions>\r\n                    </Card>\r\n                )}\r\n            </Carousel>\r\n        </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport {SignUpForm} from \"./SignUpForm\";\r\nimport { Dialog, DialogContent} from \"@mui/material\";\r\n\r\nexport const LoginDialog = ( {openDialog, setOpenDialog} ) => {\r\n\r\n  const [login, setLogin] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  return (\r\n    <Dialog open={openDialog} onClose={handleClose} maxWidth='md' fullWidth={true}>\r\n      <DialogContent style={{backgroundColor:'#68B9D2'}} sx={{minHeight:\"75vh\", display:\"flex\", alignContent:\"center\", justifyContent:\"center\", alignItems:\"center\"}}>\r\n        {\r\n          login ?\r\n            <LoginForm setLogin={setLogin} setOpenDialog={setOpenDialog}/>\r\n          :\r\n            <SignUpForm setLogin={setLogin} setOpenDialog={setOpenDialog}/>\r\n        }\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { LoginDialog } from './LoginDialog';\r\nimport { SessionContext } from '../Sessions/SessionContext';\r\nimport { SessionHooks } from '../Sessions/SessionHooks';\r\nimport { Button } from '@mui/material';\r\n\r\nexport const LoginButton = () => {\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const [username, setUsername] = React.useState(null);\r\n  const { session } = React.useContext(SessionContext);\r\n  const { closeSession } = SessionHooks();\r\n\r\n  React.useEffect(() => {\r\n    if ( session && session[\"user\"]){\r\n      setUsername(session[\"user\"][\"name_to_show\"]);\r\n    }else{\r\n      setUsername(null);\r\n    }\r\n  }, [session]);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        username\r\n         ?\r\n          <>\r\n            <p>\r\n              <strong>¡Bienvenido, {username}!</strong>          \r\n            </p>\r\n            <Button onClick={closeSession} color=\"error\" variant=\"contained\">\r\n              Cerrar sesi&oacute;n...\r\n            </Button>\r\n          </>\r\n        :\r\n          <div>\r\n            <p className={\"p_button\"} onClick={() => setOpenDialog(true)}>\r\n              Inicia sesi&oacute;n y guarda tu progreso...\r\n            </p>\r\n          </div>\r\n      }\r\n      <LoginDialog openDialog={openDialog} setOpenDialog={setOpenDialog}/>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Button, Grid } from '@mui/material';\r\nimport { LevelsSelectionGrid } from './Components/LevelsSelectionGrid';\r\nimport { LoginButton } from './Components/LoginButton';\r\nimport \"./styles.css\";\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const LevelsList = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className='background'>\r\n      <Grid container spacing={2} rowSpacing={2} sx={{marginTop:0}}>\r\n        <Grid item xs={12} style={{textAlign:\"center\"}}>\r\n            <h1 style={{fontSize:64}}>Seleccionar Nivel</h1>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2} rowSpacing={2} justifyContent={\"center\"}>\r\n        <Grid item xs={12} md={4} className={\"back_button\"}>\r\n          <Button onClick={() => {navigate(\"/\");}} startIcon={<ArrowBackIosNewIcon />} className={\"accept_button\"}>\r\n            ATR&Aacute;S\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} md={8} style={{textAlign:\"center\"}}>\r\n          <LoginButton/>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2} rowSpacing={2}>\r\n        <Grid item xs={12}>\r\n            <LevelsSelectionGrid />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n","import ThreeScene from \"./Scene/ThreeScene\";\r\nimport { MainMenu } from \"./Menus/MainMenu\";\r\nimport { LevelEditor } from \"./Menus/LevelEditor\";\r\nimport {\r\n  HashRouter as Router,\r\n  Routes as Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { LoginForm } from \"./Menus/Components/LoginForm\";\r\nimport { SignUpForm } from \"./Menus/Components/SignUpForm\";\r\nimport { SessionProvider } from \"./Menus/Sessions/SessionProvider\";\r\nimport { LevelsList } from \"./Menus/LevelsList\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <SessionProvider\r\n      childElement={\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/levels\" element={<LevelsList/>} />\r\n            <Route exact path=\"/scene\" element={<ThreeScene/>} />\r\n            <Route exact path=\"/\" element={<MainMenu />} />\r\n            <Route exact path=\"/level-editor\" element={<LevelEditor />} />\r\n            <Route exact path=\"/login\" element={<LoginForm />} />\r\n            <Route exact path=\"/signup\" element={<SignUpForm />} />\r\n          </Switch>\r\n        </Router>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n\r\n"],"sourceRoot":""}