{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","addons/Reflector.js","3DModels/Models.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","3DModels/StraightStreet.js","Levels/LevelsFactory.js","addons/VRbutton.js","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/LevelEditorContext/ItemsContext.jsx","Menus/Components/ItemsDrawer.jsx","Menus/Components/InputsGrid.jsx","Menus/Resources/Street/AbstractStreet.js","Menus/Resources/Street/Curve.js","Menus/Resources/Street/StraightStreet.js","Menus/Resources/Street/TStreet.js","Menus/Resources/Street/StraightStreetLinker.js","Menus/Resources/StreetFactory.js","Menus/Resources/Street/Intersection.js","Menus/Resources/LevelEditor.js","Menus/Components/LevelGrid.jsx","Menus/LevelEditor.jsx","Menus/Constants/Constants.js","Menus/Sessions/SessionContext.jsx","Menus/Resources/Hasher.js","Menus/Components/LoginForm.jsx","Menus/Sessions/SessionHooks.jsx","Menus/Components/SignUpForm.jsx","Menus/Sessions/SessionProvider.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","constructor","car","this","handleAccelerate","valueClutch","valueAccelerator","accelerate","handleBrake","valueBrake","brake","changeShift","valueShift","turnDirection","wheelAxesValue","turnOnCar","updateCar","update","changeShiftBox","mode","Observer","observedState","newState","Camera","renderer","super","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","handleResize","aspect","updateProjectionMatrix","setPositionRelativeToObject","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","rotationQuat","x","y","z","w","normalize","quaternion","getCameraInstance","addContainerToScene","scene","CarOffsetCamera","positionCamera","cameraOffsetRotated","positionToLookAt","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","async","loadAsync","threeDObject","objectName","scale","modelVariable","loadFBX","e","loadGLTF","name","getModel","animate","Reflector","geometry","options","arguments","length","undefined","isReflector","type","scope","color","textureWidth","textureHeight","clipBias","shader","ReflectorShader","multisample","reflectorPlane","normal","reflectorWorldPosition","cameraWorldPosition","rotationMatrix","lookAtPosition","clipPlane","view","target","q","textureMatrix","virtualCamera","renderTarget","samples","material","uniforms","clone","fragmentShader","vertexShader","value","texture","onBeforeRender","setFromMatrixPosition","matrixWorld","extractRotation","applyMatrix4","subVectors","dot","reflect","negate","up","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","constant","sign","elements","multiplyScalar","encoding","outputEncoding","visible","currentRenderTarget","getRenderTarget","currentXrEnabled","xr","enabled","currentShadowAutoUpdate","shadowMap","autoUpdate","setRenderTarget","state","buffers","depth","setMask","autoClear","clear","render","viewport","dispose","tDiffuse","ModelsSingleton","carModel","building_1","building_2","building_3","building_4","pathToTextureRcvd","Models","static","loadModels","Error","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","generateRetrovisor","plane","retrovisor","rotateX","rotateY","generateLeftMirror","leftMirrorGeometry","leftMirror","container","Object3D","generateRightMirror","rightMirrorGeometry","rightMirror","generateMirrors","models","getInstance","moveCar","addPhysicsView","physicsShape","Geometry","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","watchPhysicsColliders","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","children","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorTwo","rotationYVectorOne","default","require","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","i","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","checkEvents","doActionByMapping","doActionsPedals","axes","doActionsWheel","doActionsDPad","doActionsButtons","buttons","pressed","doActionsShifter","LogitechG29ControllerSingleton","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","doActionsAxes","axe","doActionHotKeys","doActionsTriggers","XboxControllerSingleton","Observable","observers","attachObserver","observer","removeObserver","index","indexOf","splice","notifyObservers","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","width","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","updatePhysics","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","getRigidBody","setEngineForce","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringRotation","setSteeringValue","getVelocity","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","changeValueInRPMCurve","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","TurnedOnEngine","CarEngine","engineState","turnOn","clutchIsPressed","handleEngineShutdown","shiftBox","shutDownEngine","isInConditionToAccelerate","engineCanApplyForce","rpmReturn","changeRPM","RPMModification","log","getCurrentRPM","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","isValidShift","shift","calculateNormalFactorRPM","newShift","oldVelocity","getValueForNewRPM","normalFactorRPM","XValue","getEngineForce","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactor","getCurrentShift","ManualBox","SemiAutomaticBox","Car","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","buildAmmoPhysics","turnOnRightLight","turnOnLeftLight","positionAndRotation","getDataToAnimate","getLastRotation","getSpeed","GeneralPhysics","generateShape","setMargin","getMotionState","getWorldTransform","setLinearVelocity","velocityVector","velVectorBT","applyForce","BoxPhysics","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","load","map","materialBox","geometryPlane","box","cone","CylinderPhysics","btCylinderShape","StraightStreet","pathToNormalMap","SIZE","SIDEWALK_HEIGHT","createSidewalkMesh","wrapS","wrapT","repeat","normalTexture","materialSidewalk","normalMap","geometrySidewalk","createStreetMesh","iter","model3D","loadBuildingBlock","parseInt","random","LONG","updateMatrix","matrixAutoUpdate","secondModel3D","baseStreet","leftSidewalk","rightSidewalk","createBuildings","LevelFactory","physicsToUpdate","objectsToAnimate","forEach","phys","object","height","pathTexture","normalMapPath","floorMaterial","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","ramp","addToScene","conePhysics","street","streetPhysics","leftSidewalkPhysics","rightSidewalkPhysics","segmentsQuantity","buildStreetPhysics","createRectangle","createCone","createStreet","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","opacity","outline","zIndex","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","sessionInit","optionalFeatures","requestSession","setItem","end","showEnterVR","xrSessionIsGranted","click","catch","exception","console","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","ThreeScene","Component","gotAnyEvent","stats","Stats","alpha","powerPreference","antialias","setSize","setClearColor","showPanel","body","appendChild","dom","clock","createAmmo","ambientLight","sunLight","level","createLevelCustom","animation","bind","handleWindowResize","generateEvents","setPixelRatio","devicePixelRatio","setFramebufferScaleFactor","mount","createButton","setAnimationLoop","removeInstance","event","numCamera","key","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","begin","deltaTime","getDelta","stepSimulation","setState","info","calls","_jsxs","_jsx","top","right","fontWeight","ref","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","MainMenu","navigate","useNavigate","_Fragment","className","fontSize","onClick","ConfigDrawer","_ref","openConfigs","handleDrawerClose","open","setOpen","React","useState","useEffect","DrawerHeader","styled","_ref2","theme","alignItems","spacing","mixins","toolbar","justifyContent","Grid","Drawer","sx","flexShrink","boxSizing","variant","anchor","ChevronRightIcon","paddingRight","Divider","ItemsContext","createContext","allUnselected","ItemsDrawer","openItems","setLastSelectedItem","lastSelectedItem","useContext","itemSelected","setItemSelected","paddingLeft","ChevronLeftIcon","flexDirection","Object","entries","_ref3","nameItem","isSelected","alt","src","item","dictSelection","selectedItem","positionX","positionY","handleSelection","InputsGrid","setGridDimensions","gridDimensions","InputWidth","setInputWidth","InputHeight","setInputHeight","direction","marginLeft","xs","step","onChange","replaceAll","Button","onSubmit","STANDARD_BOX_LONG","AbstractStreet","ninePerNineGrid","rowIndex","columnIndex","rightFilled","filled","topFilled","botFilled","leftFilled","determineStreetRotation","long","cell","rowCount","columnCount","sumValueForCell","isStraight","getAsJSON","getPositionAsRowAndColumn","getPositionX","getPositionY","getLongX","getLongY","POSSIBLE_ROTATIONS","StraightStreetLinker","arrayOfStreets","sections","segregateSections","sectionsAsJSON","linkSections","rows","cols","sectionsArray","streetRow","streetCol","isHorizontal","generateArraySubsections","array","finalArray","sectionsJSON","jsonForStreet","reduce","acum","elem","getSectionsAsJSON","TYPES_OF_STREETS","calculateNeighboursFilled","bot","dict","StreetFactory","levelGrid","isInfiniteLevel","getNinePerNineGrid","getNinePerNineGridInfinite","getNinePerNineGridFinite","constructStreets","straightStreetsArray","curvedStreetsArray","j","streetObject","defineTypeOfStreet","conjunctedStraightStreets","linkStraightStreets","indexRow","indexColumn","matrix","rowArray","realRow","realColumn","celda_vacia","row","column","typeResult","typeDefined","isValidNinePerNineGrid","getCountSidesPainted","aux","validateGrid","isInfinite","validateGridInfinite","valid","wrongCells","validateGridNotInfinite","COLORS","LevelGrid","setLevelGrid","setClick","rightClick","setRightClick","finalGrid","currentRow","newCell","preventDefault","arrayContains","insiderArray","equals","exc","marginTop","marginRight","onMouseDown","idx_row","idx_col","backgroundColor","onMouseMove","onEnterHoverWithClickCell","col","levelGridCopy","div_color","onMouseUp","onClickCell","btn_click","onSubmitLevel","result","vec_aux","exportObj","exportName","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","setAttribute","remove","downloadObjectAsJson","generateJSONFromGrid","MemoryIcon","LevelEditor","setOpenItems","setOpenConfigs","itemsInGrid","setItemsInGrid","currentItems","Provider","IconButton","margin","AddIcon","SettingsIcon","idx","API_URL","VALID_REGEX_EMAIL","SessionContext","createHash","hash","string","digest","LoginForm","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","setSessionWithResponse","SessionHooks","loginResponse","user","jwt","getUser","getJWT","submitGoogleLogin","responseAPI","APIResponse","fetch","method","headers","token","status","json","endMSG","detail","msg","error_msg","statusText","postLoginGoogle","toString","validateFields","errors","match","postLogin","alignContent","maxWidth","Alert","severity","onClose","listerror","TextField","label","InputProps","endAdornment","InputAdornment","handleClickShowPassword","Visibility","VisibilityOff","Link","to","GoogleLogin","onSuccess","credentialResponse","OAuthToken","credential","onError","SignUpForm","passwordConfirmation","setPasswordConfirmation","nameToShow","setNameToShow","errorArray","res","fetchUrl","postSignUp","SessionProvider","childElement","GoogleOAuthProvider","clientId","App","title","Router","Switch","Route","exact","path","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.aa4fccee.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.4;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 85, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") === \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                const rotationQuat = new THREE.Quaternion(this.observedState.rotation.x, this.observedState.rotation.y, this.observedState.rotation.z, this.observedState.rotation.w).normalize();\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), -5*Math.PI/180);\r\n                this.group.quaternion.copy(rotationQuat);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    \r\n    addContainerToScene(scene){\r\n        scene.add(this.group);\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 100 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import * as THREE from \"three\";\r\n\r\nexport class Reflector extends THREE.Mesh {\r\n  constructor(geometry, options = {}) {\r\n    super(geometry);\r\n    this.isReflector = true;\r\n    this.type = \"Reflector\";\r\n    this.camera = new THREE.PerspectiveCamera(50, 1, 1, 5);\r\n    const scope = this;\r\n    const color =\r\n      options.color !== undefined\r\n        ? new THREE.Color(options.color)\r\n        : new THREE.Color(0x7f7f7f);\r\n    const textureWidth = options.textureWidth || 512;\r\n    const textureHeight = options.textureHeight || 512;\r\n    const clipBias = options.clipBias || 0;\r\n    const shader = options.shader || Reflector.ReflectorShader;\r\n    const multisample =\r\n      options.multisample !== undefined ? options.multisample : 4; //\r\n\r\n    const reflectorPlane = new THREE.Plane();\r\n    const normal = new THREE.Vector3();\r\n    const reflectorWorldPosition = new THREE.Vector3();\r\n    const cameraWorldPosition = new THREE.Vector3();\r\n    const rotationMatrix = new THREE.Matrix4();\r\n    const lookAtPosition = new THREE.Vector3(0, 0, -1);\r\n    const clipPlane = new THREE.Vector4();\r\n    const view = new THREE.Vector3();\r\n    const target = new THREE.Vector3();\r\n    const q = new THREE.Vector4();\r\n    const textureMatrix = new THREE.Matrix4();\r\n    const virtualCamera = this.camera;\r\n    const renderTarget = new THREE.WebGLRenderTarget(\r\n      textureWidth,\r\n      textureHeight,\r\n      {\r\n        samples: multisample,\r\n      }\r\n    );\r\n    const material = new THREE.ShaderMaterial({\r\n      uniforms: THREE.UniformsUtils.clone(shader.uniforms),\r\n      fragmentShader: shader.fragmentShader,\r\n      vertexShader: shader.vertexShader,\r\n    });\r\n    material.uniforms[\"tDiffuse\"].value = renderTarget.texture;\r\n    material.uniforms[\"color\"].value = color;\r\n    material.uniforms[\"textureMatrix\"].value = textureMatrix;\r\n    this.material = material;\r\n\r\n    this.onBeforeRender = function (renderer, scene, camera) {\r\n      reflectorWorldPosition.setFromMatrixPosition(scope.matrixWorld);\r\n      cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\r\n      rotationMatrix.extractRotation(scope.matrixWorld);\r\n      normal.set(0, 0, 1);\r\n      normal.applyMatrix4(rotationMatrix);\r\n      view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\r\n\r\n      if (view.dot(normal) > 0) return;\r\n      view.reflect(normal).negate();\r\n      view.add(reflectorWorldPosition);\r\n      rotationMatrix.extractRotation(camera.matrixWorld);\r\n      lookAtPosition.set(0, 0, -1);\r\n      lookAtPosition.applyMatrix4(rotationMatrix);\r\n      lookAtPosition.add(cameraWorldPosition);\r\n      target.subVectors(reflectorWorldPosition, lookAtPosition);\r\n      target.reflect(normal).negate();\r\n      target.add(reflectorWorldPosition);\r\n      virtualCamera.position.copy(view);\r\n      virtualCamera.up.set(0, 1, 0);\r\n      virtualCamera.up.applyMatrix4(rotationMatrix);\r\n      virtualCamera.up.reflect(normal);\r\n      virtualCamera.lookAt(target);\r\n      virtualCamera.far = camera.far; // Used in WebGLBackground\r\n\r\n      virtualCamera.updateMatrixWorld();\r\n      virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\r\n\r\n      textureMatrix.set(\r\n        0.5,\r\n        0.0,\r\n        0.0,\r\n        0.5,\r\n        0.0,\r\n        0.5,\r\n        0.0,\r\n        0.5,\r\n        0.0,\r\n        0.0,\r\n        0.5,\r\n        0.5,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        1.0\r\n      );\r\n      textureMatrix.multiply(virtualCamera.projectionMatrix);\r\n      textureMatrix.multiply(virtualCamera.matrixWorldInverse);\r\n      textureMatrix.multiply(scope.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\r\n      // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\r\n\r\n      reflectorPlane.setFromNormalAndCoplanarPoint(\r\n        normal,\r\n        reflectorWorldPosition\r\n      );\r\n      reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\r\n      clipPlane.set(\r\n        reflectorPlane.normal.x,\r\n        reflectorPlane.normal.y,\r\n        reflectorPlane.normal.z,\r\n        reflectorPlane.constant\r\n      );\r\n      const projectionMatrix = virtualCamera.projectionMatrix;\r\n      q.x =\r\n        (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) /\r\n        projectionMatrix.elements[0];\r\n      q.y =\r\n        (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) /\r\n        projectionMatrix.elements[5];\r\n      q.z = -1.0;\r\n      q.w =\r\n        (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\r\n\r\n      clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\r\n\r\n      projectionMatrix.elements[2] = clipPlane.x;\r\n      projectionMatrix.elements[6] = clipPlane.y;\r\n      projectionMatrix.elements[10] = clipPlane.z + 1.0 - clipBias;\r\n      projectionMatrix.elements[14] = clipPlane.w; // Render\r\n\r\n      renderTarget.texture.encoding = renderer.outputEncoding;\r\n      scope.visible = false;\r\n      const currentRenderTarget = renderer.getRenderTarget();\r\n      const currentXrEnabled = renderer.xr.enabled;\r\n      const currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\r\n      renderer.xr.enabled = false; // Avoid camera modification\r\n\r\n      renderer.shadowMap.autoUpdate = false; // Avoid re-computing shadows\r\n\r\n      renderer.setRenderTarget(renderTarget);\r\n      renderer.state.buffers.depth.setMask(true); // make sure the depth buffer is writable so it can be properly cleared, see #18897\r\n\r\n      if (renderer.autoClear === false) renderer.clear();\r\n      renderer.render(scene, virtualCamera);\r\n      renderer.xr.enabled = currentXrEnabled;\r\n      renderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\r\n      renderer.setRenderTarget(currentRenderTarget); // Restore viewport\r\n\r\n      const viewport = camera.viewport;\r\n\r\n      if (viewport !== undefined) {\r\n        renderer.state.viewport(viewport);\r\n      }\r\n\r\n      scope.visible = true;\r\n    };\r\n\r\n    this.getRenderTarget = function () {\r\n      return renderTarget;\r\n    };\r\n\r\n    this.dispose = function () {\r\n      renderTarget.dispose();\r\n      scope.material.dispose();\r\n    };\r\n  }\r\n}\r\n\r\nReflector.ReflectorShader = {\r\n  uniforms: {\r\n    color: {\r\n      value: null,\r\n    },\r\n    tDiffuse: {\r\n      value: null,\r\n    },\r\n    textureMatrix: {\r\n      value: null,\r\n    },\r\n  },\r\n  vertexShader:\r\n    /* glsl */\r\n    `\r\n\t\tuniform mat4 textureMatrix;\r\n\t\tvarying vec4 vUv;\r\n\r\n\t\t#include <common>\r\n\t\t#include <logdepthbuf_pars_vertex>\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\r\n\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t\t#include <logdepthbuf_vertex>\r\n\r\n\t\t}`,\r\n  fragmentShader:\r\n    /* glsl */\r\n    `\r\n\t\tuniform vec3 color;\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tvarying vec4 vUv;\r\n\r\n\t\t#include <logdepthbuf_pars_fragment>\r\n\r\n\t\tfloat blendOverlay( float base, float blend ) {\r\n\r\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\r\n\r\n\t\t}\r\n\r\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\r\n\r\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#include <logdepthbuf_fragment>\r\n\r\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\r\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\r\n\r\n\t\t\t#include <encodings_fragment>\r\n\r\n\t\t}`,\r\n};\r\n","import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\n\r\nclass ModelsSingleton{\r\n\r\n    constructor(){\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.carModel = null;\r\n        this.building_1 = null;\r\n        this.building_2 = null;\r\n        this.building_3 = null;\r\n        this.building_4 = null;\r\n    }\r\n\r\n    async loadGLTF(pathToTextureRcvd){\r\n        let pathToTexture = pathToTextureRcvd;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result.scene;\r\n    }\r\n\r\n    async loadModels(){\r\n        //this.carModel = this.loadGLTF('res/models/source/AutoConInterior.glb');\r\n        this.carModel = this.loadGLTF('res/models/source/Mercedes.glb');\r\n        this.building_1 = this.loadGLTF('res/models/source/buildings/Building_1.glb');\r\n        this.building_2 = this.loadGLTF('res/models/source/buildings/Building_2.glb');\r\n        this.building_3 = this.loadGLTF('res/models/source/buildings/Building_3.glb');\r\n        this.building_4 = this.loadGLTF('res/models/source/buildings/Building_4.glb');\r\n        return \"OK\";\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default class Models{\r\n\r\n    static ModelsSingleton\r\n\r\n    static async getInstance(){\r\n        if (!Models.ModelsSingleton){\r\n            Models.ModelsSingleton = new ModelsSingleton();\r\n            let res = await Models.ModelsSingleton.loadModels();\r\n            if (res === \"OK\"){\r\n                return Models.ModelsSingleton;\r\n            }else{\r\n                throw new Error(\"Error al cargar los modelos.\");\r\n            }\r\n        }else{\r\n            return Models.ModelsSingleton;\r\n        }\r\n        \r\n    }\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\nimport { Reflector } from '../addons/Reflector';\r\nimport { Object3D } from 'three';\r\nimport Models from './Models';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\n//const STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = 0.13\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        //super('res/models/source/AutoConInterior.glb');\r\n        super('res/models/source/Mercedes.glb');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n    }\r\n\r\n\r\n    generateRetrovisor(){\r\n        //const path = new THREE.Shape();\r\n        //path.absellipse(0,0,0.15,0.075,0, Math.PI*2, false,0);\r\n        //const ellipseGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const plane = new THREE.PlaneGeometry(0.145, 0.085);\r\n        const retrovisor = new Reflector(\r\n            plane,\r\n            //ellipseGeometry,\r\n            {\r\n                textureWidth: window.innerWidth,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: window.innerHeight,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0.35,\r\n                multisample: 0\r\n            }\r\n        );\r\n        retrovisor.rotateX( Math.PI-0.04 );\r\n        retrovisor.rotateY( 0.35 );\r\n        retrovisor.position.set(0.075,0.625,0.31);\r\n        this.threeDModel.add(retrovisor);\r\n    }\r\n\r\n\r\n    generateLeftMirror(){\r\n        const leftMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const leftMirror = new Reflector(\r\n            leftMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,//512\r\n                textureHeight: window.innerHeight,//512\r\n                clipBias: 0,\r\n                multisample: 0\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(leftMirror);\r\n        container.position.set(0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.13);\r\n        leftMirror.rotateY(-18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateRightMirror(){\r\n        const rightMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const rightMirror = new Reflector(\r\n            rightMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,\r\n                textureHeight: window.innerHeight,\r\n                clipBias: 0,\r\n                multisample: 0\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(rightMirror);\r\n        container.position.set(-0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.13);\r\n        rightMirror.rotateY(18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateMirrors(){\r\n        this.generateRetrovisor();\r\n        this.generateLeftMirror();\r\n        this.generateRightMirror();\r\n    }\r\n\r\n    async addToScene(scene){\r\n        const models = await Models.getInstance();\r\n        this.threeDModel = await models.carModel;\r\n        this.threeDModel.name = \"driverCar\";\r\n        this.threeDModel.position.x = POSITION[0];\r\n        this.threeDModel.position.y = POSITION[1];\r\n        this.threeDModel.position.z = POSITION[2];\r\n        this.threeDModel.scale.x = SCALE[0];\r\n        this.threeDModel.scale.y = SCALE[1];\r\n        this.threeDModel.scale.z = SCALE[2];\r\n        scene.add(this.threeDModel);\r\n        this.generateMirrors();\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        // let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        // let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        // let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        // let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'W222WheelFtR');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'W222WheelFtL');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'W222WheelBkR');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'W222WheelBkL');\r\n\r\n        let rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation\r\n        );\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation + this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n        this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox') || gamepads[i].id.startsWith('xinput')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        this.engineState = new TurnedOnEngine();\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4 } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst POSITION = [0,1,0];\r\nconst FACTOR_BRAKE_TO_FORCE = 300;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld){\r\n        super();\r\n        this.carEngine = new CarEngine();\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(POSITION[0], POSITION[1], POSITION[2]);\r\n        this.rotationQuaternion = new Vector4(0,0,0,1);\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        this.carPhysics.buildAmmoPhysics();\r\n        \r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM()\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.setMargin(0.05);\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7;\r\n\r\nexport default class StraightStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n    createSidewalkMesh(scale){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 2*scale );\r\n        let normalTexture = new THREE.TextureLoader().load(\r\n            this.pathToNormalMap\r\n        );\r\n        normalTexture.repeat.set( 3, 2*scale );\r\n        normalTexture.wrapS = THREE.RepeatWrapping;\r\n        normalTexture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshStandardMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        materialSidewalk.normalMap = normalTexture;\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(scale){\r\n        const geometry = new THREE.BoxGeometry( 10*this.SIZE/24, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        \r\n        texture.repeat.set( 1, 2*scale );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        let normalTexture = new THREE.TextureLoader().load(\r\n            this.pathToNormalMap\r\n        );\r\n        normalTexture.repeat.set( 1, 2*scale );\r\n        normalTexture.wrapS = THREE.RepeatWrapping;\r\n        normalTexture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshStandardMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        material.normalMap = normalTexture;\r\n        return new THREE.Mesh( geometry, material );\r\n    }\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = position[0]+10*this.SIZE/24;\r\n        model3D.position.y = position[1]+this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = position[2]-this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsLeft_\"+iter;\r\n        secondModel3D.position.x = position[0]-10*this.SIZE/24;\r\n        secondModel3D.position.y = position[1]+this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = position[2]-this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh(scale);\r\n            const leftSidewalk = this.createSidewalkMesh(scale);\r\n            const rightSidewalk = this.createSidewalkMesh(scale);\r\n            baseStreet.position.set(0,0,0);\r\n            leftSidewalk.position.set(-8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            rightSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet).add(leftSidewalk).add(rightSidewalk)\r\n            for (let i=0; i<4*scale; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            baseStreet.scale.set(1.0, 1.0, scale);\r\n            leftSidewalk.scale.set(1.0, 1.0, scale);\r\n            rightSidewalk.scale.set(1.0, 1.0, scale);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            rightSidewalk.updateMatrix();\r\n            rightSidewalk.updateMatrixWorld();\r\n            rightSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            this.LONG = this.SIZE*scale;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport BoxPhysics from '../LogicModel/Physics/PhysicsTypes/BoxPhysics';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\nimport StraightStreet from '../3DModels/StraightStreet';\r\n\r\nexport default class LevelFactory {\r\n\r\n\r\n    constructor(scene,physicsWorld){\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld\r\n        this.physicsToUpdate = [];\r\n        this.objectsToAnimate = [];\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        })\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n    }\r\n\r\n\r\n    async createRectangle(position,length, width, height ,rotation, pathTexture, Ammo, normalMapPath = null){\r\n        \r\n        const texture = new THREE.TextureLoader().load( pathTexture );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( length, height );\r\n        const floorMaterial = new THREE.MeshStandardMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        if( normalMapPath ){\r\n            let normalTexture = new THREE.TextureLoader().load(\r\n                normalMapPath\r\n            );\r\n            normalTexture.repeat.set( length, height );\r\n            normalTexture.wrapS = THREE.RepeatWrapping;\r\n            normalTexture.wrapT = THREE.RepeatWrapping;\r\n            floorMaterial.normalMap = normalTexture;\r\n            floorMaterial.normalScale.set(10, 10);\r\n        }\r\n        const rampa = new THREE.BoxGeometry( length, width, height);\r\n        rampa.rotateX(rotation);\r\n        const quaternionRamp = new THREE.Quaternion();\r\n        quaternionRamp.setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), rotation);\r\n\r\n        let rampPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            quaternionRamp ,  //Quaternion2\r\n            new Ammo.btVector3(0,0,0), //Inertia\r\n            0, //Mass\r\n            new THREE.Vector3(length, width, height), //Shape\r\n            this.physicsWorld, //Physics World\r\n            1000 // friction\r\n        ); \r\n        \r\n        await rampPhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(rampPhysics);\r\n        let ramp = new THREE.Mesh( rampa, floorMaterial );\r\n        ramp.position.set(position[0],position[1],position[2]);\r\n        this.scene.add(ramp);\r\n    }\r\n\r\n\r\n    async createCone(position , Ammo){\r\n        let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        cone.addToScene(this.scene, \"trafficCone\", position, [ 0.5, 0.5, 0.5]);\r\n        let conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(cone.RADIUS_BOTTOM, cone.HEIGHT/2, cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(conePhysics);\r\n        conePhysics.attachObserver(cone);\r\n        this.objectsToAnimate.push(cone);\r\n    }\r\n\r\n    async buildStreetPhysics(position, street, Ammo){\r\n        let streetPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0], position[1], position[2]),\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            0, \r\n            new THREE.Vector3(street.SIZE, 0.1, street.LONG), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await streetPhysics.buildAmmoPhysics();\r\n        let leftSidewalkPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0]-8.4*street.SIZE/24, position[1]+street.SIDEWALK_HEIGHT/2, position[2]),\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            0, \r\n            new THREE.Vector3(7*street.SIZE/24, street.SIDEWALK_HEIGHT, street.LONG), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await leftSidewalkPhysics.buildAmmoPhysics();\r\n        let rightSidewalkPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0]+8.4*street.SIZE/24, position[1]+street.SIDEWALK_HEIGHT/2, position[2]),\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            0, \r\n            new THREE.Vector3(7*street.SIZE/24, street.SIDEWALK_HEIGHT, street.LONG), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await rightSidewalkPhysics.buildAmmoPhysics();\r\n        streetPhysics.attachObserver(street);\r\n        this.physicsToUpdate.push(streetPhysics);\r\n        this.physicsToUpdate.push(leftSidewalkPhysics);\r\n        this.physicsToUpdate.push(rightSidewalkPhysics);\r\n    }\r\n\r\n\r\n    async createStreet(position, rotation, Ammo, segmentsQuantity){\r\n        let street = new StraightStreet(\"textures/road.jpg\");\r\n        await street.addToScene(this.scene, \"street\", position, segmentsQuantity);\r\n        await this.buildStreetPhysics(position, street, Ammo);\r\n        this.objectsToAnimate.push(street);\r\n    }\r\n\r\n\r\n    async createLevel0(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.createRectangle( [ 10, 0, 10 ], 10, 2, 10, -Math.PI/8, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ -10, 0, 10 ], 10, 2, 10, -Math.PI/4, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ 0, 0, 0 ], 100, 0.1, 100, 0, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createCone( [ 0, 0.5, 10 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 30 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 20 ], Ammo );\r\n    }\r\n\r\n    async createLevelCustom(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.createStreet([0,0,0], 0, Ammo, 20);\r\n    }\r\n\r\n}\r\n\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport Camera from '../Camera/Camera';\r\nimport CarOffsetCamera from '../Camera/CarOffsetCamera';\r\nimport OrbitalCamera from '../Camera/OribtalCamera';\r\nimport CarModel from '../3DModels/CarModel';\r\nimport LogitechG29ControllerSingleton from '../LogicModel/ControllerMapping/LogitechG29Controller';\r\nimport XboxControllerSingleton from '../LogicModel/ControllerMapping/XboxController';\r\nimport Car from '../LogicModel/CarLogic/Car';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport { Vector3 } from 'three';\r\nimport LevelFactory from '../Levels/LevelsFactory';\r\nimport  {VRButton}  from '../addons/VRbutton';\r\nimport Stats from \"stats.js\";\r\n\r\n\r\nexport default class ThreeScene extends Component{\r\n    \r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            \"currentRPM\": 0,\r\n            \"velocity\": 0,\r\n            \"currentShift\": 0,\r\n        };\r\n        this.physicsToUpdate = [];\r\n        localStorage.setItem(\"VR\", false);\r\n        this.gotAnyEvent = false;\r\n        this.stats = new Stats();\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        //Generate elements needed to render the scene\r\n        this.objectsToAnimate = [];\r\n        this.scene = new THREE.Scene();\r\n        this.renderer = new THREE.WebGLRenderer({ \r\n            alpha: true, \r\n            powerPreference:\"high-performance\", \r\n            antialias:true });\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\r\n        this.renderer.setClearColor( 0x87cefa, 1 );\r\n        this.camera = new Camera(this.renderer);\r\n        this.camera.addContainerToScene(this.scene);\r\n        this.stats.showPanel( 0 );\r\n        document.body.appendChild(this.stats.dom);\r\n        this.clock = new THREE.Clock();\r\n\r\n        //Ammo.js\r\n        await this.createAmmo();\r\n\r\n        //Add elements to the scene\r\n        this.ambientLight = new THREE.AmbientLight(0xffffff, 1.0);\r\n        this.scene.add(this.ambientLight);\r\n        this.sunLight = new THREE.DirectionalLight( 0xffffff, 1.0 );\r\n        this.sunLight.position.set( 0, 100, 0 );\r\n        this.scene.add( this.sunLight );\r\n\r\n        this.level = new LevelFactory(this.scene, this.physicsWorld);\r\n        await this.level.createLevelCustom();\r\n        this.physicsToUpdate.push(this.level);\r\n        this.objectsToAnimate.push(this.level);\r\n\r\n        //Add driver's car to scene\r\n        this.carLogic = new Car(this.physicsWorld);\r\n        let carModel = new CarModel();\r\n        this.carLogic.attachObserver(carModel);\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n        this.carLogic.notifyObservers();\r\n        \r\n        //Bind this to methods of the class\r\n        this.animation = this.animation.bind(this);\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n        this.generateEvents = this.generateEvents.bind(this);\r\n        \r\n        //Handle resize and gamepad connection on window.\r\n        this.generateEvents();\r\n        \r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.renderer.xr.enabled = true;\r\n        this.renderer.xr.setFramebufferScaleFactor(0.5);\r\n        this.mount.appendChild(this.renderer.domElement);\r\n        document.body.appendChild( VRButton.createButton( this.renderer ) );\r\n        this.renderer.setAnimationLoop(this.animation);\r\n        \r\n    }\r\n\r\n\r\n    generateEvents(){\r\n        window.addEventListener(\"resize\", this.handleWindowResize);\r\n        window.addEventListener(\"gamepaddisconnected\", function(e){\r\n            LogitechG29ControllerSingleton.removeInstance();  \r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            var numCamera = event.key;\r\n            this.carLogic.removeObserver(this.camera);\r\n            switch(numCamera){\r\n                case \"1\":\r\n                    this.camera = new Camera(this.renderer);\r\n                    this.camera.addContainerToScene(this.scene);\r\n                    break;\r\n                case \"2\":\r\n                    this.camera = new OrbitalCamera(this.renderer);\r\n                    break;\r\n                case \"3\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"4\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"5\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.carLogic.attachObserver(this.camera);\r\n            this.carLogic.notifyObservers();\r\n\r\n          }, false);\r\n    }\r\n\r\n\r\n    async createAmmo(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.tempTransform = new Ammo.btTransform();\r\n        let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n        let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n        let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n        let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n        this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, overlappingPairCache, solver, collisionConfiguratation);\r\n        this.physicsWorld.setGravity(new Ammo.btVector3(0,-9.8,0));\r\n    }\r\n\r\n\r\n    handleWindowResize(){\r\n        this.camera.handleResize();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance() );\r\n    }\r\n\r\n\r\n    animation(){\r\n        this.stats.begin();\r\n        let deltaTime = this.clock.getDelta();\r\n        this.physicsWorld.stepSimulation(deltaTime, 10);\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        });\r\n        this.camera.setPositionRelativeToObject();\r\n        XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n        this.setState({\"velocity\": this.carLogic.getSpeed(), \"currentRPM\": this.carLogic.getCurrentRPM(), \"currentShift\": this.carLogic.getCurrentShift()});\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance());\r\n        console.log(\"drawCalls:\",this.renderer.info.render.calls);\r\n        this.stats.end();\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{width:\"100vw\"}}>\r\n                <div style={{position:\"absolute\", top:\"10px\", right:\"10px\", color:\"red\", width:\"175px\"}} id=\"Acelerador\">\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Cambio Actual: {parseInt(this.state.currentShift)}\r\n                    </p>\r\n                </div>\r\n                <div ref={mount => {this.mount = mount;}}></div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <div id=\"button-box\" style={{position:\"absolute\", top:\"5%\", right:\"5%\"}}>\r\n          <div className={\"MainMenuTitle\"}>\r\n            <h1 style={{textAlign:\"center\", fontSize:\"7rem\"}}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/scene\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/configs\")}\r\n            >\r\n              Configuración\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"right\", paddingRight:30}}>Configurations</h3>\r\n                        </div>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const ItemsContext = createContext();\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport { ItemsContext } from '../LevelEditorContext/ItemsContext';\r\n\r\n\r\nconst allUnselected = {\r\n    \"cone\": null,\r\n    \"trapecio\": null,\r\n    \"street\": null\r\n};\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const {setLastSelectedItem, lastSelectedItem} = React.useContext(ItemsContext);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    //const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    const [itemSelected, setItemSelected] = React.useState(allUnselected);\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        const dictSelection = {...allUnselected};\r\n        dictSelection[item] = \"selected\";\r\n        setItemSelected(dictSelection);\r\n        setLastSelectedItem({\r\n            selectedItem: item,\r\n            scale: 1.0,\r\n            positionX: 0.0,\r\n            positionY: 0.0,\r\n            zIndex: lastSelectedItem ? lastSelectedItem.zIndex + 1 : 1\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"left\", paddingLeft:10}}>Items</h3>\r\n                        </div>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <Grid style={{justifyContent: \"center\", display: \"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n                        {\r\n                            Object.entries(itemSelected).map(([nameItem, isSelected]) => {\r\n                                return (\r\n                                    <img \r\n                                        alt={`${nameItem}`}\r\n                                        key={nameItem}\r\n                                        src={`${nameItem}.png`} \r\n                                        width={75}\r\n                                        height={75} \r\n                                        className={`imageLevelEditor ${isSelected}`} \r\n                                        onClick={() => handleSelection(nameItem)}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport {useState} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst MAX_WIDTH_INPUT = 40;\r\nconst MAX_HEIGHT_INPUT = 40;\r\n\r\nexport const InputsGrid = ({setGridDimensions, gridDimensions}) => {\r\n    const [InputWidth, setInputWidth] = useState(gridDimensions.width);\r\n    const [InputHeight, setInputHeight] = useState(gridDimensions.height);\r\n\r\n    const onSubmit = () =>{\r\n      setGridDimensions(\r\n        {\r\n          width: InputWidth, \r\n          height: InputHeight\r\n        }\r\n      );\r\n    }\r\n  return (\r\n    <Grid container  direction=\"row\" width={\"80%\"} marginLeft={'10%'}\r\n    justifyContent=\"space-evenly\"\r\n    alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={2}>\r\n        <p>Ancho:</p>\r\n          <input \r\n            value={InputWidth} \r\n            type=\"number\" \r\n            step=\"1\" \r\n          onChange={\r\n              (event) => {\r\n                let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                setInputWidth(value > MAX_WIDTH_INPUT ? MAX_WIDTH_INPUT : value);\r\n              }\r\n        } \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={2}>\r\n          <div>\r\n            <p>Alto:</p>\r\n            <input \r\n              value={InputHeight} \r\n              type=\"number\" \r\n              step=\"1\" \r\n              onChange={\r\n                (event) => {\r\n                  let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                  setInputHeight(value > MAX_HEIGHT_INPUT ? MAX_HEIGHT_INPUT : value);\r\n                  \r\n                }\r\n              }\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button variant=\"contained\" onClick={onSubmit}>Actualizar</Button>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n","\r\nconst STANDARD_BOX_LONG = 30;\r\n\r\nexport class AbstractStreet{\r\n\r\n    constructor(ninePerNineGrid, rowIndex, columnIndex){\r\n        const rightFilled = ninePerNineGrid[1][2].filled;\r\n        const topFilled = ninePerNineGrid[0][1].filled;\r\n        const botFilled = ninePerNineGrid[2][1].filled;\r\n        const leftFilled = ninePerNineGrid[1][0].filled;\r\n        this.rotation = this.determineStreetRotation(topFilled, leftFilled, botFilled, rightFilled);\r\n        this.long = [\r\n            STANDARD_BOX_LONG, \r\n            STANDARD_BOX_LONG\r\n        ];\r\n        this.position = [\r\n            rowIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2, \r\n            columnIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2\r\n        ];\r\n    }\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //To implement by each son\r\n    }\r\n\r\n    static sumValueForCell(cell){\r\n        return cell.filled ? 1 : 0\r\n    }\r\n\r\n    static calculateNeighboursFilled(ninePerNineGrid){\r\n        let rowCount = 0;\r\n        let columnCount = 0;\r\n        rowCount += AbstractStreet.sumValueForCell(ninePerNineGrid[1][0]) + AbstractStreet.sumValueForCell(ninePerNineGrid[1][2]);\r\n        columnCount += AbstractStreet.sumValueForCell(ninePerNineGrid[0][1]) + AbstractStreet.sumValueForCell(ninePerNineGrid[2][1]);\r\n        return [rowCount, columnCount];\r\n    }\r\n\r\n    isStraight(){\r\n        return false;\r\n    }\r\n\r\n\r\n    determineStreetRotation(){\r\n        //To be defined by sons\r\n    }\r\n\r\n    getAsJSON(){\r\n        return {\r\n            \"position_x\": this.position[0],\r\n            \"position_y\": this.position[1],\r\n            \"rotation\": this.rotation,\r\n            \"long_x\": this.long[0],\r\n            \"long_y\": this.long[1]\r\n        }\r\n    }\r\n\r\n    getPositionAsRowAndColumn(){\r\n        const row = (this.position[0] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        const col = (this.position[1] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        return [row, col];\r\n    }\r\n\r\n\r\n    getPositionX(){\r\n        return this.position[0];\r\n    }\r\n\r\n    getPositionY(){\r\n        return this.position[1];\r\n    }\r\n\r\n    getLongX(){\r\n        return this.long[0];\r\n    }\r\n\r\n    getLongY(){\r\n        return this.long[1];\r\n    }\r\n   \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_TO_LEFT\": 0,\r\n    \"LEFT_TO_BOT\": Math.PI/2,\r\n    \"BOT_TO_RIGHT\": Math.PI,\r\n    \"RIGHT_TO_TOP\": Math.PI*3/2\r\n}\r\n\r\nexport class Curve extends AbstractStreet{\r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //Tiene que tener solo 2 lindantes, y no ser en misma direccion.\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return (rowCount === 1 && columnCount === 1);\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left){\r\n            return POSSIBLE_ROTATIONS[\"TOP_TO_LEFT\"];\r\n        }\r\n        if(left && bot){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_TO_BOT\"];\r\n        }\r\n        if(bot && right){\r\n            return POSSIBLE_ROTATIONS[\"BOT_TO_RIGHT\"];\r\n        }\r\n        if(right && top){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_TO_TOP\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"CURVE\";\r\n        return dict;\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"HORIZONTAL\": 0,\r\n    \"VERTICAL\": Math.PI/2\r\n}\r\n\r\nexport class StraightStreet extends AbstractStreet {\r\n    \r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        \r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);\r\n        return(columnCount === 2 && rowCount === 0 )|| (columnCount === 0 && rowCount === 2 )\r\n\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && bot){\r\n            return POSSIBLE_ROTATIONS[\"VERTICAL\"];\r\n        }\r\n        if(left && right){\r\n            return POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n        }\r\n    }\r\n\r\n    isStraight(){\r\n        return true;\r\n    }\r\n\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"STRAIGHT\";\r\n        return dict;\r\n    }\r\n\r\n\r\n    isHorizontal(){\r\n        return this.rotation === POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_SINGLE\": 0,\r\n    \"LEFT_SINGLE\": Math.PI/2,\r\n    \"BOT_SINGLE\": Math.PI,\r\n    \"RIGHT_SINGLE\": Math.PI*3/2\r\n}\r\nexport class TStreet extends AbstractStreet {\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 1 )|| (columnCount === 1 && rowCount === 2 );\r\n    }\r\n    \r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left && right){\r\n            return POSSIBLE_ROTATIONS[\"TOP_SINGLE\"];\r\n        }\r\n        if(left && bot && top){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_SINGLE\"];\r\n        }\r\n        if(bot && right && left){\r\n            return POSSIBLE_ROTATIONS[\"BOT_SINGLE\"];\r\n        }\r\n        if(right && top && bot){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_SINGLE\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"T_STREET\";\r\n        return dict;\r\n    }\r\n\r\n}","export class StraightStreetLinker{\r\n\r\n    constructor(arrayOfStreets){\r\n        this.sections = this.segregateSections(arrayOfStreets);\r\n        this.sectionsAsJSON = this.linkSections();\r\n    }\r\n\r\n    //Genero un array para cada tramo recto, que contenga todas las StraightStreets de ese tramo\r\n    //Cada array de seccion va dentro de un array general y eso retornamos\r\n    segregateSections(arrayOfStreets){\r\n        // Recorro array de streets --> Armo un hashMap de filas, y otro de columnas.\r\n        // Para cada fila o columna, separar las subsecciones correspondientes.\r\n        const rows = {};\r\n        const cols = {};\r\n        let sectionsArray = [];\r\n\r\n        for(let i = 0; i < arrayOfStreets.length; i++){\r\n            let [streetRow, streetCol] = arrayOfStreets[i].getPositionAsRowAndColumn();\r\n            if( arrayOfStreets[i].isHorizontal() ){\r\n                if( !(streetRow in rows) ){\r\n                    rows[streetRow] = [];\r\n                }\r\n                rows[streetRow].push({\"idx\":streetCol, \"street\":arrayOfStreets[i]});\r\n            }\r\n            else{\r\n                if( !(streetCol in cols) ){\r\n                    cols[streetCol] = [];\r\n                }\r\n                cols[streetCol].push({\"idx\":streetRow, \"street\":arrayOfStreets[i]});\r\n            }\r\n        }\r\n        for(const [, value] of Object.entries(rows)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        for(const [, value] of Object.entries(cols)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        return sectionsArray;\r\n        \r\n    }\r\n\r\n\r\n    generateArraySubsections(array){\r\n        const finalArray = [];\r\n        //Sort de array por idx creciente... CREEMOS que ya viene sorteado - VERIFICAR.\r\n        for ( let i=0; i<array.length; i++){\r\n            //Primer elemento, o no son lindantes\r\n            if( i === 0 || (array[i][\"idx\"] - array[i-1][\"idx\"] > 1)){\r\n                finalArray.push([array[i][\"street\"]]);\r\n            }else{\r\n                finalArray[finalArray.length - 1].push(array[i][\"street\"]);\r\n            }\r\n        }\r\n        return finalArray;\r\n    }\r\n\r\n\r\n    linkSections(){\r\n        const sectionsJSON = [];\r\n        for(let i = 0; i < this.sections.length; i++){\r\n            //Rotation is the same for all of them\r\n            console.log(this.sections[i]);\r\n            const jsonForStreet = {\r\n                \"position_x\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionX(), 0)/this.sections[i].length,\r\n                \"position_y\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionY(), 0)/this.sections[i].length,\r\n                \"rotation\": this.sections[i][0].rotation,\r\n                \"long_x\": this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongX(), 0) : this.sections[i][0].getLongX(),\r\n                \"long_y\": !this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongY(), 0) : this.sections[i][0].getLongY(),\r\n                \"type\": \"STRAIGHT\"\r\n            }\r\n            sectionsJSON.push(jsonForStreet);\r\n        }\r\n        return sectionsJSON;\r\n    }\r\n\r\n    getSectionsAsJSON(){\r\n        return this.sectionsAsJSON;\r\n    }\r\n}","import { StraightStreet, TStreet, Intersection, Curve, StraightStreetLinker } from \"./Street\";\r\n\r\nconst TYPES_OF_STREETS = [\r\n    StraightStreet,\r\n    Curve,\r\n    TStreet,\r\n    Intersection\r\n];\r\n\r\nexport class StreetFactory{\r\n    \r\n    constructor(levelGrid, isInfiniteLevel){\r\n        this.levelGrid = levelGrid;\r\n        this.getNinePerNineGrid = isInfiniteLevel ? this.getNinePerNineGridInfinite : this.getNinePerNineGridFinite;\r\n    }\r\n\r\n    constructStreets(){\r\n        const straightStreetsArray = [];\r\n        const curvedStreetsArray = [];\r\n        //ararco desde la parte superior izq\r\n        for ( let i = 0; i < this.levelGrid.length ; i++ ){\r\n            for ( let j = 0; j < this.levelGrid[i].length ; j++ ){\r\n                const myCell = this.levelGrid[i][j];\r\n                if (myCell.filled){\r\n                    const streetObject = this.defineTypeOfStreet(i, j);\r\n                    if (streetObject.isStraight()){\r\n                        straightStreetsArray.push(streetObject);\r\n                    }\r\n                    else{\r\n                        curvedStreetsArray.push(streetObject);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        const conjunctedStraightStreets = this.linkStraightStreets(straightStreetsArray);\r\n        let finalArray = curvedStreetsArray.map(street => street.getAsJSON());\r\n        return [...finalArray, ...conjunctedStraightStreets];\r\n        //const finalArray = [...conjunctedStraightStreets, ...curvedStreetsArray];\r\n        //return finalArray.map(street => street.getAsJSON());\r\n    }\r\n\r\n    getNinePerNineGridInfinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            const rowArray = [];\r\n            //Si es negativo es la ultima, y sino es el modulo entre el index y la cant de filas.\r\n            const realRow = i < 0 ? this.levelGrid.length-1 : i % this.levelGrid.length;\r\n            for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                //Simil row pero para columna\r\n                const realColumn = y < 0 ? this.levelGrid[realRow].length-1 : y % this.levelGrid[realRow].length;\r\n                rowArray.push(this.levelGrid[realRow][realColumn]);\r\n            }\r\n            matrix.push(rowArray);\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    getNinePerNineGridFinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        const celda_vacia = {\r\n            \"filled\": false,\r\n        }\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            //Casos Filas Imaginarias vacías\r\n            if (i < 0 || i === this.levelGrid.length){\r\n                matrix.push([celda_vacia, celda_vacia, celda_vacia]);\r\n            }else{\r\n                const rowArray = [];\r\n                for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                    if (y < 0 || y === this.levelGrid[i].length){\r\n                        rowArray.push(celda_vacia);\r\n                    }else{\r\n                        rowArray.push(this.levelGrid[i][y]);\r\n                    }\r\n                }\r\n                matrix.push(rowArray);\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    /* Example:\r\n        | | | | | | | |\r\n        | | | x x x | |\r\n        | | | x Y x | |\r\n        | | | x x x | |\r\n        | | | | | | | |\r\n    */\r\n    defineTypeOfStreet(row, column){\r\n        const ninePerNineGrid = this.getNinePerNineGrid(row, column);\r\n        let typeDefined = false;\r\n        let typeResult = undefined;\r\n        for ( let i = 0; i < TYPES_OF_STREETS.length && !typeDefined; i++){\r\n            typeDefined = TYPES_OF_STREETS[i].isValidNinePerNineGrid(ninePerNineGrid);\r\n            typeResult = TYPES_OF_STREETS[i];\r\n        }\r\n        if (!typeDefined){\r\n            throw new Error(\"No se pudo definir el tipo de calle dentro de los tipos validos.\");\r\n        }\r\n        //Row 0 es la de abajo del todo. Invertimos la row.\r\n        return new typeResult(ninePerNineGrid, this.levelGrid.length - 1 - row, column);\r\n    }\r\n\r\n\r\n    linkStraightStreets(straightStreetsArray){\r\n        const linker = new StraightStreetLinker(straightStreetsArray);\r\n        return linker.getSectionsAsJSON();\r\n    }\r\n    \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\n\r\nexport class Intersection extends AbstractStreet{\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 2 )\r\n    }\r\n\r\n    determineStreetRotation(){\r\n        //No sense to rotate it\r\n        return 0;\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"INTERSECTION\";\r\n        return dict;\r\n    }\r\n}\r\n","import { StreetFactory } from \"./StreetFactory\";\r\n\r\n\r\nexport function downloadObjectAsJson(exportObj, exportName){\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n};\r\n\r\n\r\n\r\n\r\nfunction getCountSidesPainted(levelGrid, i, j){\r\n    let aux = 0;\r\n    for (let x = i-1; x <= i+1 && x < levelGrid.length; x++){\r\n        if (x >= 0 && x !== i){\r\n            aux += levelGrid[x][j].filled ? 1 : 0;\r\n        }\r\n    }\r\n    for(let y = j-1; y <= j+1 && y < levelGrid[i].length; y++){\r\n        if(y >= 0 && y !== j){\r\n            aux += levelGrid[i][y].filled ? 1 : 0;\r\n        }\r\n    }\r\n    return aux;\r\n}\r\n\r\nfunction validateGridNotInfinite(levelGrid){\r\n    let valid = true;\r\n    let wrongCells = [];\r\n    for (let i=0; i<levelGrid.length; i++){\r\n        for (let j=0; j<levelGrid[i].length; j++){\r\n            if (levelGrid[i][j].filled && getCountSidesPainted(levelGrid, i,j) <= 1){\r\n                valid = false;\r\n                wrongCells.push([i,j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        \"valid\": valid,\r\n        \"wrongCells\": wrongCells\r\n    }\r\n}\r\n\r\nfunction validateGridInfinite(){\r\n\r\n}\r\n\r\nexport function validateGrid(levelGrid, isInfinite){\r\n    \r\n    return (isInfinite ? validateGridInfinite(levelGrid) : validateGridNotInfinite(levelGrid));\r\n    \r\n}\r\n\r\nexport function generateJSONFromGrid(levelGrid){\r\n    \r\n    const streetFactory = new StreetFactory(levelGrid);\r\n    const streetsArray = streetFactory.constructStreets();\r\n    const objectsAndStreets = {\r\n        \"streets\": streetsArray\r\n    };\r\n    return objectsAndStreets;\r\n\r\n    \r\n}","import { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport MemoryIcon from '@mui/icons-material/Memory';\r\nimport { downloadObjectAsJson, validateGrid, generateJSONFromGrid } from '../Resources/LevelEditor';\r\n\r\nconst COLORS = {\r\n  \"FILLED\": \"darkgray\",\r\n  \"EMPTY\": \"white\",\r\n  \"WARNING\": 'orange',\r\n};\r\n\r\nconst WIDTH_GRID_VIEW = 600;\r\nconst HEIGHT_GRID_VIEW = 600;\r\nconst LEFT_CLICK = 0;\r\nconst RIGHT_CLICK = 2;\r\n\r\n\r\nexport const LevelGrid = ({gridDimensions}) => {\r\n\r\n  const [levelGrid, setLevelGrid] = useState([]);\r\n  const [click, setClick] = useState(false);\r\n  const [rightClick, setRightClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let finalGrid = [];\r\n    for(let i=0; i<gridDimensions.height; i++){\r\n      let currentRow = [];\r\n      for(let j=0; j<gridDimensions.width; j++){\r\n        let newCell = {\r\n          \"filled\": false,\r\n          \"div_color\": COLORS[\"EMPTY\"]\r\n        }\r\n        currentRow.push(newCell);\r\n      }\r\n      finalGrid.push(currentRow);\r\n    }\r\n    setLevelGrid(finalGrid);\r\n  }, [gridDimensions.width, gridDimensions.height]);\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", (event) => {\r\n      event.preventDefault();\r\n      if(event.button === LEFT_CLICK){\r\n        setClick(false);\r\n      }else if (event.button === RIGHT_CLICK){\r\n        setRightClick(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"contextmenu\", (event) => { event.preventDefault(); });\r\n  }, []);\r\n\r\n\r\n  const arrayContains = (array, insiderArray) => {\r\n    if (!insiderArray || !array){\r\n      return false;\r\n    }\r\n    for (let i=0; i<array.length; i++){\r\n      let equals = true;\r\n      for (let j=0; j<array[i].length; j++){\r\n        try{\r\n          if(array[i][j] !== insiderArray[j]){\r\n            equals = false;\r\n          }\r\n        }catch(exc){j=array[i].length; equals=false;}\r\n      }\r\n      if(equals) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const onSubmitLevel = () =>{\r\n    let result = validateGrid(levelGrid);\r\n    let vec_aux = [...levelGrid];\r\n    for( let i=0; i< levelGrid.length; i++ ){\r\n      for( let j=0; j < levelGrid[i].length; j++){\r\n        if (vec_aux[i][j].filled){\r\n          vec_aux[i][j].div_color = arrayContains(result.wrongCells, [i,j]) ? COLORS[\"WARNING\"] : COLORS[\"FILLED\"];\r\n        }\r\n        \r\n      }\r\n    }\r\n    setLevelGrid(vec_aux);\r\n    if (result.valid) {\r\n      downloadObjectAsJson(generateJSONFromGrid(levelGrid), \"Driving_Simulator_Custom_Level.json\");\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const onEnterHoverWithClickCell = (row, col) => {\r\n    if(click){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(rightClick){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n  \r\n  const onClickCell = (row, col, btn_click) => {\r\n    if(btn_click === LEFT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(btn_click === RIGHT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        width: WIDTH_GRID_VIEW,\r\n        height: HEIGHT_GRID_VIEW,\r\n        marginTop: 25,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n      onMouseDown = {(event) => {\r\n        event.preventDefault();\r\n        if(event.button === LEFT_CLICK){\r\n          setClick(true);\r\n        }else if (event.button === RIGHT_CLICK){\r\n          setRightClick(true);\r\n        }\r\n      }}\r\n    >\r\n      {levelGrid.map((row, idx_row) => {\r\n        return(\r\n          <div \r\n            className=\"row-level-grid\" \r\n            id={`row_${idx_row}`}\r\n            key={`row_${idx_row}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: HEIGHT_GRID_VIEW/gridDimensions.height,\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            {row.map((cell, idx_col) => {\r\n              return (\r\n                <div \r\n                  className=\"cell-level-grid\" \r\n                  key={`cell_${idx_row}_${idx_col}`}\r\n                  id={`cell_${idx_row}_${idx_col}`} \r\n                  style={{\r\n                    backgroundColor: cell[\"div_color\"],\r\n                    width: `${100/gridDimensions.width}%`,\r\n                    height: \"100%\",\r\n                    border: \"1px solid black\"\r\n                  }} \r\n                  //onMouseEnter = {() => onEnterHoverWithClickCell(idx_row, idx_col)}\r\n                  onMouseMove = {(event) => {\r\n                    event.preventDefault();\r\n                    onEnterHoverWithClickCell(idx_row, idx_col);\r\n                  }}\r\n                  onMouseUp = {(event) => {\r\n                    onClickCell(idx_row, idx_col, event.button);\r\n                  }}\r\n                  \r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:40}}>\r\n        <Button variant=\"contained\" onClick={onSubmitLevel}  color=\"success\">\r\n          <MemoryIcon/> Procesar nivel...\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { ItemsContext } from './LevelEditorContext/ItemsContext';\r\nimport { useState } from 'react';\r\nimport { InputsGrid } from './Components/InputsGrid';\r\n\r\nimport { LevelGrid } from './Components/LevelGrid';\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = useState(false);\r\n  const [openConfigs, setOpenConfigs] = useState(false);\r\n\r\n  const [itemsInGrid, setItemsInGrid] = useState([]);\r\n\r\n  const [lastSelectedItem, setLastSelectedItem] = useState(null);\r\n\r\n  const [gridDimensions, setGridDimensions] = useState({width:20, height:20});\r\n\r\n  React.useEffect(() => {\r\n    if (lastSelectedItem !== null){\r\n      setItemsInGrid(currentItems => [...currentItems, lastSelectedItem]);\r\n    }\r\n  }, [lastSelectedItem]);\r\n\r\n  return (\r\n    <>\r\n      <ItemsContext.Provider value={{lastSelectedItem, setLastSelectedItem}}>\r\n        <div>\r\n          <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n            <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n              <AddIcon/>\r\n            </IconButton>\r\n            <h1>Driving Simulator - Level Editor</h1>\r\n            <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n              <InputsGrid setGridDimensions={setGridDimensions} gridDimensions={gridDimensions}></InputsGrid>\r\n              <LevelGrid gridDimensions = {gridDimensions}/>\r\n              {itemsInGrid.map((item, idx) => {\r\n                return(\r\n                  <span key={idx}></span>\r\n                  /*<img \r\n                    key={idx} \r\n                    src={`${item.selectedItem}.png`} \r\n                    width={item.scale*75} \r\n                    height={item.scale*75} \r\n                    style={{\r\n                      top:item.positionY, \r\n                      left:item.positionX,\r\n                      position: \"absolute\",\r\n                      zIndex: item.zIndex.toString()\r\n                    }}\r\n                    onClick={() => {console.log(`OPEN CONFIGS OF idx: ${idx}, obj: ${JSON.stringify(itemsInGrid[idx])}`)}}\r\n                  />*/\r\n                );\r\n              })}\r\n          </div>\r\n          \r\n        </div>\r\n        <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n        <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n      </ItemsContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","//export const API_URL = \"https://backend-bata340.cloud.okteto.net\";\r\nexport const API_URL = \"http://localhost:8001\";\r\nexport const VALID_REGEX_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;","import { createContext } from \"react\";\r\n\r\nexport const SessionContext  = createContext(undefined);","\r\nconst { createHash } = require('crypto');\r\n\r\nexport const hash = (string) => {\r\n  return createHash('sha256').update(string).digest('hex');\r\n}","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants'\r\nimport { SessionHooks } from '../Sessions/SessionHooks';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const LoginForm = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const { setSessionWithResponse } = SessionHooks();\r\n\r\n  const postLogin = async () => {\r\n    try{\r\n        const APIResponse = await fetch(\r\n            `${API_URL}/users/login`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": hash(password)\r\n                })\r\n            }\r\n        );\r\n        if (APIResponse.status !== 200){\r\n            const json = await APIResponse.json();\r\n            const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n            let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n            throw new Error(error_msg);\r\n        }\r\n        return APIResponse.json();\r\n    }catch(e){\r\n        throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  const validateFields = () => {\r\n    const errors = []\r\n    if (password === \"\"){\r\n        errors.push(\"El campo contraseña se encuentra vacío.\");\r\n    }\r\n    if (email === \"\"){\r\n        errors.push(\"El campo email se encuentra vacío\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n        errors.push(\"El email establecido es inválido.\");\r\n      }\r\n    if(errors.length > 0){\r\n        setError(errors);\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n  }\r\n\r\n\r\n  const submitLogin = async (event) => {\r\n    event.preventDefault();\r\n    if(!validateFields()){\r\n        return;\r\n    }\r\n    try{\r\n        const loginResponse = await postLogin();\r\n        setSessionWithResponse(loginResponse);\r\n        /*TODO: DAR UN FEEDBACK DE SESION INICIADA CORRECTAMENTE ANTES DE REDIR*/\r\n        navigate(\"/\");\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n\r\n  const postLoginGoogle = async (token) => {\r\n    const APIResponse = await fetch(\r\n        `${API_URL}/users/login_google`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"token\": token\r\n            })\r\n        }\r\n    );\r\n    if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n    }\r\n    return APIResponse.json();\r\n  }\r\n\r\n  const submitGoogleLogin = async (token) => {\r\n    try{\r\n        const responseAPI = await postLoginGoogle(token);\r\n        setSessionWithResponse(responseAPI);\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitLogin}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Iniciar Sesión</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type=\"text\" \r\n                    onChange={(event) => setEmail(event.target.value)} \r\n                    value={email} \r\n                    name=\"email\"\r\n                    label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPassword(event.target.value)} \r\n                    value={password} \r\n                    name=\"password\"\r\n                    label=\"Contraseña\"\r\n                    InputProps={{ // <-- This is where the toggle button is added.\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">Iniciar Sesión</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/signup\"}>¿No posees una cuenta? Registrate aquí...</Link>\r\n            </div>\r\n            <div style={{marginTop:20, display:\"flex\", justifyContent:\"center\", textAlign:\"center\", alignContent:\"center\"}}>\r\n                <GoogleLogin\r\n                    onSuccess={credentialResponse => {\r\n                        const OAuthToken = credentialResponse.credential;\r\n                        submitGoogleLogin(OAuthToken);\r\n                    }}\r\n                    onError={() => {\r\n                        setError(['El inicio de sesión con Google ha fallado.']);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n","import { useContext } from 'react';\r\nimport { SessionContext } from './SessionContext';\r\n\r\nexport const SessionHooks = () => {\r\n  \r\n    const { session, setSession } = useContext(SessionContext);\r\n\r\n\r\n    const setSessionWithResponse = (loginResponse) => {\r\n        setSession({\r\n            user: loginResponse.user,\r\n            jwt: loginResponse.jwt\r\n        });\r\n    }\r\n\r\n    const getUser = () => {\r\n        return session.user ? session.user : undefined;\r\n    }\r\n\r\n    const getJWT = () => {\r\n        return session.jwt ? session.jwt : undefined;\r\n    }\r\n\r\n    return({\r\n        setSessionWithResponse,\r\n        getUser,\r\n        getJWT\r\n    })\r\n}\r\n","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\n\r\n\r\nexport const SignUpForm = () => {\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState(\"\");\r\n  const [nameToShow, setNameToShow] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const validateFields = () => {\r\n    const errorArray = [];\r\n    if (email === \"\" || password === \"\" || passwordConfirmation === \"\" || nameToShow === \"\"){\r\n      errorArray.push(\"Aún existen campos sin completar.\")\r\n    }\r\n    if (password !== passwordConfirmation){\r\n      errorArray.push(\"Las contraseñas establecidas no coinciden.\");\r\n    }\r\n    if (password.length < 8){\r\n      errorArray.push(\"La contraseña debe tener una longitud mínima de 8 caracteres.\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n      errorArray.push(\"El email establecido es inválido.\");\r\n    }\r\n    if(errorArray.length > 0){\r\n      setError(errorArray);\r\n      return false;\r\n    }else{\r\n      setError(undefined);\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  const postSignUp = async () => {\r\n    const fetchUrl = `${API_URL}/users/register`;\r\n    try{\r\n      const APIResponse = await fetch(\r\n        fetchUrl,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n              \"email\": email,\r\n              \"password\": hash(password),\r\n              \"name_to_show\": nameToShow\r\n          })\r\n        }\r\n      );\r\n      if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      return APIResponse.json();\r\n  }catch(e){\r\n      throw new Error(e);\r\n  }\r\n  }\r\n\r\n\r\n  const submitSignUp = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateFields()){\r\n      return;\r\n    }\r\n    const res = await postSignUp();\r\n    console.log(res);\r\n    /*TODO: Mostrar dialog de creado exitoso, y despues mandarlo al login...*/\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitSignUp}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Crea tu cuenta</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setEmail(event.target.value)} \r\n                  value={email} \r\n                  name=\"email\"\r\n                  label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setNameToShow(event.target.value)} \r\n                  value={nameToShow} \r\n                  name=\"username\"\r\n                  label=\"Nombre para mostrar\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  onChange={(event) => setPassword(event.target.value)} \r\n                  value={password} \r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPasswordConfirmation(event.target.value)} \r\n                    value={passwordConfirmation} \r\n                    name=\"passwordConfirmation\"\r\n                    label=\"Repetir Contraseña\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">CREAR CUENTA</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/login\"}>¿Ya poses una cuenta? Inicia sesión...</Link>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n","import { SessionContext } from \"./SessionContext\";\r\nimport { useState } from 'react'\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nexport const SessionProvider = ( {childElement} ) => {\r\n  \r\n    const [session, setSession] = useState({\r\n        user: undefined,\r\n        jwt: undefined\r\n    });\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"18785041157-s9ga39r0i6up45radtj3soo6je1pneon.apps.googleusercontent.com\">\r\n            <SessionContext.Provider value={{session, setSession}}>\r\n                {childElement}\r\n            </SessionContext.Provider>\r\n        </GoogleOAuthProvider>\r\n    )\r\n}\r\n","import ThreeScene from './Scene/ThreeScene';\r\nimport { useEffect } from 'react';\r\nimport { MainMenu } from './Menus/MainMenu';\r\nimport { LevelEditor } from './Menus/LevelEditor';\r\nimport { HashRouter as Router, Routes as Switch, Route } from 'react-router-dom';\r\nimport { LoginForm } from './Menus/Components/LoginForm';\r\nimport { SignUpForm } from './Menus/Components/SignUpForm';\r\nimport { SessionProvider } from './Menus/Sessions/SessionProvider';\r\n\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    document.title = 'Driving Simulator';\r\n  }, []);\r\n\r\n  return (\r\n    <SessionProvider childElement = \r\n      {\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/scene\" element = {<ThreeScene/>} />\r\n            <Route exact path=\"/\" element = {<MainMenu/>} />\r\n            <Route exact path=\"/level-editor\" element = {<LevelEditor/>} />\r\n            <Route exact path=\"/login\" element = {<LoginForm/>}/>\r\n            <Route exact path=\"/signup\" element = {<SignUpForm/>}/>\r\n          </Switch>\r\n        </Router>\r\n      }\r\n    />\r\n    \r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n\r\n"],"sourceRoot":""}