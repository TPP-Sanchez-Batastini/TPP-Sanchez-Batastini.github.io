{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/Models.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics.js","3DModels/StraightStreet.js","3DModels/Intersection.js","3DModels/Curve.js","3DModels/TStreet.js","3DModels/Checkpoint.js","Levels/LevelScore.js","Levels/LevelsFactory.js","addons/VRbutton.js","LogicModel/IA/TrafficModel.js","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/LevelEditorContext/ItemsContext.jsx","Menus/Components/ItemsDrawer.jsx","Menus/Components/InputsGrid.jsx","Menus/Resources/Street/AbstractStreet.js","Menus/Resources/Street/Curve.js","Menus/Resources/Street/StraightStreet.js","Menus/Resources/Street/TStreet.js","Menus/Resources/Street/StraightStreetLinker.js","Menus/Resources/StreetFactory.js","Menus/Resources/Street/Intersection.js","Menus/Resources/LevelEditor.js","Menus/Components/LevelGrid.jsx","Menus/LevelEditor.jsx","Menus/Constants/Constants.js","Menus/Sessions/SessionContext.jsx","Menus/Resources/Hasher.js","Menus/Components/LoginForm.jsx","Menus/Sessions/SessionHooks.jsx","Menus/Components/SignUpForm.jsx","Menus/Sessions/SessionProvider.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","constructor","car","this","handleAccelerate","valueClutch","valueAccelerator","accelerate","handleBrake","valueBrake","brake","doHorn","changeShift","valueShift","turnDirection","wheelAxesValue","turnOnCar","updateCar","update","changeShiftBox","mode","Observer","observedState","newState","Camera","renderer","super","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","handleResize","aspect","updateProjectionMatrix","setPositionRelativeToObject","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","rotationQuat","x","y","z","w","normalize","quaternion","getCameraInstance","addContainerToScene","scene","CarOffsetCamera","positionCamera","cameraOffsetRotated","positionToLookAt","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","async","loadAsync","threeDObject","objectName","scale","modelVariable","loadFBX","e","loadGLTF","name","getModel","animate","ModelsSingleton","carModel","building_1","building_2","building_3","building_4","changeMaterialsToBasic","children","i","length","child","isGroup","isMesh","newMaterial","prototype","call","material","receiveShadow","castShadow","pathToTextureRcvd","result","Models","static","loadModels","Error","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","generateRetrovisor","plane","retrovisor","Reflector","textureWidth","textureHeight","clipBias","multisample","rotateX","rotateY","generateLeftMirror","leftMirrorGeometry","leftMirror","container","Object3D","generateRightMirror","rightMirrorGeometry","rightMirror","generateMirrors","arguments","undefined","hasMirrors","models","getInstance","clone","moveCar","addPhysicsView","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","watchPhysicsColliders","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorOne","default","require","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","checkEvents","doActionByMapping","doActionsPedals","axes","doActionsWheel","doActionsDPad","doActionsButtons","buttons","pressed","doActionsShifter","LogitechG29ControllerSingleton","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","doActionsAxes","axe","doActionHotKeys","value","doActionsTriggers","XboxControllerSingleton","Observable","observers","attachObserver","observer","removeObserver","index","indexOf","splice","notifyObservers","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","width","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","updatePhysics","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","getRigidBody","setEngineForce","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringRotation","setSteeringValue","getVelocity","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","changeValueInRPMCurve","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","TurnedOnEngine","CarEngine","useAudio","engineState","playbackRate","turnOn","Audio","play","setTimeout","soundEngine","AudioContext","webkitAudioContext","fetch","then","response","arrayBuffer","buffer","decodeAudioData","soundEngineSource","createBufferSource","loop","connect","destination","start","clutchIsPressed","handleEngineShutdown","shiftBox","shutDownEngine","isInConditionToAccelerate","engineCanApplyForce","rpmReturn","changeRPM","RPMModification","log","getCurrentRPM","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","isValidShift","shift","calculateNormalFactorRPM","newShift","oldVelocity","getValueForNewRPM","normalFactorRPM","XValue","getEngineForce","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactor","getCurrentShift","ManualBox","SemiAutomaticBox","Car","initialPosition","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","turnOnRightLight","turnOnLeftLight","positionAndRotation","getDataToAnimate","getLastRotation","getSpeed","GeneralPhysics","generateShape","getMotionState","getWorldTransform","setLinearVelocity","velocityVector","velVectorBT","applyForce","BoxPhysics","setMargin","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","load","map","materialBox","geometryPlane","box","cone","CylinderPhysics","btCylinderShape","CustomGeometryPhysics","triangle_mesh","btTriangleMesh","vectA","vectB","vectC","verticesPos","getAttribute","array","triangles","setX","setY","setZ","addTriangle","destroy","btBvhTriangleMeshShape","StraightStreet","pathToNormalMap","SIZE","SIDEWALK_HEIGHT","createSidewalkMesh","wrapS","wrapT","repeat","materialSidewalk","geometrySidewalk","createStreetMesh","mesh","iter","model3D","loadBuildingBlock","parseInt","random","LONG","updateMatrix","updateMatrixWorld","matrixAutoUpdate","secondModel3D","rotationY","baseStreet","leftSidewalk","rightSidewalk","createBuildings","Intersection","SQUARE_SIZE","getLerpPoints","vec1","vec2","quantPoints","points","createSidewalkCurve","initialPoint","lerpPoints","pointsCurve","getPoints","secondLerpPoints","thirdLerpPoints","fourthLerpPoints","getGeometrySidewalk","geom","columnas","aux_vertices","indexes","uv1","uv2","uv3","accum_x","accum_z","uv","vertex","filas","j","vertexArr","Float32Array","uvArr","setIndex","setAttribute","computeVertexNormals","sidewalk","Curve","TOP_CENTER","createLongSidewalkCurve","fifthLerpPoints","sixthLerpPoints","getGeometryLongSidewalk","createLongSidewalkMesh","longSidewalk","TStreet","createStraightSidewalkMesh","createBuilding","Checkpoint","checkpointsData","RADIUS","stepHeartbeat","LEAST_OPACITY","MAX_OPACITY","newOpacity","opacity","transparent","checkpoint","LevelScore","initialScore","score","alterScore","isNaN","getCurrentScore","LevelFactory","levelScore","physicsToUpdate","objectsToAnimate","STREET_TYPES","createStreet","bind","createCurve","createTStreet","createIntersection","OBJECTS","createCone","forEach","phys","object","height","pathTexture","normalMapPath","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","buildAmmoPhysics","ramp","addToScene","conePhysics","threeObject","onCollide","console","street","streetPhysics","movingLeft","leftSidewalkPhysics","movingRight","rightSidewalkPhysics","tStreet","identity","movingOne","cornerPhysicsOne","movingTwo","cornerPhysicsTwo","intersection","cornerPhysicsThree","cornerPhysicsFour","curve","movingCorner","cornerPhysics","longSidePhysics","segmentsQuantity","buildStreetPhysics","buildIntersectionPhysics","buildCurvePhysics","buildTStreetPhysics","checkpoints","checkpointPhysics","removeRigidBody","rigidyBody","removeCollisionObject","remove","end","createCheckpoint","position_x","position_y","createRectangle","long","type","segments","json","streets","instantiateStreet","long_x","long_y","objects","obj","instantiateObject","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","outline","zIndex","xr","isSessionSupported","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","sessionInit","optionalFeatures","requestSession","setItem","showEnterVR","xrSessionIsGranted","click","catch","exception","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","TrafficModel","SIZE_OF_TRAFFIC","timeSinceLastUpdate","Date","now","trafficWorker","Worker","currentTraffic","lastID","onmessage","onReceiveResponseFromWorker","updateCarEngines","data","onCollideWithCarOfTraffic","object3D","engine","deleteCar","carId","objectsInTraffic","generateCar","updateTraffic","postMessage","carActions","Object","keys","steering","values","carObject","ThreeScene","Component","state","velocity","gotAnyEvent","stats","Stats","alpha","powerPreference","antialias","setSize","shadowMap","enabled","clock","jsonLevel","props","generateGeneralElements","animation","handleWindowResize","generateEvents","addPlayerCar","generateLevel","addVR","createAmmo","addGeneralLights","createTraffic","setAnimationLoop","setPixelRatio","devicePixelRatio","setFramebufferScaleFactor","mount","appendChild","body","createButton","level","updateDataLevel","createLevelCustom","geomField","matField","meshField","setClearColor","showPanel","dom","trafficModel","generateInitialTraffic","removeInstance","event","numCamera","key","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","onEnterColission","addFunction","cp","obj0","obj1","castObject","wrapPointer","btManifoldPoint","get_m_userPersistentData","collisionContactID","set_m_userPersistentData","setContactProcessedCallback","render","begin","deltaTime","getDelta","stepSimulation","setState","_jsxs","_jsx","top","right","fontWeight","ref","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","MainMenu","navigate","useNavigate","_Fragment","className","fontSize","onClick","ConfigDrawer","_ref","openConfigs","handleDrawerClose","open","setOpen","React","useState","useEffect","DrawerHeader","styled","_ref2","theme","alignItems","spacing","mixins","toolbar","justifyContent","Grid","Drawer","sx","flexShrink","boxSizing","variant","anchor","ChevronRightIcon","paddingRight","Divider","ItemsContext","createContext","allUnselected","ItemsDrawer","openItems","setLastSelectedItem","lastSelectedItem","useContext","itemSelected","setItemSelected","paddingLeft","ChevronLeftIcon","flexDirection","entries","_ref3","nameItem","isSelected","alt","src","item","dictSelection","selectedItem","positionX","positionY","handleSelection","InputsGrid","setGridDimensions","gridDimensions","InputWidth","setInputWidth","InputHeight","setInputHeight","direction","marginLeft","xs","step","onChange","target","replaceAll","Button","onSubmit","STANDARD_BOX_LONG","AbstractStreet","ninePerNineGrid","rowIndex","columnIndex","rightFilled","filled","topFilled","botFilled","leftFilled","determineStreetRotation","cell","rowCount","columnCount","sumValueForCell","isStraight","getAsJSON","getPositionAsRowAndColumn","getPositionX","getPositionY","getLongX","getLongY","POSSIBLE_ROTATIONS","StraightStreetLinker","arrayOfStreets","sections","segregateSections","sectionsAsJSON","linkSections","rows","cols","sectionsArray","streetRow","streetCol","isHorizontal","generateArraySubsections","finalArray","sectionsJSON","jsonForStreet","reduce","acum","elem","getSectionsAsJSON","TYPES_OF_STREETS","calculateNeighboursFilled","bot","dict","StreetFactory","levelGrid","isInfiniteLevel","getNinePerNineGrid","getNinePerNineGridInfinite","getNinePerNineGridFinite","constructStreets","straightStreetsArray","curvedStreetsArray","streetObject","defineTypeOfStreet","conjunctedStraightStreets","linkStraightStreets","indexRow","indexColumn","matrix","rowArray","realRow","realColumn","celda_vacia","row","column","typeResult","typeDefined","isValidNinePerNineGrid","getCountSidesPainted","aux","validateGrid","isInfinite","validateGridInfinite","valid","wrongCells","validateGridNotInfinite","COLORS","LevelGrid","setLevelGrid","setClick","rightClick","setRightClick","finalGrid","currentRow","newCell","preventDefault","arrayContains","insiderArray","equals","exc","marginTop","marginRight","onMouseDown","idx_row","idx_col","backgroundColor","onMouseMove","onEnterHoverWithClickCell","col","levelGridCopy","div_color","onMouseUp","onClickCell","btn_click","onSubmitLevel","vec_aux","exportObj","exportName","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","downloadObjectAsJson","generateJSONFromGrid","MemoryIcon","LevelEditor","setOpenItems","setOpenConfigs","itemsInGrid","setItemsInGrid","currentItems","Provider","IconButton","margin","AddIcon","SettingsIcon","idx","API_URL","VALID_REGEX_EMAIL","SessionContext","createHash","hash","string","digest","LoginForm","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","setSessionWithResponse","SessionHooks","loginResponse","user","jwt","getUser","getJWT","submitGoogleLogin","responseAPI","APIResponse","method","headers","token","status","endMSG","detail","msg","error_msg","statusText","postLoginGoogle","toString","validateFields","errors","match","postLogin","alignContent","maxWidth","Alert","severity","onClose","listerror","TextField","label","InputProps","endAdornment","InputAdornment","handleClickShowPassword","Visibility","VisibilityOff","Link","to","GoogleLogin","onSuccess","credentialResponse","OAuthToken","credential","onError","SignUpForm","passwordConfirmation","setPasswordConfirmation","nameToShow","setNameToShow","errorArray","fetchUrl","postSignUp","SessionProvider","childElement","GoogleOAuthProvider","clientId","App","setJson","title","Router","Switch","Route","exact","path","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.439ee256.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n    doHorn(){\r\n        this.car.doHorn();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.4;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 85, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") === \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                const rotationQuat = new THREE.Quaternion(this.observedState.rotation.x, this.observedState.rotation.y, this.observedState.rotation.z, this.observedState.rotation.w).normalize();\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), -5*Math.PI/180); //SUMAR ROTACION EXTRA SI USAMOS EL JOYSTICK DERECHO\r\n                this.group.quaternion.copy(rotationQuat);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    \r\n    addContainerToScene(scene){\r\n        scene.add(this.group);\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from 'three';\r\n\r\nclass ModelsSingleton{\r\n\r\n    constructor(){\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.carModel = null;\r\n        this.building_1 = null;\r\n        this.building_2 = null;\r\n        this.building_3 = null;\r\n        this.building_4 = null;\r\n    }\r\n\r\n\r\n    changeMaterialsToBasic(children){\r\n        for (let i=0; i < children.length; i++) {\r\n            const child = children[i];\r\n            \r\n            if(child.isGroup){\r\n                this.changeMaterialsToBasic(child.children);\r\n            }else if(child.isMesh){\r\n                const newMaterial = new THREE.MeshPhongMaterial();\r\n                THREE.MeshBasicMaterial.prototype.copy.call( newMaterial, child.material );\r\n                child.material = newMaterial;\r\n                child.receiveShadow = true;\r\n                child.castShadow = true;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async loadGLTF(pathToTextureRcvd){\r\n        let pathToTexture = pathToTextureRcvd;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        this.changeMaterialsToBasic(result.scene.children);\r\n        return result.scene;\r\n    }\r\n\r\n    async loadModels(){\r\n        this.carModel = this.loadGLTF('res/models/source/Mercedes.glb');\r\n        this.building_1 = this.loadGLTF('res/models/source/buildings/Building_1.glb');\r\n        this.building_2 = this.loadGLTF('res/models/source/buildings/Building_2.glb');\r\n        this.building_3 = this.loadGLTF('res/models/source/buildings/Building_3.glb');\r\n        this.building_4 = this.loadGLTF('res/models/source/buildings/Building_4.glb');\r\n        return \"OK\";\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default class Models{\r\n\r\n    static ModelsSingleton\r\n\r\n    static async getInstance(){\r\n        if (!Models.ModelsSingleton){\r\n            Models.ModelsSingleton = new ModelsSingleton();\r\n            let res = await Models.ModelsSingleton.loadModels();\r\n            if (res === \"OK\"){\r\n                return Models.ModelsSingleton;\r\n            }else{\r\n                throw new Error(\"Error al cargar los modelos.\");\r\n            }\r\n        }else{\r\n            return Models.ModelsSingleton;\r\n        }\r\n        \r\n    }\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector';\r\nimport { Object3D } from 'three';\r\nimport Models from './Models';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\n//const STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = 0.13\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        //super('res/models/source/AutoConInterior.glb');\r\n        super('res/models/source/Mercedes.glb');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n    }\r\n\r\n\r\n    generateRetrovisor(){\r\n        //const path = new THREE.Shape();\r\n        //path.absellipse(0,0,0.15,0.075,0, Math.PI*2, false,0);\r\n        //const ellipseGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const plane = new THREE.PlaneGeometry(0.145, 0.085);\r\n        const retrovisor = new Reflector(\r\n            plane,\r\n            //ellipseGeometry,\r\n            {\r\n                textureWidth: window.innerWidth,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: window.innerHeight,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0.35,\r\n                multisample: 4\r\n            }\r\n        );\r\n        retrovisor.rotateX( Math.PI-0.04 );\r\n        retrovisor.rotateY( 0.35 );\r\n        retrovisor.position.set(0.075,0.625,0.31);\r\n        this.threeDModel.add(retrovisor);\r\n    }\r\n\r\n\r\n    generateLeftMirror(){\r\n        const leftMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const leftMirror = new Reflector(\r\n            leftMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,//512\r\n                textureHeight: window.innerHeight,//512\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(leftMirror);\r\n        container.position.set(0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.13);\r\n        leftMirror.rotateY(-18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateRightMirror(){\r\n        const rightMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const rightMirror = new Reflector(\r\n            rightMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,\r\n                textureHeight: window.innerHeight,\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(rightMirror);\r\n        container.position.set(-0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.1);\r\n        rightMirror.rotateY(18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateMirrors(){\r\n        this.generateRetrovisor();\r\n        this.generateLeftMirror();\r\n        this.generateRightMirror();\r\n    }\r\n\r\n    async addToScene(scene, name=\"driverCar\", hasMirrors = true){\r\n        const models = await Models.getInstance();\r\n        this.threeDModel = await models.carModel;\r\n        this.threeDModel = this.threeDModel.clone();\r\n        this.threeDModel.name = name;\r\n        this.threeDModel.position.x = POSITION[0];\r\n        this.threeDModel.position.y = POSITION[1];\r\n        this.threeDModel.position.z = POSITION[2];\r\n        this.threeDModel.scale.x = SCALE[0];\r\n        this.threeDModel.scale.y = SCALE[1];\r\n        this.threeDModel.scale.z = SCALE[2];\r\n        scene.add(this.threeDModel);\r\n        if(hasMirrors){\r\n            this.generateMirrors();\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        // let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        // let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        // let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        // let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'W222WheelFtR');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'W222WheelFtL');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'W222WheelBkR');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'W222WheelBkL');\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n            this.globalControllerHandler.doHorn();\r\n            this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox') || gamepads[i].id.startsWith('xinput')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            this.globalControllerHandler.doHorn();\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(useAudio){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n        this.playbackRate = 1.1;\r\n        this.useAudio = useAudio;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        if(this.engineState instanceof TurnedOffEngine){\r\n            this.engineState = new TurnedOnEngine();\r\n            if (this.useAudio){\r\n                new Audio('./sounds/encendido.wav').play();\r\n                setTimeout(() => {\r\n                    this.soundEngine = new (window.AudioContext || window.webkitAudioContext)();\r\n                    fetch(\"./sounds/engine.wav\").then(\r\n                        response => response.arrayBuffer()\r\n                    ).then(buffer => this.soundEngine.decodeAudioData(buffer)\r\n                    ).then(buffer => {\r\n                        this.soundEngineSource = this.soundEngine.createBufferSource();\r\n                        this.soundEngineSource.buffer = buffer;\r\n                        this.soundEngineSource.loop = true;\r\n                        this.soundEngineSource.connect(this.soundEngine.destination);\r\n                        this.soundEngineSource.start();\r\n                    });\r\n                }, 1300);\r\n            }            \r\n        }\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4 } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst FACTOR_BRAKE_TO_FORCE = 300;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld, initialPosition, useAudio = true){\r\n        super();\r\n        this.carEngine = new CarEngine(useAudio);\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(initialPosition[0], initialPosition[1], initialPosition[2]);\r\n        this.rotationQuaternion = new Vector4(0,0,0,1);\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        // this.carPhysics.buildAmmoPhysics();\r\n        \r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n    doHorn(){\r\n        new Audio(\"./sounds/bocina.wav\").play();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM()\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.castShadow = true;\r\n            cone.receiveShadow = true;\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class CustomGeometryPhysics extends GeneralPhysics{\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        // eslint-disable-next-line\r\n        let _triangle, triangle_mesh = new Ammo.btTriangleMesh();\r\n        //declare triangles position vectors\r\n        let vectA = new Ammo.btVector3(0, 0, 0);\r\n        let vectB = new Ammo.btVector3(0, 0, 0);\r\n        let vectC = new Ammo.btVector3(0, 0, 0);\r\n        //retrieve vertices positions from object\r\n        let verticesPos = this.shape.getAttribute('position').array;\r\n        let triangles = [];\r\n        for (let i = 0; i < verticesPos.length; i += 3) {\r\n            triangles.push({\r\n                x: verticesPos[i],\r\n                y: verticesPos[i + 1],\r\n                z: verticesPos[i + 2]\r\n            });\r\n        }\r\n        //use triangles data to draw ammo shape\r\n        for (let i = 0; i < triangles.length - 3; i += 3) {\r\n\r\n            vectA.setX(triangles[i].x);\r\n            vectA.setY(triangles[i].y);\r\n            vectA.setZ(triangles[i].z);\r\n\r\n            vectB.setX(triangles[i + 1].x);\r\n            vectB.setY(triangles[i + 1].y);\r\n            vectB.setZ(triangles[i + 1].z);\r\n\r\n            vectC.setX(triangles[i + 2].x);\r\n            vectC.setY(triangles[i + 2].y);\r\n            vectC.setZ(triangles[i + 2].z);\r\n\r\n            triangle_mesh.addTriangle(vectA, vectB, vectC, true);\r\n        }\r\n        Ammo.destroy(vectA);\r\n        Ammo.destroy(vectB);\r\n        Ammo.destroy(vectC);\r\n\r\n        var shape = new Ammo.btBvhTriangleMeshShape(triangle_mesh, true);\r\n        shape.setMargin(0);\r\n        return shape;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class StraightStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n    createSidewalkMesh(scale){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10*scale );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(scale){\r\n        const geometry = new THREE.BoxGeometry( 10*this.SIZE/24, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        \r\n        texture.repeat.set( 1, 2*scale );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsLeft_\"+iter;\r\n        secondModel3D.position.x = -10*this.SIZE/24;\r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh(scale);\r\n            const leftSidewalk = this.createSidewalkMesh(scale);\r\n            const rightSidewalk = this.createSidewalkMesh(scale);\r\n            baseStreet.position.set(0,0,0);\r\n            leftSidewalk.position.set(-8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            rightSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet).add(leftSidewalk).add(rightSidewalk)\r\n            for (let i=0; i<4*scale; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.scale.set(1.0, 1.0, scale);\r\n            leftSidewalk.scale.set(1.0, 1.0, scale);\r\n            rightSidewalk.scale.set(1.0, 1.0, scale);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            rightSidewalk.updateMatrix();\r\n            rightSidewalk.updateMatrixWorld();\r\n            rightSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            this.LONG = this.SIZE*scale;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\n\r\nexport default class Intersection extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<4; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else if(i===2){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }else if(i===3){\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                }else{\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class Curve extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24+0.12;\r\n        this.TOP_CENTER = [this.SIZE/2-this.SQUARE_SIZE, this.SIDEWALK_HEIGHT, -this.SIZE/2+this.SQUARE_SIZE];\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    createLongSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SIZE/2,0,-this.SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(\r\n            initialPoint, \r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            5\r\n            );\r\n        const secondLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const thirdLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const fourthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2 - this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE, this.SIZE/2-this.SQUARE_SIZE), \r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector2(-this.SIZE/2+this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n        );\r\n        let pointsCurve = curve.getPoints(30);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const fifthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2+this.SQUARE_SIZE, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const sixthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2),\r\n            5\r\n        );\r\n        return [\r\n            ...lerpPoints, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints,\r\n            ...pointsCurve,\r\n            ...fifthLerpPoints,\r\n            ...sixthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    getGeometryLongSidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createLongSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(this.TOP_CENTER[0], this.TOP_CENTER[1], this.TOP_CENTER[2]);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SIZE/2)/this.SIZE, (points[i].z+this.SIZE/2)/this.SIZE);\r\n            uv3.push((this.TOP_CENTER[0]+this.SIZE/2)/this.SIZE, (this.TOP_CENTER[2]+this.SIZE/2)/this.SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    createLongSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 10, 10 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometryLongSidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsCurve_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsCurveOtherSide_\"+iter;\r\n        secondModel3D.position.x = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;      \r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = 10*this.SIZE/24;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            const sidewalk = this.createSidewalkMesh();\r\n            sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n            sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n            sidewalk.updateMatrix();\r\n            sidewalk.updateMatrixWorld();\r\n            sidewalk.matrixAutoUpdate = false;\r\n            const longSidewalk = this.createLongSidewalkMesh();\r\n            longSidewalk.position.set(0,0,0);\r\n            longSidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n            longSidewalk.updateMatrix();\r\n            longSidewalk.updateMatrixWorld();\r\n            longSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(sidewalk).add(longSidewalk);\r\n            for (let i=0; i<3; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class TStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuilding(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D);\r\n    }\r\n\r\n\r\n    createStraightSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10 );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 2.4, 2.4 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<2; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else{\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            for (let i=0; i<4; i++){\r\n                this.createBuilding(position, i);\r\n            }\r\n            const leftSidewalk = this.createStraightSidewalkMesh();\r\n            leftSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(leftSidewalk);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\n\r\nexport default class Checkpoint extends VisualEntity{\r\n\r\n    constructor(checkpointsData){\r\n        super(null);\r\n        this.checkpointsData = checkpointsData;\r\n        this.RADIUS = 1;\r\n        this.HEIGHT = 5;\r\n        this.observedState = null;\r\n        this.stepHeartbeat = -0.002;\r\n        this.LEAST_OPACITY = 0.25;\r\n        this.MAX_OPACITY = 0.5;\r\n    } \r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        const currentOpacity = this.threeDModel.children[0].material.opacity;\r\n        const newOpacity = currentOpacity - this.stepHeartbeat;\r\n        this.threeDModel.children[0].material.opacity = newOpacity;\r\n        if(newOpacity <= this.LEAST_OPACITY || newOpacity >= this.MAX_OPACITY){\r\n            this.stepHeartbeat *= -1;\r\n        }\r\n    }\r\n\r\n    \r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS, this.RADIUS, this.HEIGHT, 32 );\r\n            const material = new THREE.MeshBasicMaterial( { color: 0x00ff00, opacity: 0.4, transparent:true });\r\n            const checkpoint = new THREE.Mesh( geometry, material );\r\n            checkpoint.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(checkpoint);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS *= scale[0];\r\n            this.RADIUS *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","export default class LevelScore {\r\n\r\n    constructor(initialScore = 0){\r\n        this.score = initialScore;\r\n    }\r\n\r\n    alterScore(points){\r\n        if (isNaN(points)){\r\n            throw new Error(\"Solo se puede alterar el puntaje con números.\");\r\n        }\r\n        this.score += points;\r\n    }\r\n\r\n    getCurrentScore(){\r\n        return this.score;\r\n    }\r\n}","import * as THREE from \"three\";\r\nimport BoxPhysics from \"../LogicModel/Physics/PhysicsTypes/BoxPhysics\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport TrafficCone from \"../3DModels/TrafficCone\";\r\nimport CylinderPhysics from \"../LogicModel/Physics/PhysicsTypes/CylinderPhysics\";\r\nimport CustomGeometryPhysics from \"../LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics\";\r\nimport StraightStreet from \"../3DModels/StraightStreet\";\r\nimport Intersection from \"../3DModels/Intersection\";\r\nimport Curve from \"../3DModels/Curve\";\r\nimport TStreet from \"../3DModels/TStreet\";\r\nimport Checkpoint from \"../3DModels/Checkpoint\";\r\nimport LevelScore from \"./LevelScore\";\r\n\r\n\r\nconst SUM_FOR_CHECKPOINT = 1000;\r\nconst SUB_FOR_CONE = -100;\r\nconst INITIAL_SCORE = 0;\r\n\r\nexport default class LevelFactory {\r\n  constructor(scene, physicsWorld) {\r\n    this.scene = scene;\r\n    this.physicsWorld = physicsWorld;\r\n    this.levelScore = new LevelScore(INITIAL_SCORE);\r\n    this.physicsToUpdate = [];\r\n    this.objectsToAnimate = [];\r\n    this.STREET_TYPES = {\r\n      \"STRAIGHT\": this.createStreet.bind(this),\r\n      \"CURVE\": this.createCurve.bind(this),\r\n      \"T_STREET\": this.createTStreet.bind(this),\r\n      \"INTERSECTION\": this.createIntersection.bind(this)\r\n    };\r\n    this.OBJECTS = {\r\n      \"CONE\": this.createCone.bind(this)\r\n    };\r\n  }\r\n\r\n  updatePhysics() {\r\n    this.physicsToUpdate.forEach(function (phys) {\r\n      phys.updatePhysics();\r\n    });\r\n  }\r\n\r\n  animate() {\r\n    this.objectsToAnimate.forEach(function (object) {\r\n      object.animate();\r\n    });\r\n  }\r\n\r\n  async createRectangle(\r\n    position,\r\n    length,\r\n    width,\r\n    height,\r\n    rotation,\r\n    pathTexture,\r\n    Ammo,\r\n    normalMapPath = null\r\n  ) {\r\n    const texture = new THREE.TextureLoader().load(pathTexture);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(length, height);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n    });\r\n    if (normalMapPath) {\r\n      let normalTexture = new THREE.TextureLoader().load(normalMapPath);\r\n      normalTexture.repeat.set(length, height);\r\n      normalTexture.wrapS = THREE.RepeatWrapping;\r\n      normalTexture.wrapT = THREE.RepeatWrapping;\r\n      floorMaterial.normalMap = normalTexture;\r\n      floorMaterial.normalScale.set(10, 10);\r\n    }\r\n    const rampa = new THREE.BoxGeometry(length, width, height);\r\n    rampa.rotateX(rotation);\r\n    const quaternionRamp = new THREE.Quaternion();\r\n    quaternionRamp.setFromAxisAngle(new THREE.Vector3(1, 0, 0), rotation);\r\n\r\n    let rampPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      quaternionRamp, //Quaternion2\r\n      new Ammo.btVector3(0, 0, 0), //Inertia\r\n      0, //Mass\r\n      new THREE.Vector3(length, width, height), //Shape\r\n      this.physicsWorld, //Physics World\r\n      1000 // friction\r\n    );\r\n\r\n    await rampPhysics.buildAmmoPhysics();\r\n    //this.physicsToUpdate.push(rampPhysics);\r\n    let ramp = new THREE.Mesh(rampa, floorMaterial);\r\n    ramp.position.set(position[0], position[1], position[2]);\r\n    this.scene.add(ramp);\r\n  }\r\n\r\n  async createCone(position, Ammo, rotationY) {\r\n    let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n    cone = await cone.addToScene(this.scene, \"trafficCone\", position, [0.5, 0.5, 0.5]);\r\n    let conePhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationY),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      10,\r\n      new THREE.Vector3(\r\n        cone.RADIUS_BOTTOM,\r\n        cone.HEIGHT / 2,\r\n        cone.RADIUS_BOTTOM\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await conePhysics.buildAmmoPhysics();\r\n    conePhysics.rigidBody.threeObject = cone;\r\n    conePhysics.rigidBody.onCollide = () => {\r\n      this.levelScore.alterScore(SUB_FOR_CONE);\r\n      console.log(\"New score: \", this.levelScore.getCurrentScore());\r\n    };\r\n    this.physicsToUpdate.push(conePhysics);\r\n    conePhysics.attachObserver(cone);\r\n    this.objectsToAnimate.push(cone);\r\n  }\r\n\r\n  async buildStreetPhysics(position, street, Ammo, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(street.SIZE, 0.1, street.LONG),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingLeft = new THREE.Vector3(\r\n      (-8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let leftSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingLeft.x,\r\n        position[1] + movingLeft.y,\r\n        position[2] + movingLeft.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await leftSidewalkPhysics.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + street.SIDEWALK_HEIGHT / 2 + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildTStreetPhysics(position, Ammo, tStreet, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingOne = new THREE.Vector3(\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n        0,\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2\r\n      ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingOne.x,\r\n        position[1] + movingOne.y,\r\n        position[2] + movingOne.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const movingTwo = new THREE.Vector3(\r\n      -tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n      0,\r\n      tStreet.SIZE / 2 - tStreet.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingTwo.x,\r\n        position[1] + movingTwo.y,\r\n        position[2] + movingTwo.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * tStreet.SIZE) / 24,\r\n      tStreet.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * tStreet.SIZE) / 24,\r\n        tStreet.SIDEWALK_HEIGHT,\r\n        tStreet.SIZE\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildIntersectionPhysics(position, Ammo, intersection) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const cornerPhysicsThree = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsThree.buildAmmoPhysics();\r\n    const cornerPhysicsFour = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsFour.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildCurvePhysics(position, Ammo, curve, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingCorner = new THREE.Vector3(\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2,\r\n      0,\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingCorner.x,\r\n        position[1] + movingCorner.y,\r\n        position[2] + movingCorner.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysics.buildAmmoPhysics();\r\n    const longSidePhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometryLongSidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await longSidePhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async createStreet(position, Ammo, rotationY, segmentsQuantity) {\r\n    let street = new StraightStreet(\"textures/road.jpg\");\r\n    await street.addToScene(\r\n      this.scene,\r\n      \"street\",\r\n      position,\r\n      segmentsQuantity,\r\n      rotationY\r\n    );\r\n    await this.buildStreetPhysics(position, street, Ammo, rotationY);\r\n  }\r\n\r\n  async createIntersection(position, Ammo) {\r\n    let intersection = new Intersection(\"textures/CleanRoadNoBorder.jpg\");\r\n    await intersection.addToScene(this.scene, \"intersection\", position);\r\n    await this.buildIntersectionPhysics(position, Ammo, intersection);\r\n  }\r\n\r\n  async createCurve(position, Ammo, rotationY) {\r\n    let curve = new Curve(\"textures/CleanRoadNoBorder.jpg\");\r\n    await curve.addToScene(this.scene, \"curve\", position, rotationY);\r\n    await this.buildCurvePhysics(position, Ammo, curve, rotationY);\r\n  }\r\n\r\n  async createTStreet(position, Ammo, rotationY) {\r\n    let tStreet = new TStreet(\"textures/CleanRoadNoBorder.jpg\");\r\n    await tStreet.addToScene(this.scene, \"tStreet\", position, rotationY);\r\n    await this.buildTStreetPhysics(position, Ammo, tStreet, rotationY);\r\n  }\r\n\r\n\r\n  async createCheckpoint(position, checkpoints){\r\n    let checkpoint = new Checkpoint(checkpoints);\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await checkpoint.addToScene(this.scene, \"checkpoint\", position, [1,1,1]);\r\n    let checkpointPhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      1,\r\n      new THREE.Vector3(\r\n        checkpoint.RADIUS,\r\n        checkpoint.HEIGHT / 2,\r\n        checkpoint.RADIUS\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    this.physicsToUpdate.push(checkpointPhysics);\r\n    await checkpointPhysics.buildAmmoPhysics();\r\n    checkpointPhysics.rigidBody.threeObject = checkpoint;\r\n    checkpointPhysics.rigidBody.onCollide = async () => {\r\n      this.physicsWorld.removeRigidBody( checkpointPhysics.rigidyBody );\r\n      this.physicsWorld.removeCollisionObject( checkpointPhysics.rigidBody );\r\n      this.levelScore.alterScore(SUM_FOR_CHECKPOINT);\r\n      console.log(\"New score: \", this.levelScore.getCurrentScore());\r\n      this.scene.remove( checkpoint.threeDModel );\r\n      const lastElemUsed = checkpoints.shift();\r\n      if (lastElemUsed.end){\r\n        //TODO: Fin?\r\n      } else if(checkpoints.length > 0){\r\n        await this.createCheckpoint([checkpoints[0].position_x, 1, checkpoints[0].position_y], checkpoints);\r\n      }\r\n    };\r\n    checkpointPhysics.attachObserver(checkpoint);\r\n    this.objectsToAnimate.push(checkpoint);\r\n  }\r\n\r\n  async createLevel0() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.createRectangle(\r\n      [10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 8,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [-10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 4,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [0, 0, 0],\r\n      100,\r\n      0.1,\r\n      100,\r\n      0,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createCone([0, 0.5, 10], Ammo);\r\n    this.createCone([0, 0.5, 30], Ammo);\r\n    this.createCone([0, 0.5, 20], Ammo);\r\n  }\r\n\r\n\r\n  async instantiateStreet(position, rotation, long, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    let segments = (long[0] === 30 ? long[1] : long[0])/30;\r\n    await this.STREET_TYPES[type]([position[0], 0, position[1]], Ammo, rotation, segments);\r\n  }\r\n\r\n\r\n  async instantiateObject(position, rotation, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await this.OBJECTS[type]([position[0], 0.5, position[1]], Ammo, rotation);\r\n  }\r\n\r\n  async createLevelCustom(json) {\r\n    \r\n    for( let i=0 ; i<json.streets.length; i++ ){\r\n      let street = json.streets[i];\r\n      await this.instantiateStreet(\r\n        [street.position_x,street.position_y], \r\n        street.rotation, \r\n        [street.long_x, street.long_y], \r\n        street.type\r\n      );\r\n    }\r\n    for( let i=0 ; i<json.objects.length; i++){\r\n      let obj = json.objects[i];\r\n      await this.instantiateObject(\r\n        [obj.position_x,obj.position_y], \r\n        obj.rotation, \r\n        obj.type\r\n      );\r\n    }\r\n    await this.createCheckpoint(\r\n      [json.checkpoints[0].position_x, 1, json.checkpoints[0].position_y],\r\n      json.checkpoints\r\n    );\r\n    return {\r\n      physicsToUpdate: this.physicsToUpdate,\r\n      objectsToAnimate: this.objectsToAnimate\r\n    };\r\n    // json.checkpoints.forEach --> Instancio y guardo en un array\r\n    // onCollide de un checkpoint --> saco ese de la escena y agrego uno nuevo (El que le sigue)\r\n    // Si el checkpoint es el ultimo --> Fin de nivel? Solo si esta marcado con un bool de fin nivel o algo asi\r\n  }\r\n}\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import CarModel from \"../../3DModels/CarModel\";\r\nimport Car from \"../CarLogic/Car.js\";\r\n\r\nconst CLUTCH_PRESSED = 0;\r\nconst CLUTCH_NOT_PRESSED = 1;\r\n\r\n\r\nexport default class TrafficModel {\r\n\r\n    constructor(scene, physicsWorld){\r\n        this.SIZE_OF_TRAFFIC = 1;\r\n        this.timeSinceLastUpdate = Date.now();\r\n        this.trafficWorker = new Worker(\"./workers/TrafficWorker.js\");\r\n        this.currentTraffic = {};\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld;\r\n        this.lastID = 0;\r\n        \r\n        this.trafficWorker.onmessage = (message) => {\r\n            this.onReceiveResponseFromWorker(message);\r\n        }\r\n    }\r\n\r\n    async onReceiveResponseFromWorker(message){\r\n        this.updateCarEngines(message.data);\r\n    }\r\n\r\n\r\n    async onCollideWithCarOfTraffic () {\r\n        console.log(\"CHOCASTE AL AUTO RE LOCO\");\r\n    }\r\n\r\n\r\n    async generateCar(){\r\n        \r\n        let carLogic = new Car(this.physicsWorld, [18,2,15], false);\r\n        await carLogic.carPhysics.buildAmmoPhysics(); \r\n        \r\n        let carModel = new CarModel();\r\n        await carModel.addToScene(this.scene, `traffic_car_${this.lastID}`, false);\r\n\r\n        carLogic.carPhysics.rigidBody.threeObject = carModel;\r\n        carLogic.carPhysics.rigidBody.onCollide = this.onCollideWithCarOfTraffic;\r\n\r\n        carLogic.attachObserver(carModel);\r\n        carLogic.notifyObservers();\r\n        \r\n        this.currentTraffic[this.lastID] = {\r\n            object3D: carModel,\r\n            engine: carLogic\r\n        };\r\n        this.lastID += 1;\r\n        return carModel;\r\n    }\r\n\r\n\r\n    deleteCar(carId){\r\n        this.currentTraffic[carId].engine.removeObserver(this.currentTraffic[carId].object3D);\r\n        this.physicsWorld.removeRigidBody( this.currentTraffic[carId].engine.carPhysics.rigidyBody );\r\n        this.physicsWorld.removeCollisionObject( this.currentTraffic[carId].engine.carPhysics.rigidyBody );\r\n        this.scene.remove( this.currentTraffic[carId].object3D.threeDModel );\r\n        delete this.currentTraffic[carId];\r\n    }\r\n\r\n\r\n    async generateInitialTraffic(){\r\n        const objectsInTraffic = [];\r\n        for (let i=0; i<this.SIZE_OF_TRAFFIC; i++){\r\n            objectsInTraffic.push(await this.generateCar());\r\n        }\r\n        return objectsInTraffic;\r\n    }\r\n\r\n    updateTraffic(){\r\n        /*  \r\n            * Estado observado del auto del jugador (Podemos hacer que implemente observer y hacemos attach del carLogic).\r\n            * JSON del nivel\r\n            * El state de cada auto (Posicion, velocidad, RPM, y rotacion)\r\n        */\r\n        this.trafficWorker.postMessage([\"HELLO\"]);\r\n            //Puede devolverme ids que se desinstancian\r\n            //Y otros ids que tengan que acelerar/frenar, hacer un steer del volante particular\r\n            //Los cambios los manejamos nosotros en base a la velocidad y las RPM ponele... Automatico\r\n    }\r\n\r\n\r\n    /* carActions trae un object que tiene de key carId, y de value:\r\n        * deleteCar: boolean -> define si desinstancia el auto o no\r\n        * accelerate: float entre 0 y 1 -> define si acelera o no el auto\r\n        * brake: float entre 0 y 1 -> define si frena o no el auto\r\n        * steering: float entre -1 y 1 -> define la rotacion del volante\r\n    */ \r\n    updateCarEngines(carActions){\r\n        Object.keys(carActions).forEach(carId => {\r\n            if (carActions[carId].deleteCar){\r\n                this.deleteCar(carId);\r\n            }else{\r\n                this.currentTraffic[carId].engine.turnOnCar();\r\n                this.currentTraffic[carId].engine.turnDirection(carActions[carId].steering);\r\n                this.currentTraffic[carId].engine.changeShift(CLUTCH_PRESSED, 1);\r\n                this.currentTraffic[carId].engine.accelerate(CLUTCH_NOT_PRESSED, carActions[carId].accelerate);  \r\n                this.currentTraffic[carId].engine.brake(CLUTCH_PRESSED, carActions[carId].brake);\r\n                this.currentTraffic[carId].engine.update();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    update(){\r\n        this.updateTraffic();\r\n        Object.values(this.currentTraffic).forEach(carObject => {\r\n            carObject.object3D.animate();\r\n        });\r\n        \r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Camera from \"../Camera/Camera\";\r\nimport CarOffsetCamera from \"../Camera/CarOffsetCamera\";\r\nimport OrbitalCamera from \"../Camera/OribtalCamera\";\r\nimport CarModel from \"../3DModels/CarModel\";\r\nimport LogitechG29ControllerSingleton from \"../LogicModel/ControllerMapping/LogitechG29Controller\";\r\nimport XboxControllerSingleton from \"../LogicModel/ControllerMapping/XboxController\";\r\nimport Car from \"../LogicModel/CarLogic/Car\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport { Vector3 } from \"three\";\r\nimport LevelFactory from \"../Levels/LevelsFactory\";\r\nimport { VRButton } from \"../addons/VRbutton\";\r\nimport Stats from \"stats.js\";\r\nimport TrafficModel from \"../LogicModel/IA/TrafficModel\";\r\n\r\nexport default class ThreeScene extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentRPM: 0,\r\n      velocity: 0,\r\n      currentShift: 0,\r\n    };\r\n    this.physicsToUpdate = [];\r\n    localStorage.setItem(\"VR\", false);\r\n    this.gotAnyEvent = false;\r\n    this.stats = new Stats();\r\n    this.objectsToAnimate = [];\r\n    this.scene = new THREE.Scene();\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      powerPreference: \"high-performance\",\r\n      antialias: true,\r\n    });\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.clock = new THREE.Clock();\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.jsonLevel = this.props.jsonLevel;\r\n    this.generateGeneralElements = this.generateGeneralElements.bind(this);\r\n    this.animation = this.animation.bind(this);\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n    this.generateEvents = this.generateEvents.bind(this);\r\n    this.addPlayerCar = this.addPlayerCar.bind(this);\r\n    this.generateLevel = this.generateLevel.bind(this);\r\n    this.addVR = this.addVR.bind(this);\r\n\r\n    await this.generateGeneralElements();\r\n    await this.createAmmo();\r\n    await this.addGeneralLights();\r\n    await this.generateLevel();\r\n    await this.addPlayerCar();\r\n    await this.createTraffic();\r\n    this.generateEvents();\r\n    this.addVR();\r\n    this.renderer.setAnimationLoop(this.animation);\r\n  }\r\n\r\n  async addVR() {\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.renderer.xr.enabled = true;\r\n    this.renderer.xr.setFramebufferScaleFactor(0.75);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    document.body.appendChild(VRButton.createButton(this.renderer));\r\n  }\r\n\r\n  async generateLevel() {\r\n    this.level = new LevelFactory(this.scene, this.physicsWorld);\r\n    let updateDataLevel = await this.level.createLevelCustom(this.jsonLevel);\r\n    this.objectsToAnimate = [\r\n      ...this.objectsToAnimate,\r\n      ...updateDataLevel.objectsToAnimate,\r\n    ];\r\n    this.physicsToUpdate = [\r\n      ...this.physicsToUpdate,\r\n      ...updateDataLevel.physicsToUpdate,\r\n    ];\r\n    const geomField = new THREE.BoxGeometry(10000, 10000);\r\n    const texture = new THREE.TextureLoader().load(\"./textures/pasto.jpeg\");\r\n    texture.repeat.set(500, 500);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    const matField = new THREE.MeshBasicMaterial({ map: texture });\r\n    const meshField = new THREE.Mesh(geomField, matField);\r\n    meshField.position.set(0, -1, 0);\r\n    meshField.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\r\n    this.scene.add(meshField);\r\n  }\r\n\r\n  async generateGeneralElements() {\r\n    this.renderer.setClearColor(0x87cefa, 1);\r\n    this.camera = new Camera(this.renderer);\r\n    this.camera.addContainerToScene(this.scene);\r\n    this.stats.showPanel(0);\r\n    document.body.appendChild(this.stats.dom);\r\n  }\r\n\r\n  async addGeneralLights() {\r\n    this.scene.add(new THREE.AmbientLight(0xffffff, 0.5));\r\n  }\r\n\r\n  async addPlayerCar() {\r\n    this.carLogic = new Car(this.physicsWorld, [15,1,15], true);\r\n    await this.carLogic.carPhysics.buildAmmoPhysics();\r\n    let carModel = new CarModel();\r\n    this.carLogic.carPhysics.rigidBody.threeObject = carModel;\r\n    this.carLogic.attachObserver(carModel);\r\n    this.carLogic.attachObserver(this.camera);\r\n    this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n    this.carLogic.notifyObservers();\r\n  }\r\n\r\n\r\n  async createTraffic(){\r\n    this.trafficModel = new TrafficModel(this.scene, this.physicsWorld);\r\n    await this.trafficModel.generateInitialTraffic();\r\n  }\r\n\r\n  generateEvents() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    window.addEventListener(\"gamepaddisconnected\", function (e) {\r\n      LogitechG29ControllerSingleton.removeInstance();\r\n    });\r\n\r\n    document.addEventListener(\r\n      \"keydown\",\r\n      (event) => {\r\n        var numCamera = event.key;\r\n        this.carLogic.removeObserver(this.camera);\r\n        switch (numCamera) {\r\n          case \"1\":\r\n            this.camera = new Camera(this.renderer);\r\n            this.camera.addContainerToScene(this.scene);\r\n            break;\r\n          case \"2\":\r\n            this.camera = new OrbitalCamera(this.renderer);\r\n            break;\r\n          case \"3\":\r\n            this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n            break;\r\n          case \"4\":\r\n            this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n            break;\r\n          case \"5\":\r\n            this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.carLogic.notifyObservers();\r\n      },\r\n      false\r\n    );\r\n  }\r\n\r\n  async createAmmo() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.tempTransform = new Ammo.btTransform();\r\n    let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n    let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n    let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n    let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n    this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(\r\n      dispatcher,\r\n      overlappingPairCache,\r\n      solver,\r\n      collisionConfiguratation\r\n    );\r\n    this.physicsWorld.setGravity(new Ammo.btVector3(0, -9.8, 0));\r\n\r\n    const onEnterColission = Ammo.addFunction(async (cp, obj0, obj1) => {\r\n      let Ammo = await AmmoInstance.getInstance();\r\n      obj0 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj0, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      obj1 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj1, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      if (\r\n        obj0.threeObject &&\r\n        obj1.threeObject &&\r\n        (obj0.threeObject.threeDModel.name === \"driverCar\" ||\r\n          obj1.threeObject.threeDModel.name === \"driverCar\")\r\n      ) {\r\n        cp = Ammo.wrapPointer(cp, Ammo.btManifoldPoint);\r\n        const userPersistentData = cp.get_m_userPersistentData();\r\n        if (userPersistentData === 0) {\r\n            obj0.onCollide ? obj0.onCollide() : obj1.onCollide();\r\n            //Se cambia el contactId para denotar que la colision es constante. Para no restar puntos infinitamente.\r\n            const collisionContactID = 1; \r\n            cp.set_m_userPersistentData(collisionContactID);\r\n       }\r\n      }\r\n    });\r\n    this.physicsWorld.setContactProcessedCallback(onEnterColission);\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.camera.handleResize();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n  }\r\n\r\n  animation() {\r\n    this.stats.begin();\r\n    let deltaTime = this.clock.getDelta();\r\n    this.physicsWorld.stepSimulation(deltaTime, 10);\r\n    this.trafficModel.update();\r\n    this.objectsToAnimate.forEach(function (object) {\r\n      object.animate();\r\n    });\r\n    this.physicsToUpdate.forEach(function (phys) {\r\n      phys.updatePhysics();\r\n    });\r\n    this.camera.setPositionRelativeToObject();\r\n    XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n    this.setState({\r\n      velocity: this.carLogic.getSpeed(),\r\n      currentRPM: this.carLogic.getCurrentRPM(),\r\n      currentShift: this.carLogic.getCurrentShift(),\r\n    });\r\n    this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n    this.stats.end();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100vw\" }}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            right: \"10px\",\r\n            color: \"red\",\r\n            width: \"175px\",\r\n          }}\r\n          id=\"Acelerador\"\r\n        >\r\n          <p style={{ zIndex: 20, display: \"float\", fontWeight: \"bold\" }}>\r\n            Cambio Actual: {parseInt(this.state.currentShift)}\r\n          </p>\r\n        </div>\r\n        <div\r\n          ref={(mount) => {\r\n            this.mount = mount;\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <div id=\"button-box\" style={{position:\"absolute\", top:\"5%\", right:\"5%\"}}>\r\n          <div className={\"MainMenuTitle\"}>\r\n            <h1 style={{textAlign:\"center\", fontSize:\"7rem\"}}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/scene\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/configs\")}\r\n            >\r\n              Configuración\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"right\", paddingRight:30}}>Configurations</h3>\r\n                        </div>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const ItemsContext = createContext();\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport { ItemsContext } from '../LevelEditorContext/ItemsContext';\r\n\r\n\r\nconst allUnselected = {\r\n    \"cone\": null,\r\n    \"trapecio\": null,\r\n    \"street\": null\r\n};\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const {setLastSelectedItem, lastSelectedItem} = React.useContext(ItemsContext);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    //const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    const [itemSelected, setItemSelected] = React.useState(allUnselected);\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        const dictSelection = {...allUnselected};\r\n        dictSelection[item] = \"selected\";\r\n        setItemSelected(dictSelection);\r\n        setLastSelectedItem({\r\n            selectedItem: item,\r\n            scale: 1.0,\r\n            positionX: 0.0,\r\n            positionY: 0.0,\r\n            zIndex: lastSelectedItem ? lastSelectedItem.zIndex + 1 : 1\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"left\", paddingLeft:10}}>Items</h3>\r\n                        </div>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <Grid style={{justifyContent: \"center\", display: \"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n                        {\r\n                            Object.entries(itemSelected).map(([nameItem, isSelected]) => {\r\n                                return (\r\n                                    <img \r\n                                        alt={`${nameItem}`}\r\n                                        key={nameItem}\r\n                                        src={`${nameItem}.png`} \r\n                                        width={75}\r\n                                        height={75} \r\n                                        className={`imageLevelEditor ${isSelected}`} \r\n                                        onClick={() => handleSelection(nameItem)}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport {useState} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst MAX_WIDTH_INPUT = 40;\r\nconst MAX_HEIGHT_INPUT = 40;\r\n\r\nexport const InputsGrid = ({setGridDimensions, gridDimensions}) => {\r\n    const [InputWidth, setInputWidth] = useState(gridDimensions.width);\r\n    const [InputHeight, setInputHeight] = useState(gridDimensions.height);\r\n\r\n    const onSubmit = () =>{\r\n      setGridDimensions(\r\n        {\r\n          width: InputWidth, \r\n          height: InputHeight\r\n        }\r\n      );\r\n    }\r\n  return (\r\n    <Grid container  direction=\"row\" width={\"80%\"} marginLeft={'10%'}\r\n    justifyContent=\"space-evenly\"\r\n    alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={2}>\r\n        <p>Ancho:</p>\r\n          <input \r\n            value={InputWidth} \r\n            type=\"number\" \r\n            step=\"1\" \r\n          onChange={\r\n              (event) => {\r\n                let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                setInputWidth(value > MAX_WIDTH_INPUT ? MAX_WIDTH_INPUT : value);\r\n              }\r\n        } \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={2}>\r\n          <div>\r\n            <p>Alto:</p>\r\n            <input \r\n              value={InputHeight} \r\n              type=\"number\" \r\n              step=\"1\" \r\n              onChange={\r\n                (event) => {\r\n                  let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                  setInputHeight(value > MAX_HEIGHT_INPUT ? MAX_HEIGHT_INPUT : value);\r\n                  \r\n                }\r\n              }\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button variant=\"contained\" onClick={onSubmit}>Actualizar</Button>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n","\r\nconst STANDARD_BOX_LONG = 30;\r\n\r\nexport class AbstractStreet{\r\n\r\n    constructor(ninePerNineGrid, rowIndex, columnIndex){\r\n        const rightFilled = ninePerNineGrid[1][2].filled;\r\n        const topFilled = ninePerNineGrid[0][1].filled;\r\n        const botFilled = ninePerNineGrid[2][1].filled;\r\n        const leftFilled = ninePerNineGrid[1][0].filled;\r\n        this.rotation = this.determineStreetRotation(topFilled, leftFilled, botFilled, rightFilled);\r\n        this.long = [\r\n            STANDARD_BOX_LONG, \r\n            STANDARD_BOX_LONG\r\n        ];\r\n        this.position = [\r\n            rowIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2, \r\n            columnIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2\r\n        ];\r\n    }\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //To implement by each son\r\n    }\r\n\r\n    static sumValueForCell(cell){\r\n        return cell.filled ? 1 : 0\r\n    }\r\n\r\n    static calculateNeighboursFilled(ninePerNineGrid){\r\n        let rowCount = 0;\r\n        let columnCount = 0;\r\n        rowCount += AbstractStreet.sumValueForCell(ninePerNineGrid[1][0]) + AbstractStreet.sumValueForCell(ninePerNineGrid[1][2]);\r\n        columnCount += AbstractStreet.sumValueForCell(ninePerNineGrid[0][1]) + AbstractStreet.sumValueForCell(ninePerNineGrid[2][1]);\r\n        return [rowCount, columnCount];\r\n    }\r\n\r\n    isStraight(){\r\n        return false;\r\n    }\r\n\r\n\r\n    determineStreetRotation(){\r\n        //To be defined by sons\r\n    }\r\n\r\n    getAsJSON(){\r\n        return {\r\n            \"position_x\": this.position[0],\r\n            \"position_y\": this.position[1],\r\n            \"rotation\": this.rotation,\r\n            \"long_x\": this.long[0],\r\n            \"long_y\": this.long[1]\r\n        }\r\n    }\r\n\r\n    getPositionAsRowAndColumn(){\r\n        const row = (this.position[0] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        const col = (this.position[1] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        return [row, col];\r\n    }\r\n\r\n\r\n    getPositionX(){\r\n        return this.position[0];\r\n    }\r\n\r\n    getPositionY(){\r\n        return this.position[1];\r\n    }\r\n\r\n    getLongX(){\r\n        return this.long[0];\r\n    }\r\n\r\n    getLongY(){\r\n        return this.long[1];\r\n    }\r\n   \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_TO_LEFT\": Math.PI*3/2,\r\n    \"LEFT_TO_BOT\": 0,\r\n    \"BOT_TO_RIGHT\": Math.PI/2,\r\n    \"RIGHT_TO_TOP\": Math.PI\r\n}\r\n\r\nexport class Curve extends AbstractStreet{\r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //Tiene que tener solo 2 lindantes, y no ser en misma direccion.\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return (rowCount === 1 && columnCount === 1);\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left){\r\n            return POSSIBLE_ROTATIONS[\"TOP_TO_LEFT\"];\r\n        }\r\n        if(left && bot){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_TO_BOT\"];\r\n        }\r\n        if(bot && right){\r\n            return POSSIBLE_ROTATIONS[\"BOT_TO_RIGHT\"];\r\n        }\r\n        if(right && top){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_TO_TOP\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"CURVE\";\r\n        return dict;\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"HORIZONTAL\": 0,\r\n    \"VERTICAL\": Math.PI/2\r\n}\r\n\r\nexport class StraightStreet extends AbstractStreet {\r\n    \r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        \r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);\r\n        return(columnCount === 2 && rowCount === 0 )|| (columnCount === 0 && rowCount === 2 )\r\n\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && bot){\r\n            return POSSIBLE_ROTATIONS[\"VERTICAL\"];\r\n        }\r\n        if(left && right){\r\n            return POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n        }\r\n    }\r\n\r\n    isStraight(){\r\n        return true;\r\n    }\r\n\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"STRAIGHT\";\r\n        return dict;\r\n    }\r\n\r\n\r\n    isHorizontal(){\r\n        return this.rotation === POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_SINGLE\": Math.PI,\r\n    \"LEFT_SINGLE\": Math.PI*3/2,\r\n    \"BOT_SINGLE\": 0,\r\n    \"RIGHT_SINGLE\": Math.PI/2\r\n}\r\nexport class TStreet extends AbstractStreet {\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 1 )|| (columnCount === 1 && rowCount === 2 );\r\n    }\r\n    \r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left && right){\r\n            return POSSIBLE_ROTATIONS[\"TOP_SINGLE\"];\r\n        }\r\n        if(left && bot && top){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_SINGLE\"];\r\n        }\r\n        if(bot && right && left){\r\n            return POSSIBLE_ROTATIONS[\"BOT_SINGLE\"];\r\n        }\r\n        if(right && top && bot){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_SINGLE\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"T_STREET\";\r\n        return dict;\r\n    }\r\n\r\n}","export class StraightStreetLinker{\r\n\r\n    constructor(arrayOfStreets){\r\n        this.sections = this.segregateSections(arrayOfStreets);\r\n        this.sectionsAsJSON = this.linkSections();\r\n    }\r\n\r\n    //Genero un array para cada tramo recto, que contenga todas las StraightStreets de ese tramo\r\n    //Cada array de seccion va dentro de un array general y eso retornamos\r\n    segregateSections(arrayOfStreets){\r\n        // Recorro array de streets --> Armo un hashMap de filas, y otro de columnas.\r\n        // Para cada fila o columna, separar las subsecciones correspondientes.\r\n        const rows = {};\r\n        const cols = {};\r\n        let sectionsArray = [];\r\n\r\n        for(let i = 0; i < arrayOfStreets.length; i++){\r\n            let [streetRow, streetCol] = arrayOfStreets[i].getPositionAsRowAndColumn();\r\n            if( arrayOfStreets[i].isHorizontal() ){\r\n                if( !(streetRow in rows) ){\r\n                    rows[streetRow] = [];\r\n                }\r\n                rows[streetRow].push({\"idx\":streetCol, \"street\":arrayOfStreets[i]});\r\n            }\r\n            else{\r\n                if( !(streetCol in cols) ){\r\n                    cols[streetCol] = [];\r\n                }\r\n                cols[streetCol].push({\"idx\":streetRow, \"street\":arrayOfStreets[i]});\r\n            }\r\n        }\r\n        for(const [, value] of Object.entries(rows)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        for(const [, value] of Object.entries(cols)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        return sectionsArray;\r\n        \r\n    }\r\n\r\n\r\n    generateArraySubsections(array){\r\n        const finalArray = [];\r\n        //Sort de array por idx creciente... CREEMOS que ya viene sorteado - VERIFICAR.\r\n        for ( let i=0; i<array.length; i++){\r\n            //Primer elemento, o no son lindantes\r\n            if( i === 0 || (Math.abs(array[i][\"idx\"] - array[i-1][\"idx\"]) > 1)){\r\n                finalArray.push([array[i][\"street\"]]);\r\n            }else{\r\n                finalArray[finalArray.length - 1].push(array[i][\"street\"]);\r\n            }\r\n        }\r\n        return finalArray;\r\n    }\r\n\r\n\r\n    linkSections(){\r\n        const sectionsJSON = [];\r\n        for(let i = 0; i < this.sections.length; i++){\r\n            //Rotation is the same for all of them\r\n            const jsonForStreet = {\r\n                \"position_x\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionX(), 0)/this.sections[i].length,\r\n                \"position_y\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionY(), 0)/this.sections[i].length ,\r\n                \"rotation\": this.sections[i][0].rotation,\r\n                \"long_x\": this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongX(), 0) : this.sections[i][0].getLongX(),\r\n                \"long_y\": !this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongY(), 0) : this.sections[i][0].getLongY(),\r\n                \"type\": \"STRAIGHT\"\r\n            }\r\n            sectionsJSON.push(jsonForStreet);\r\n        }\r\n        return sectionsJSON;\r\n    }\r\n\r\n    getSectionsAsJSON(){\r\n        return this.sectionsAsJSON;\r\n    }\r\n}","import { StraightStreet, TStreet, Intersection, Curve, StraightStreetLinker } from \"./Street\";\r\n\r\nconst TYPES_OF_STREETS = [\r\n    StraightStreet,\r\n    Curve,\r\n    TStreet,\r\n    Intersection\r\n];\r\n\r\nexport class StreetFactory{\r\n    \r\n    constructor(levelGrid, isInfiniteLevel){\r\n        this.levelGrid = levelGrid;\r\n        this.getNinePerNineGrid = isInfiniteLevel ? this.getNinePerNineGridInfinite : this.getNinePerNineGridFinite;\r\n    }\r\n\r\n    constructStreets(){\r\n        const straightStreetsArray = [];\r\n        const curvedStreetsArray = [];\r\n        //ararco desde la parte superior izq\r\n        for ( let i = 0; i < this.levelGrid.length ; i++ ){\r\n            for ( let j = 0; j < this.levelGrid[i].length ; j++ ){\r\n                const myCell = this.levelGrid[i][j];\r\n                if (myCell.filled){\r\n                    const streetObject = this.defineTypeOfStreet(i, j);\r\n                    if (streetObject.isStraight()){\r\n                        straightStreetsArray.push(streetObject);\r\n                    }\r\n                    else{\r\n                        curvedStreetsArray.push(streetObject);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        const conjunctedStraightStreets = this.linkStraightStreets(straightStreetsArray);\r\n        let finalArray = curvedStreetsArray.map(street => street.getAsJSON());\r\n        return [...finalArray, ...conjunctedStraightStreets];\r\n        //const finalArray = [...conjunctedStraightStreets, ...curvedStreetsArray];\r\n        //return finalArray.map(street => street.getAsJSON());\r\n    }\r\n\r\n    getNinePerNineGridInfinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            const rowArray = [];\r\n            //Si es negativo es la ultima, y sino es el modulo entre el index y la cant de filas.\r\n            const realRow = i < 0 ? this.levelGrid.length-1 : i % this.levelGrid.length;\r\n            for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                //Simil row pero para columna\r\n                const realColumn = y < 0 ? this.levelGrid[realRow].length-1 : y % this.levelGrid[realRow].length;\r\n                rowArray.push(this.levelGrid[realRow][realColumn]);\r\n            }\r\n            matrix.push(rowArray);\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    getNinePerNineGridFinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        const celda_vacia = {\r\n            \"filled\": false,\r\n        }\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            //Casos Filas Imaginarias vacías\r\n            if (i < 0 || i === this.levelGrid.length){\r\n                matrix.push([celda_vacia, celda_vacia, celda_vacia]);\r\n            }else{\r\n                const rowArray = [];\r\n                for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                    if (y < 0 || y === this.levelGrid[i].length){\r\n                        rowArray.push(celda_vacia);\r\n                    }else{\r\n                        rowArray.push(this.levelGrid[i][y]);\r\n                    }\r\n                }\r\n                matrix.push(rowArray);\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    /* Example:\r\n        | | | | | | | |\r\n        | | | x x x | |\r\n        | | | x Y x | |\r\n        | | | x x x | |\r\n        | | | | | | | |\r\n    */\r\n    defineTypeOfStreet(row, column){\r\n        const ninePerNineGrid = this.getNinePerNineGrid(row, column);\r\n        let typeDefined = false;\r\n        let typeResult = undefined;\r\n        for ( let i = 0; i < TYPES_OF_STREETS.length && !typeDefined; i++){\r\n            typeDefined = TYPES_OF_STREETS[i].isValidNinePerNineGrid(ninePerNineGrid);\r\n            typeResult = TYPES_OF_STREETS[i];\r\n        }\r\n        if (!typeDefined){\r\n            throw new Error(\"No se pudo definir el tipo de calle dentro de los tipos validos.\");\r\n        }\r\n        //Row 0 es la de abajo del todo. Invertimos la row.\r\n        return new typeResult(ninePerNineGrid, this.levelGrid.length - 1 - row, column);\r\n    }\r\n\r\n\r\n    linkStraightStreets(straightStreetsArray){\r\n        const linker = new StraightStreetLinker(straightStreetsArray);\r\n        return linker.getSectionsAsJSON();\r\n    }\r\n    \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\n\r\nexport class Intersection extends AbstractStreet{\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 2 )\r\n    }\r\n\r\n    determineStreetRotation(){\r\n        //No sense to rotate it\r\n        return 0;\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"INTERSECTION\";\r\n        return dict;\r\n    }\r\n}\r\n","import { StreetFactory } from \"./StreetFactory\";\r\n\r\n\r\nexport function downloadObjectAsJson(exportObj, exportName){\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n};\r\n\r\n\r\n\r\n\r\nfunction getCountSidesPainted(levelGrid, i, j){\r\n    let aux = 0;\r\n    for (let x = i-1; x <= i+1 && x < levelGrid.length; x++){\r\n        if (x >= 0 && x !== i){\r\n            aux += levelGrid[x][j].filled ? 1 : 0;\r\n        }\r\n    }\r\n    for(let y = j-1; y <= j+1 && y < levelGrid[i].length; y++){\r\n        if(y >= 0 && y !== j){\r\n            aux += levelGrid[i][y].filled ? 1 : 0;\r\n        }\r\n    }\r\n    return aux;\r\n}\r\n\r\nfunction validateGridNotInfinite(levelGrid){\r\n    let valid = true;\r\n    let wrongCells = [];\r\n    for (let i=0; i<levelGrid.length; i++){\r\n        for (let j=0; j<levelGrid[i].length; j++){\r\n            if (levelGrid[i][j].filled && getCountSidesPainted(levelGrid, i,j) <= 1){\r\n                valid = false;\r\n                wrongCells.push([i,j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        \"valid\": valid,\r\n        \"wrongCells\": wrongCells\r\n    }\r\n}\r\n\r\nfunction validateGridInfinite(){\r\n\r\n}\r\n\r\nexport function validateGrid(levelGrid, isInfinite){\r\n    \r\n    return (isInfinite ? validateGridInfinite(levelGrid) : validateGridNotInfinite(levelGrid));\r\n    \r\n}\r\n\r\nexport function generateJSONFromGrid(levelGrid){\r\n    \r\n    const streetFactory = new StreetFactory(levelGrid);\r\n    const streetsArray = streetFactory.constructStreets();\r\n    const objectsAndStreets = {\r\n        \"streets\": streetsArray\r\n    };\r\n    return objectsAndStreets;\r\n\r\n    \r\n}","import { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport MemoryIcon from '@mui/icons-material/Memory';\r\nimport { downloadObjectAsJson, validateGrid, generateJSONFromGrid } from '../Resources/LevelEditor';\r\n\r\nconst COLORS = {\r\n  \"FILLED\": \"darkgray\",\r\n  \"EMPTY\": \"white\",\r\n  \"WARNING\": 'orange',\r\n};\r\n\r\nconst WIDTH_GRID_VIEW = 600;\r\nconst HEIGHT_GRID_VIEW = 600;\r\nconst LEFT_CLICK = 0;\r\nconst RIGHT_CLICK = 2;\r\n\r\n\r\nexport const LevelGrid = ({gridDimensions}) => {\r\n\r\n  const [levelGrid, setLevelGrid] = useState([]);\r\n  const [click, setClick] = useState(false);\r\n  const [rightClick, setRightClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let finalGrid = [];\r\n    for(let i=0; i<gridDimensions.height; i++){\r\n      let currentRow = [];\r\n      for(let j=0; j<gridDimensions.width; j++){\r\n        let newCell = {\r\n          \"filled\": false,\r\n          \"div_color\": COLORS[\"EMPTY\"]\r\n        }\r\n        currentRow.push(newCell);\r\n      }\r\n      finalGrid.push(currentRow);\r\n    }\r\n    setLevelGrid(finalGrid);\r\n  }, [gridDimensions.width, gridDimensions.height]);\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", (event) => {\r\n      event.preventDefault();\r\n      if(event.button === LEFT_CLICK){\r\n        setClick(false);\r\n      }else if (event.button === RIGHT_CLICK){\r\n        setRightClick(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"contextmenu\", (event) => { event.preventDefault(); });\r\n  }, []);\r\n\r\n\r\n  const arrayContains = (array, insiderArray) => {\r\n    if (!insiderArray || !array){\r\n      return false;\r\n    }\r\n    for (let i=0; i<array.length; i++){\r\n      let equals = true;\r\n      for (let j=0; j<array[i].length; j++){\r\n        try{\r\n          if(array[i][j] !== insiderArray[j]){\r\n            equals = false;\r\n          }\r\n        }catch(exc){j=array[i].length; equals=false;}\r\n      }\r\n      if(equals) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const onSubmitLevel = () =>{\r\n    let result = validateGrid(levelGrid);\r\n    let vec_aux = [...levelGrid];\r\n    for( let i=0; i< levelGrid.length; i++ ){\r\n      for( let j=0; j < levelGrid[i].length; j++){\r\n        if (vec_aux[i][j].filled){\r\n          vec_aux[i][j].div_color = arrayContains(result.wrongCells, [i,j]) ? COLORS[\"WARNING\"] : COLORS[\"FILLED\"];\r\n        }\r\n        \r\n      }\r\n    }\r\n    setLevelGrid(vec_aux);\r\n    if (result.valid) {\r\n      downloadObjectAsJson(generateJSONFromGrid(levelGrid), \"Driving_Simulator_Custom_Level.json\");\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const onEnterHoverWithClickCell = (row, col) => {\r\n    if(click){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(rightClick){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n  \r\n  const onClickCell = (row, col, btn_click) => {\r\n    if(btn_click === LEFT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(btn_click === RIGHT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        width: WIDTH_GRID_VIEW,\r\n        height: HEIGHT_GRID_VIEW,\r\n        marginTop: 25,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n      onMouseDown = {(event) => {\r\n        event.preventDefault();\r\n        if(event.button === LEFT_CLICK){\r\n          setClick(true);\r\n        }else if (event.button === RIGHT_CLICK){\r\n          setRightClick(true);\r\n        }\r\n      }}\r\n    >\r\n      {levelGrid.map((row, idx_row) => {\r\n        return(\r\n          <div \r\n            className=\"row-level-grid\" \r\n            id={`row_${idx_row}`}\r\n            key={`row_${idx_row}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: HEIGHT_GRID_VIEW/gridDimensions.height,\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            {row.map((cell, idx_col) => {\r\n              return (\r\n                <div \r\n                  className=\"cell-level-grid\" \r\n                  key={`cell_${idx_row}_${idx_col}`}\r\n                  id={`cell_${idx_row}_${idx_col}`} \r\n                  style={{\r\n                    backgroundColor: cell[\"div_color\"],\r\n                    width: `${100/gridDimensions.width}%`,\r\n                    height: \"100%\",\r\n                    border: \"1px solid black\"\r\n                  }} \r\n                  //onMouseEnter = {() => onEnterHoverWithClickCell(idx_row, idx_col)}\r\n                  onMouseMove = {(event) => {\r\n                    event.preventDefault();\r\n                    onEnterHoverWithClickCell(idx_row, idx_col);\r\n                  }}\r\n                  onMouseUp = {(event) => {\r\n                    onClickCell(idx_row, idx_col, event.button);\r\n                  }}\r\n                  \r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:40}}>\r\n        <Button variant=\"contained\" onClick={onSubmitLevel}  color=\"success\">\r\n          <MemoryIcon/> Procesar nivel...\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { ItemsContext } from './LevelEditorContext/ItemsContext';\r\nimport { useState } from 'react';\r\nimport { InputsGrid } from './Components/InputsGrid';\r\n\r\nimport { LevelGrid } from './Components/LevelGrid';\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = useState(false);\r\n  const [openConfigs, setOpenConfigs] = useState(false);\r\n\r\n  const [itemsInGrid, setItemsInGrid] = useState([]);\r\n\r\n  const [lastSelectedItem, setLastSelectedItem] = useState(null);\r\n\r\n  const [gridDimensions, setGridDimensions] = useState({width:20, height:20});\r\n\r\n  React.useEffect(() => {\r\n    if (lastSelectedItem !== null){\r\n      setItemsInGrid(currentItems => [...currentItems, lastSelectedItem]);\r\n    }\r\n  }, [lastSelectedItem]);\r\n\r\n  return (\r\n    <>\r\n      <ItemsContext.Provider value={{lastSelectedItem, setLastSelectedItem}}>\r\n        <div>\r\n          <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n            <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n              <AddIcon/>\r\n            </IconButton>\r\n            <h1>Driving Simulator - Level Editor</h1>\r\n            <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n              <InputsGrid setGridDimensions={setGridDimensions} gridDimensions={gridDimensions}></InputsGrid>\r\n              <LevelGrid gridDimensions = {gridDimensions}/>\r\n              {itemsInGrid.map((item, idx) => {\r\n                return(\r\n                  <span key={idx}></span>\r\n                  /*<img \r\n                    key={idx} \r\n                    src={`${item.selectedItem}.png`} \r\n                    width={item.scale*75} \r\n                    height={item.scale*75} \r\n                    style={{\r\n                      top:item.positionY, \r\n                      left:item.positionX,\r\n                      position: \"absolute\",\r\n                      zIndex: item.zIndex.toString()\r\n                    }}\r\n                    onClick={() => {console.log(`OPEN CONFIGS OF idx: ${idx}, obj: ${JSON.stringify(itemsInGrid[idx])}`)}}\r\n                  />*/\r\n                );\r\n              })}\r\n          </div>\r\n          \r\n        </div>\r\n        <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n        <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n      </ItemsContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","//export const API_URL = \"https://backend-bata340.cloud.okteto.net\";\r\nexport const API_URL = \"http://localhost:8001\";\r\nexport const VALID_REGEX_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;","import { createContext } from \"react\";\r\n\r\nexport const SessionContext  = createContext(undefined);","\r\nconst { createHash } = require('crypto');\r\n\r\nexport const hash = (string) => {\r\n  return createHash('sha256').update(string).digest('hex');\r\n}","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants'\r\nimport { SessionHooks } from '../Sessions/SessionHooks';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const LoginForm = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const { setSessionWithResponse } = SessionHooks();\r\n\r\n  const postLogin = async () => {\r\n    try{\r\n        const APIResponse = await fetch(\r\n            `${API_URL}/users/login`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": hash(password)\r\n                })\r\n            }\r\n        );\r\n        if (APIResponse.status !== 200){\r\n            const json = await APIResponse.json();\r\n            const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n            let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n            throw new Error(error_msg);\r\n        }\r\n        return APIResponse.json();\r\n    }catch(e){\r\n        throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  const validateFields = () => {\r\n    const errors = []\r\n    if (password === \"\"){\r\n        errors.push(\"El campo contraseña se encuentra vacío.\");\r\n    }\r\n    if (email === \"\"){\r\n        errors.push(\"El campo email se encuentra vacío\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n        errors.push(\"El email establecido es inválido.\");\r\n      }\r\n    if(errors.length > 0){\r\n        setError(errors);\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n  }\r\n\r\n\r\n  const submitLogin = async (event) => {\r\n    event.preventDefault();\r\n    if(!validateFields()){\r\n        return;\r\n    }\r\n    try{\r\n        const loginResponse = await postLogin();\r\n        setSessionWithResponse(loginResponse);\r\n        /*TODO: DAR UN FEEDBACK DE SESION INICIADA CORRECTAMENTE ANTES DE REDIR*/\r\n        navigate(\"/\");\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n\r\n  const postLoginGoogle = async (token) => {\r\n    const APIResponse = await fetch(\r\n        `${API_URL}/users/login_google`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"token\": token\r\n            })\r\n        }\r\n    );\r\n    if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n    }\r\n    return APIResponse.json();\r\n  }\r\n\r\n  const submitGoogleLogin = async (token) => {\r\n    try{\r\n        const responseAPI = await postLoginGoogle(token);\r\n        setSessionWithResponse(responseAPI);\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitLogin}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Iniciar Sesión</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type=\"text\" \r\n                    onChange={(event) => setEmail(event.target.value)} \r\n                    value={email} \r\n                    name=\"email\"\r\n                    label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPassword(event.target.value)} \r\n                    value={password} \r\n                    name=\"password\"\r\n                    label=\"Contraseña\"\r\n                    InputProps={{ // <-- This is where the toggle button is added.\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">Iniciar Sesión</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/signup\"}>¿No posees una cuenta? Registrate aquí...</Link>\r\n            </div>\r\n            <div style={{marginTop:20, display:\"flex\", justifyContent:\"center\", textAlign:\"center\", alignContent:\"center\"}}>\r\n                <GoogleLogin\r\n                    onSuccess={credentialResponse => {\r\n                        const OAuthToken = credentialResponse.credential;\r\n                        submitGoogleLogin(OAuthToken);\r\n                    }}\r\n                    onError={() => {\r\n                        setError(['El inicio de sesión con Google ha fallado.']);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n","import { useContext } from 'react';\r\nimport { SessionContext } from './SessionContext';\r\n\r\nexport const SessionHooks = () => {\r\n  \r\n    const { session, setSession } = useContext(SessionContext);\r\n\r\n\r\n    const setSessionWithResponse = (loginResponse) => {\r\n        setSession({\r\n            user: loginResponse.user,\r\n            jwt: loginResponse.jwt\r\n        });\r\n    }\r\n\r\n    const getUser = () => {\r\n        return session.user ? session.user : undefined;\r\n    }\r\n\r\n    const getJWT = () => {\r\n        return session.jwt ? session.jwt : undefined;\r\n    }\r\n\r\n    return({\r\n        setSessionWithResponse,\r\n        getUser,\r\n        getJWT\r\n    })\r\n}\r\n","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\n\r\n\r\nexport const SignUpForm = () => {\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState(\"\");\r\n  const [nameToShow, setNameToShow] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const validateFields = () => {\r\n    const errorArray = [];\r\n    if (email === \"\" || password === \"\" || passwordConfirmation === \"\" || nameToShow === \"\"){\r\n      errorArray.push(\"Aún existen campos sin completar.\")\r\n    }\r\n    if (password !== passwordConfirmation){\r\n      errorArray.push(\"Las contraseñas establecidas no coinciden.\");\r\n    }\r\n    if (password.length < 8){\r\n      errorArray.push(\"La contraseña debe tener una longitud mínima de 8 caracteres.\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n      errorArray.push(\"El email establecido es inválido.\");\r\n    }\r\n    if(errorArray.length > 0){\r\n      setError(errorArray);\r\n      return false;\r\n    }else{\r\n      setError(undefined);\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  const postSignUp = async () => {\r\n    const fetchUrl = `${API_URL}/users/register`;\r\n    try{\r\n      const APIResponse = await fetch(\r\n        fetchUrl,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n              \"email\": email,\r\n              \"password\": hash(password),\r\n              \"name_to_show\": nameToShow\r\n          })\r\n        }\r\n      );\r\n      if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      return APIResponse.json();\r\n  }catch(e){\r\n      throw new Error(e);\r\n  }\r\n  }\r\n\r\n\r\n  const submitSignUp = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateFields()){\r\n      return;\r\n    }\r\n    // eslint-disable-next-line\r\n    const res = await postSignUp();\r\n    /*TODO: Mostrar dialog de creado exitoso, y despues mandarlo al login...*/\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitSignUp}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            marginTop:40,\r\n            padding: 30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Crea tu cuenta</h1>\r\n            <div style={{display:\"flex\", justifyContent:\"center\"}}>\r\n                <img src=\"logo_transp.png\" width=\"25%\" alt=\"Driving Simulator Logo\"/>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setEmail(event.target.value)} \r\n                  value={email} \r\n                  name=\"email\"\r\n                  label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setNameToShow(event.target.value)} \r\n                  value={nameToShow} \r\n                  name=\"username\"\r\n                  label=\"Nombre para mostrar\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  onChange={(event) => setPassword(event.target.value)} \r\n                  value={password} \r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPasswordConfirmation(event.target.value)} \r\n                    value={passwordConfirmation} \r\n                    name=\"passwordConfirmation\"\r\n                    label=\"Repetir Contraseña\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">CREAR CUENTA</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <Link to={\"/login\"}>¿Ya poses una cuenta? Inicia sesión...</Link>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n","import { SessionContext } from \"./SessionContext\";\r\nimport { useState } from 'react'\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nexport const SessionProvider = ( {childElement} ) => {\r\n  \r\n    const [session, setSession] = useState({\r\n        user: undefined,\r\n        jwt: undefined\r\n    });\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"18785041157-s9ga39r0i6up45radtj3soo6je1pneon.apps.googleusercontent.com\">\r\n            <SessionContext.Provider value={{session, setSession}}>\r\n                {childElement}\r\n            </SessionContext.Provider>\r\n        </GoogleOAuthProvider>\r\n    )\r\n}\r\n","import ThreeScene from \"./Scene/ThreeScene\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MainMenu } from \"./Menus/MainMenu\";\r\nimport { LevelEditor } from \"./Menus/LevelEditor\";\r\nimport {\r\n  HashRouter as Router,\r\n  Routes as Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { LoginForm } from \"./Menus/Components/LoginForm\";\r\nimport { SignUpForm } from \"./Menus/Components/SignUpForm\";\r\nimport { SessionProvider } from \"./Menus/Sessions/SessionProvider\";\r\n\r\nfunction App() {\r\n  const [json, setJson] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Driving Simulator\";\r\n    fetch(\"./levels/basics.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setJson(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <SessionProvider\r\n      childElement={\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/scene\" element={json && <ThreeScene jsonLevel={json} />} />\r\n            <Route exact path=\"/\" element={<MainMenu />} />\r\n            <Route exact path=\"/level-editor\" element={<LevelEditor />} />\r\n            <Route exact path=\"/login\" element={<LoginForm />} />\r\n            <Route exact path=\"/signup\" element={<SignUpForm />} />\r\n          </Switch>\r\n        </Router>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n\r\n"],"sourceRoot":""}