{"version":3,"sources":["ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","addons/Reflector.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","Levels/LevelsFactory.js","addons/VRbutton.js","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/LevelEditorContext/ItemsContext.jsx","Menus/Components/ItemsDrawer.jsx","Menus/LevelEditor.jsx","App.jsx","index.jsx","LogicModel/ControllerMapping/GlobalControllerHandling.js"],"names":["Observer","this","observedState","newState","Camera","renderer","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","aspect","updateProjectionMatrix","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","positionToLookAt","x","y","z","offsetVector","CarOffsetCamera","positionCamera","cameraOffsetRotated","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","update","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","loadAsync","threeDObject","result","scene","objectName","scale","loadFBX","modelVariable","loadGLTF","name","Reflector","geometry","options","isReflector","type","PerspectiveCamera","scope","color","undefined","Color","textureWidth","textureHeight","clipBias","shader","ReflectorShader","multisample","reflectorPlane","Plane","normal","reflectorWorldPosition","cameraWorldPosition","rotationMatrix","Matrix4","lookAtPosition","clipPlane","Vector4","view","target","q","textureMatrix","virtualCamera","renderTarget","WebGLRenderTarget","samples","HalfFloatType","material","ShaderMaterial","uniforms","UniformsUtils","clone","fragmentShader","vertexShader","value","texture","onBeforeRender","setFromMatrixPosition","matrixWorld","extractRotation","applyMatrix4","subVectors","dot","reflect","negate","up","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","constant","sign","elements","w","multiplyScalar","visible","currentRenderTarget","getRenderTarget","currentXrEnabled","xr","enabled","currentShadowAutoUpdate","shadowMap","autoUpdate","currentOutputColorSpace","outputColorSpace","currentToneMapping","toneMapping","LinearSRGBColorSpace","NoToneMapping","setRenderTarget","state","buffers","depth","setMask","autoClear","clear","render","viewport","dispose","Mesh","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","path","absellipse","ellipseGeometry","retrovisor","rotateX","rotateY","leftMirrorGeometry","leftMirror","container","Object3D","rightMirrorGeometry","rightMirror","generateRetrovisor","generateLeftMirror","generateRightMirror","generateMirrors","moveCar","physicsShape","Geometry","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","quaternion","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","children","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorTwo","rotationYVectorOne","GlobalControllerHandling","require","default","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","i","length","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","brake","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","doActionByMapping","updateCar","axes","handleAccelerate","handleBrake","turnDirection","console","log","buttons","pressed","changeShiftBox","turnOnCar","changeShift","doActionsPedals","doActionsWheel","doActionsDPad","doActionsButtons","doActionsShifter","LogitechG29ControllerSingleton","Error","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","axe","doActionHotKeys","doActionsAxes","doActionsTriggers","XboxControllerSingleton","Observable","observers","observer","index","indexOf","splice","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","getInstance","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","width","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","worldTransformChassis","getChassisWorldTransform","chassis","engineForce","applyEngineForce","valueBrake","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringValue","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","valueAccelerator","changeValueInRPMCurve","TurnedOnEngine","CarEngine","engineState","valueClutch","shiftBox","shutDownEngine","clutchIsPressed","rpmReturn","accelerate","handleEngineShutdown","RPMModification","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","shift","newShift","oldVelocity","getCurrentRPM","normalFactorRPM","calculateNormalFactorRPM","XValue","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactorToDecrement","normalFactor","ManualBox","isValidShift","changeRPM","getValueForNewRPM","SemiAutomaticBox","Car","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","buildAmmoPhysics","engineCanApplyForce","setEngineForce","getEngineForce","getVelocity","turnOn","wheelAxesValue","setSteeringRotation","positionAndRotation","updatePhysics","getDataToAnimate","mode","getCurrentShift","GeneralPhysics","generateShape","setMargin","getMotionState","getWorldTransform","notifyObservers","velocityVector","velVectorBT","applyForce","CylinderPhysics","btCylinderShape","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","load","map","materialBox","geometryPlane","box","cone","BoxPhysics","LevelFactory","level","physicsToUpdate","objectsToAnimate","createLevel0","forEach","phys","object","animate","height","pathTexture","normalMapPath","wrapS","wrapT","repeat","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","ramp","addToScene","conePhysics","attachObserver","createRectangle","createCone","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","opacity","outline","zIndex","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","requestSession","optionalFeatures","setItem","end","showEnterVR","xrSessionIsGranted","click","catch","exception","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","ThreeScene","gotAnyEvent","alpha","setSize","setClearColor","outputEncoding","clock","createAmmo","ambientLight","sunLight","mirror","animation","bind","handleWindowResize","generateEvents","mount","appendChild","body","createButton","e","removeInstance","event","numCamera","key","removeObserver","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","handleResize","getCameraInstance","deltaTime","getDelta","setAnimationLoop","stepSimulation","setPositionRelativeToObject","checkEvents","setState","getSpeed","top","fontWeight","parseInt","ref","Component","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","MainMenu","navigate","useNavigate","right","className","fontSize","onClick","ConfigDrawer","openConfigs","handleDrawerClose","React","useState","open","setOpen","useTheme","useEffect","DrawerHeader","styled","theme","alignItems","spacing","mixins","toolbar","justifyContent","Grid","Drawer","sx","flexShrink","boxSizing","variant","anchor","paddingRight","Divider","ItemsContext","createContext","allUnselected","ItemsDrawer","openItems","useContext","setLastSelectedItem","lastSelectedItem","itemSelected","setItemSelected","paddingLeft","flexDirection","Object","entries","nameItem","isSelected","src","item","dictSelection","selectedItem","positionX","positionY","handleSelection","LevelEditor","setOpenItems","setOpenConfigs","widthGrid","heightGrid","itemsInGrid","setItemsInGrid","Provider","IconButton","margin","idx","toString","JSON","stringify","App","title","exact","ReactDOM","createRoot","getElementById","car","valueShift"],"mappings":";oQACqBA,EAAQ,WAEzB,aAAc,oBACVC,KAAKC,cAAgB,IACzB,CAIC,OAJA,mCAED,SAAOC,GACHF,KAAKC,cAAgBC,CACzB,KAAC,EARwB,GCMRC,EAAM,kDAGvB,WAAYC,GAAU,IAAD,EAMQ,OANR,qBACjB,gBACKC,OAAS,IAAIC,KAAyB,GAAIC,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KAC5F,EAAKC,MAAS,IAAIJ,KAClB,EAAKK,aAAc,IAAIL,MAAiBM,IAAI,EAAKP,QACjD,EAAKK,MAAME,IAAI,EAAKD,aACpB,EAAKP,SAAWA,EAAS,CAC7B,CAuCC,OAvCA,yCAGD,WACIJ,KAAKK,OAAOQ,OAASN,OAAOC,WAAWD,OAAOE,YAC9CT,KAAKK,OAAOS,wBAChB,GAAC,yCAGD,WACI,IAAMC,EAAe,IAAIC,KArBd,IAFA,IACA,IAuBX,GAAyB,MAAtBhB,KAAKC,cAIJ,GAHAc,EAAaE,gBAAgBjB,KAAKC,cAAciB,UAChDlB,KAAKU,MAAMS,SAASC,KAAKpB,KAAKC,cAAckB,UAAUP,IAAIG,GAExB,QAA9BM,aAAaC,QAAQ,MAAgB,CACrC,IAAIC,EAAqB,IAAIP,KAAQ,GAAG,KAAK,GAC7CO,EAAmBN,gBAAgBjB,KAAKC,cAAciB,UACtDlB,KAAKU,MAAMS,SAASP,IAAIW,GACxBvB,KAAKU,MAAMc,0BAA0BxB,KAAKC,cAAciB,UACxDlB,KAAKW,YAAYc,yBAAyB,IAAIT,KAAQ,EAAE,EAAE,GAAIU,KAAKC,IACnE3B,KAAKK,OAAOuB,OAAO,IAAIZ,KAAQ,EAAE,EAAE,GACvC,KAAK,CACD,IAAIa,EAAmB,IAAIb,KAAQhB,KAAKC,cAAckB,SAASW,EAAG9B,KAAKC,cAAckB,SAASY,EAAG/B,KAAKC,cAAckB,SAASa,GACzHC,EAAe,IAAIjB,KAAQ,EAAE,EAAE,GACnCiB,EAAahB,gBAAgBjB,KAAKC,cAAciB,UAChDW,EAAiBC,GAAKG,EAAaH,EACnCD,EAAiBE,GAAKE,EAAaF,EACnCF,EAAiBG,GAAKC,EAAaD,EACnChC,KAAKK,OAAOuB,OAAOC,EACvB,MAEA7B,KAAKK,OAAOuB,OAAO,IAAIZ,KAAQ,EAAE,EAAE,GAE3C,GAAC,+BAGD,WACI,OAAOhB,KAAKK,MAChB,KAAC,EAjDsB,CAASN,GCDfmC,EAAe,kDAGhC,WAAYC,GAAgB,IAAD,EAG4E,OAH5E,qBACvB,gBACKA,eAAiBA,EACtB,EAAK9B,OAAS,IAAIC,KAAyB,GAAIC,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KAAO,CACvG,CAyBC,OAzBA,yCAGD,WACIT,KAAKK,OAAOQ,OAASN,OAAOC,WAAWD,OAAOE,YAC9CT,KAAKK,OAAOS,wBAChB,GAAC,yCAGD,WACI,IAAMC,EAAe,IAAIC,KAAQhB,KAAKmC,eAAeL,EAAG9B,KAAKmC,eAAeJ,EAAG/B,KAAKmC,eAAeH,GACnG,GAAyB,MAAtBhC,KAAKC,cAAsB,CAC1B,IAAImC,EAAsBrB,EAAaE,gBAAgBjB,KAAKC,cAAciB,UAC1ElB,KAAKK,OAAOc,SAASC,KAAKpB,KAAKC,cAAckB,UAAUP,IAAIwB,GAC3D,IAAIP,EAAmB,IAAIb,KAAQhB,KAAKC,cAAckB,SAASW,EAAG9B,KAAKC,cAAckB,SAASY,EAAG/B,KAAKC,cAAckB,SAASa,GAC7HhC,KAAKK,OAAOuB,OAAOC,EACvB,MACI7B,KAAKK,OAAOuB,OAAO,IAAIZ,KAAQ,EAAE,EAAE,IACnChB,KAAKK,OAAOc,SAASC,KAAKL,EAElC,GAAC,+BAGD,WACI,OAAOf,KAAKK,MAChB,KAAC,EAhC+B,CAASN,G,QCAxBsC,EAAa,kDAE9B,WAAYjC,GAAU,IAAD,EAQiB,OARjB,qBACjB,gBACKC,OAAS,IAAIC,KAAyB,GAAIC,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KAC5F,EAAKL,SAAWA,EAChB,EAAKkC,SAAW,IAAIC,IAAc,EAAKlC,OAAQ,EAAKD,SAASoC,YAC7D,EAAKF,SAASG,eAAgB,EAC9B,EAAKH,SAASI,cAAgB,IAC9B,EAAKJ,SAASK,YAAa,EAC3B,EAAKtC,OAAOc,SAASyB,IAAI,EAAE,IAAI,GAAG,CACtC,CAkBC,OAlBA,yCAED,WACI5C,KAAKK,OAAOQ,OAASN,OAAOC,WAAWD,OAAOE,YAC9CT,KAAKK,OAAOS,wBAChB,GAAC,+BAED,WACI,OAAOd,KAAKK,MAChB,GAAC,yCAED,WACIL,KAAKsC,SAASO,SACW,MAAtB7C,KAAKC,cACJD,KAAKK,OAAOuB,OAAO5B,KAAKC,cAAwB,UAEhDD,KAAKK,OAAOuB,OAAO,IAAIZ,KAAQ,EAAE,EAAE,GAE3C,KAAC,EA7B6B,CAASjB,G,8BCFtB+C,EAAY,kDAE7B,WAAYC,GAAe,IAAD,EAKa,OALb,qBACtB,gBACKC,UAAY,IAAIC,IACrB,EAAKC,WAAa,IAAIC,IACtB,EAAKC,YAAc,KACnB,EAAKL,cAAgBA,EAAc,CACvC,CAuDC,OAvDA,qFAED,gGAC0C,OAAlCA,EAAgB/C,KAAK+C,cAAc,EAAD,OACjB/C,KAAKgD,UAAUK,UAChCN,GACA,SAAWO,GACP,OAAOA,CACX,IACF,KAAD,EALW,OAANC,EAAM,yBAMLA,GAAM,gDAEhB,kDAZA,IAYA,uEAED,gGAC0C,OAAlCR,EAAgB/C,KAAK+C,cAAc,EAAD,OACjB/C,KAAKkD,WAAWG,UACjCN,GACA,SAAWO,GACP,OAAOA,CACX,IACF,KAAD,EALW,OAANC,EAAM,yBAMLA,GAAM,gDAEhB,kDAZA,IAYA,yEAED,WAAiBC,EAAOC,EAAYtC,EAAUuC,GAAO,IAAF,gFAC3C1D,KAAKoD,YAAY,CAAC,EAAF,uCAGWpD,KAAK2D,UAAU,KAAD,EAArCC,EAAa,OACb5D,KAAKoD,YAAcQ,EAAc,iEAEV5D,KAAK6D,WAAW,KAAD,GAAtCD,EAAa,OACb5D,KAAKoD,YAAcQ,EAAcJ,MAAM,QAE3CxD,KAAKoD,YAAYU,KAAOL,EACxBzD,KAAKoD,YAAYjC,SAASW,EAAIX,EAAS,GACvCnB,KAAKoD,YAAYjC,SAASY,EAAIZ,EAAS,GACvCnB,KAAKoD,YAAYjC,SAASa,EAAIb,EAAS,GACvCnB,KAAKoD,YAAYM,MAAM5B,EAAI4B,EAAM,GACjC1D,KAAKoD,YAAYM,MAAM3B,EAAI2B,EAAM,GACjC1D,KAAKoD,YAAYM,MAAM1B,EAAI0B,EAAM,GACjCF,EAAM5C,IAAIZ,KAAKoD,aAAa,iCAEzBpD,MAAI,yDACd,yDAtBA,IAsBA,sBAED,WACI,OAAOA,KAAKoD,WAChB,GAEA,qBACA,WACI,OAAO,IACX,KAAC,EA/D4B,CAASrD,G,QCYpCgE,EAAS,kDAEd,WAAaC,GAA0B,IAAD,EAAfC,EAAO,uDAAG,CAAC,EAAC,qBAElC,cAAOD,IAEFE,aAAc,EAEnB,EAAKC,KAAO,YACZ,EAAK9D,OAAS,IAAI+D,KAAkB,KAAM,KAAM,GAAK,IAErD,IAAMC,EAAK,eAELC,OAA4BC,IAAlBN,EAAQK,MAAwB,IAAIE,IAAOP,EAAQK,OAAU,IAAIE,IAAO,SAClFC,EAAeR,EAAQQ,cAAgB,IACvCC,EAAgBT,EAAQS,eAAiB,IACzCC,EAAWV,EAAQU,UAAY,EAC/BC,EAASX,EAAQW,QAAUb,EAAUc,gBACrCC,OAAwCP,IAAxBN,EAAQa,YAA8Bb,EAAQa,YAAc,EAI5EC,EAAiB,IAAIC,KACrBC,EAAS,IAAIjE,KACbkE,EAAyB,IAAIlE,KAC7BmE,EAAsB,IAAInE,KAC1BoE,EAAiB,IAAIC,IACrBC,EAAiB,IAAItE,KAAS,EAAG,GAAK,GACtCuE,EAAY,IAAIC,KAEhBC,EAAO,IAAIzE,KACX0E,EAAS,IAAI1E,KACb2E,EAAI,IAAIH,KAERI,EAAgB,IAAIP,IACpBQ,EAAgB,EAAKxF,OAErByF,EAAe,IAAIC,KAAmBtB,EAAcC,EAAe,CAAEsB,QAASlB,EAAaX,KAAM8B,MAEjGC,EAAW,IAAIC,KAAgB,CACpCC,SAAUC,KAAcC,MAAO1B,EAAOwB,UACtCG,eAAgB3B,EAAO2B,eACvBC,aAAc5B,EAAO4B,eAyIpB,OAtIFN,EAASE,SAAoB,SAAGK,MAAQX,EAAaY,QACrDR,EAASE,SAAiB,MAAGK,MAAQnC,EACrC4B,EAASE,SAAyB,cAAGK,MAAQb,EAE7C,EAAKM,SAAWA,EAEhB,EAAKS,eAAiB,SAAWvG,EAAUoD,EAAOnD,GAcjD,GAZA6E,EAAuB0B,sBAAuBvC,EAAMwC,aACpD1B,EAAoByB,sBAAuBvG,EAAOwG,aAElDzB,EAAe0B,gBAAiBzC,EAAMwC,aAEtC5B,EAAOrC,IAAK,EAAG,EAAG,GAClBqC,EAAO8B,aAAc3B,GAErBK,EAAKuB,WAAY9B,EAAwBC,KAIpCM,EAAKwB,IAAKhC,GAAW,GAA1B,CAEAQ,EAAKyB,QAASjC,GAASkC,SACvB1B,EAAK7E,IAAKsE,GAEVE,EAAe0B,gBAAiBzG,EAAOwG,aAEvCvB,EAAe1C,IAAK,EAAG,GAAK,GAC5B0C,EAAeyB,aAAc3B,GAC7BE,EAAe1E,IAAKuE,GAEpBO,EAAOsB,WAAY9B,EAAwBI,GAC3CI,EAAOwB,QAASjC,GAASkC,SACzBzB,EAAO9E,IAAKsE,GAEZW,EAAc1E,SAASC,KAAMqE,GAC7BI,EAAcuB,GAAGxE,IAAK,EAAG,EAAG,GAC5BiD,EAAcuB,GAAGL,aAAc3B,GAC/BS,EAAcuB,GAAGF,QAASjC,GAC1BY,EAAcjE,OAAQ8D,GAEtBG,EAAcwB,IAAMhH,EAAOgH,IAE3BxB,EAAcyB,oBACdzB,EAAc0B,iBAAiBnG,KAAMf,EAAOkH,kBAG5C3B,EAAchD,IACb,GAAK,EAAK,EAAK,GACf,EAAK,GAAK,EAAK,GACf,EAAK,EAAK,GAAK,GACf,EAAK,EAAK,EAAK,GAEhBgD,EAAc4B,SAAU3B,EAAc0B,kBACtC3B,EAAc4B,SAAU3B,EAAc4B,oBACtC7B,EAAc4B,SAAUnD,EAAMwC,aAI9B9B,EAAe2C,8BAA+BzC,EAAQC,GACtDH,EAAegC,aAAclB,EAAc4B,oBAE3ClC,EAAU3C,IAAKmC,EAAeE,OAAOnD,EAAGiD,EAAeE,OAAOlD,EAAGgD,EAAeE,OAAOjD,EAAG+C,EAAe4C,UAEzG,IAAMJ,EAAmB1B,EAAc0B,iBAEvC5B,EAAE7D,GAAMJ,KAAKkG,KAAMrC,EAAUzD,GAAMyF,EAAiBM,SAAU,IAAQN,EAAiBM,SAAU,GACjGlC,EAAE5D,GAAML,KAAKkG,KAAMrC,EAAUxD,GAAMwF,EAAiBM,SAAU,IAAQN,EAAiBM,SAAU,GACjGlC,EAAE3D,GAAM,EACR2D,EAAEmC,GAAM,EAAMP,EAAiBM,SAAU,KAASN,EAAiBM,SAAU,IAG7EtC,EAAUwC,eAAgB,EAAMxC,EAAU0B,IAAKtB,IAG/C4B,EAAiBM,SAAU,GAAMtC,EAAUzD,EAC3CyF,EAAiBM,SAAU,GAAMtC,EAAUxD,EAC3CwF,EAAiBM,SAAU,IAAOtC,EAAUvD,EAAI,EAAM2C,EACtD4C,EAAiBM,SAAU,IAAOtC,EAAUuC,EAG5CzD,EAAM2D,SAAU,EAEhB,IAAMC,EAAsB7H,EAAS8H,kBAE/BC,EAAmB/H,EAASgI,GAAGC,QAC/BC,EAA0BlI,EAASmI,UAAUC,WAC7CC,EAA0BrI,EAASsI,iBACnCC,EAAqBvI,EAASwI,YAEpCxI,EAASgI,GAAGC,SAAU,EACtBjI,EAASmI,UAAUC,YAAa,EAChCpI,EAASsI,iBAAmBG,IAC5BzI,EAASwI,YAAcE,KAEvB1I,EAAS2I,gBAAiBjD,GAE1B1F,EAAS4I,MAAMC,QAAQC,MAAMC,SAAS,IAEV,IAAvB/I,EAASgJ,WAAsBhJ,EAASiJ,QAC7CjJ,EAASkJ,OAAQ9F,EAAOqC,GAExBzF,EAASgI,GAAGC,QAAUF,EACtB/H,EAASmI,UAAUC,WAAaF,EAChClI,EAASsI,iBAAmBD,EAC5BrI,EAASwI,YAAcD,EAEvBvI,EAAS2I,gBAAiBd,GAI1B,IAAMsB,EAAWlJ,EAAOkJ,cAENhF,IAAbgF,GAEJnJ,EAAS4I,MAAMO,SAAUA,GAI1BlF,EAAM2D,SAAU,CAnGoB,CAqGrC,EAEA,EAAKE,gBAAkB,WAEtB,OAAOpC,CAER,EAEA,EAAK0D,QAAU,WAEd1D,EAAa0D,UACbnF,EAAM6B,SAASsD,SAEhB,EAAE,CAEH,CAAC,sBArLa,CAASC,KAyLxB1F,EAAUc,gBAAkB,CAE3BuB,SAAU,CAET,MAAS,CACRK,MAAO,MAGR,SAAY,CACXA,MAAO,MAGR,cAAiB,CAChBA,MAAO,OAKTD,aAAwB,0UAiBxBD,eAA0B,kvBCtO3B,IAAMmD,EAAQ,CAAC,EAAK,EAAK,GACnBC,EAAW,CAAC,EAAE,EAAE,GAChBC,EAAwB,IACxBC,EAAmB,EAAE,KAMNC,EAAQ,kDAGzB,aAAc,IAAD,EASgB,OAThB,qBACT,cAAM,2CACDC,SAAW,KAChB,EAAKC,SAAW,KAChB,EAAKC,kBAAoB,EACzB,EAAKC,qBAAuB,EAC5B,EAAKC,qBAAuB,EAC5B,EAAKC,qBAAuB,EAC5B,EAAKC,qBAAuB,EAC5B,EAAKC,gBAAkB,EAAE,CAC7B,CA+QC,OA/QA,+CAGD,WACI,IAAMC,EAAO,IAAIjK,KACjBiK,EAAKC,WAAW,EAAE,EAAE,IAAK,KAAM,EAAW,EAAR9I,KAAKC,IAAM,EAAM,GACnD,IAAM8I,EAAkB,IAAInK,KAA2BiK,GACjDG,EAAa,IAAI3G,EACnB0G,EACA,CACIhG,aAAc,IACdC,cAAe,IACfC,SAAU,IACVG,YAAa,IAGrB4F,EAAWC,SAAUjJ,KAAKC,IAC1B+I,EAAWE,QAAS,IACpBF,EAAWvJ,SAASyB,IAAI,EAAE,KAAM,MAChC5C,KAAKoD,YAAYxC,IAAI8J,EACzB,GAAC,gCAGD,WACI,IAAMH,EAAO,IAAIjK,KACjBiK,EAAKC,WAAW,EAAE,EAAE,KAAM,KAAM,EAAW,EAAR9I,KAAKC,IAAM,EAAM,GACpD,IAAMkJ,EAAqB,IAAIvK,KAA2BiK,GACpDO,EAAa,IAAI/G,EACnB8G,EACA,CACIpG,aAAc,IACdC,cAAe,IACfC,SAAU,EACVG,YAAa,IAGjBiG,EAAY,IAAIC,KACpBD,EAAUnK,IAAIkK,GACdC,EAAU5J,SAASyB,IAAI,MAAO,KAAO,MACrCmI,EAAUJ,QAAiB,IAARjJ,KAAKC,IACxBmJ,EAAWF,SAAS,GAAGlJ,KAAKC,GAAG,KAC/B3B,KAAKoD,YAAYxC,IAAImK,EACzB,GAAC,iCAGD,WACI,IAAMR,EAAO,IAAIjK,KACjBiK,EAAKC,WAAW,EAAE,EAAE,KAAM,KAAM,EAAW,EAAR9I,KAAKC,IAAM,EAAM,GACpD,IAAMsJ,EAAsB,IAAI3K,KAA2BiK,GACrDW,EAAc,IAAInH,EACpBkH,EACA,CACIxG,aAAc,IACdC,cAAe,IACfC,SAAU,EACVG,YAAa,IAGjBiG,EAAY,IAAIC,KACpBD,EAAUnK,IAAIsK,GACdH,EAAU5J,SAASyB,KAAK,MAAO,KAAO,KACtCmI,EAAUJ,SAASjJ,KAAKC,GAAG,IAAID,KAAKC,GAAG,KACvCuJ,EAAYN,QAAQ,KAAKlJ,KAAKC,GAAG,KACjC3B,KAAKoD,YAAYxC,IAAImK,EACzB,GAAC,6BAGD,WACI/K,KAAKmL,qBACLnL,KAAKoL,qBACLpL,KAAKqL,qBACT,GAAC,yEAED,WAAiB7H,GAAO,OAAF,sJACKA,EAAO,YAAamG,EAAUD,GAAO,KAAF,EACnC,OAAvB1J,KAAKsL,kBAAkB,kBAChBtL,MAAI,gDACd,mDANA,IAMA,qBAGD,WACIA,KAAKuL,SAET,GAAC,4BAGD,SAAe/H,GACXxD,KAAKwL,aAAe,IAAIxK,KAAQ,EAAE,KAAK,GAEvC,IAAMyK,EAAW,IAAInL,IAAmBN,KAAKwL,aAAa1J,EAAG9B,KAAKwL,aAAazJ,EAAG/B,KAAKwL,aAAaxJ,GAC9F0E,EAAU,IAAIpG,IAAyB,CAACgE,MAAO,MACrDtE,KAAK0L,cAAgB,IAAIpL,IAAYmL,EAAU/E,GAC/C1G,KAAK0L,cAAcvK,SAASyB,IAAK,EAAE,EAAE,GACrCY,EAAM5C,IAAIZ,KAAK0L,eAEf,IAAMC,EAAgB,IAAIrL,IAAwB,IAAM,IAAM,IAAM,GAAI,IACxEqL,EAAcC,QAAQlK,KAAKC,GAAK,GAChC,IAAMkK,EAAe,IAAIvL,IAAyB,CAACgE,MAAO,WAC1DtE,KAAK8L,WAAc,IAAIxL,IAAYqL,EAAeE,GAClD7L,KAAK8L,WAAW3K,SAASyB,IAAK,EAAE,EAAE,GAClCY,EAAM5C,IAAIZ,KAAK8L,YAEf9L,KAAK+L,WAAc,IAAIzL,IAAYqL,EAAeE,GAClD7L,KAAK+L,WAAW5K,SAASyB,IAAK,EAAE,EAAE,GAClCY,EAAM5C,IAAIZ,KAAK+L,YAEf/L,KAAKgM,WAAc,IAAI1L,IAAYqL,EAAeE,GAClD7L,KAAKgM,WAAW7K,SAASyB,IAAK,EAAE,EAAE,GAClCY,EAAM5C,IAAIZ,KAAKgM,YAEfhM,KAAKiM,WAAc,IAAI3L,IAAYqL,EAAeE,GAClD7L,KAAKiM,WAAW9K,SAASyB,IAAK,EAAE,EAAE,GAClCY,EAAM5C,IAAIZ,KAAKiM,WACnB,GAEA,mCACA,WAE6B,MAAtBjM,KAAKC,gBACJD,KAAK0L,cAAcvK,SAASyB,IACxB5C,KAAKC,cAAwB,SAAE6B,EAC/B9B,KAAKC,cAAwB,SAAE8B,EAC/B/B,KAAKC,cAAwB,SAAE+B,GAEnChC,KAAK0L,cAAcQ,WAAWtJ,IAC1B5C,KAAKC,cAAwB,SAAE6B,EAC/B9B,KAAKC,cAAwB,SAAE8B,EAC/B/B,KAAKC,cAAwB,SAAE+B,EAC/BhC,KAAKC,cAAwB,SAAE6H,GAGnC9H,KAAK8L,WAAW3K,SAASyB,IACrB5C,KAAKC,cAAckM,WAAW,GAAa,SAAErK,EAC7C9B,KAAKC,cAAckM,WAAW,GAAa,SAAEpK,EAC7C/B,KAAKC,cAAckM,WAAW,GAAa,SAAEnK,GAEjDhC,KAAK8L,WAAWI,WAAWtJ,IACvB5C,KAAKC,cAAckM,WAAW,GAAa,SAAErK,EAC7C9B,KAAKC,cAAckM,WAAW,GAAa,SAAEpK,EAC7C/B,KAAKC,cAAckM,WAAW,GAAa,SAAEnK,EAC7ChC,KAAKC,cAAckM,WAAW,GAAa,SAAErE,GAGjD9H,KAAK+L,WAAW5K,SAASyB,IACrB5C,KAAKC,cAAckM,WAAW,GAAa,SAAErK,EAC7C9B,KAAKC,cAAckM,WAAW,GAAa,SAAEpK,EAC7C/B,KAAKC,cAAckM,WAAW,GAAa,SAAEnK,GAEjDhC,KAAK+L,WAAWG,WAAWtJ,IACvB5C,KAAKC,cAAckM,WAAW,GAAa,SAAErK,EAC7C9B,KAAKC,cAAckM,WAAW,GAAa,SAAEpK,EAC7C/B,KAAKC,cAAckM,WAAW,GAAa,SAAEnK,EAC7ChC,KAAKC,cAAckM,WAAW,GAAa,SAAErE,GAGjD9H,KAAKgM,WAAW7K,SAASyB,IACrB5C,KAAKC,cAAckM,WAAW,GAAa,SAAErK,EAC7C9B,KAAKC,cAAckM,WAAW,GAAa,SAAEpK,EAC7C/B,KAAKC,cAAckM,WAAW,GAAa,SAAEnK,GAEjDhC,KAAKgM,WAAWE,WAAWtJ,IACvB5C,KAAKC,cAAckM,WAAW,GAAa,SAAErK,EAC7C9B,KAAKC,cAAckM,WAAW,GAAa,SAAEpK,EAC7C/B,KAAKC,cAAckM,WAAW,GAAa,SAAEnK,EAC7ChC,KAAKC,cAAckM,WAAW,GAAa,SAAErE,GAGjD9H,KAAKiM,WAAW9K,SAASyB,IACrB5C,KAAKC,cAAckM,WAAW,GAAa,SAAErK,EAC7C9B,KAAKC,cAAckM,WAAW,GAAa,SAAEpK,EAC7C/B,KAAKC,cAAckM,WAAW,GAAa,SAAEnK,GAEjDhC,KAAKiM,WAAWC,WAAWtJ,IACvB5C,KAAKC,cAAckM,WAAW,GAAa,SAAErK,EAC7C9B,KAAKC,cAAckM,WAAW,GAAa,SAAEpK,EAC7C/B,KAAKC,cAAckM,WAAW,GAAa,SAAEnK,EAC7ChC,KAAKC,cAAckM,WAAW,GAAa,SAAErE,GAGzD,GAAC,qBAGD,WAC6B,MAAtB9H,KAAKC,gBACJD,KAAKoD,YAAYgJ,SAASC,YAAcrM,KAAKC,cAA2B,YACxED,KAAKoD,YAAYjC,SAASyB,IACtB5C,KAAKC,cAAwB,SAAE6B,EAC/B9B,KAAKC,cAAwB,SAAE8B,EAC/B/B,KAAKC,cAAwB,SAAE+B,GAGnChC,KAAKoD,YAAY8I,WAAWtJ,IACxB5C,KAAKC,cAAwB,SAAE6B,EAC/B9B,KAAKC,cAAwB,SAAE8B,EAC/B/B,KAAKC,cAAwB,SAAE+B,EAC/BhC,KAAKC,cAAwB,SAAE6H,GAEnC9H,KAAKiK,kBAAoBjK,KAAKC,cAAyB,UACvDD,KAAKsM,eACLtM,KAAKuM,sBACLvM,KAAKwM,uBAEb,GAAC,iCAGD,WACI,IAAIC,EAAgBzM,KAAKoD,YAAYsJ,SAASC,MAAK,SAAAC,GAAC,MAAe,mBAAXA,EAAE9I,IAAyB,IAC/E+I,EAAiB,IAAI7L,KAAQ,EAAE,EAAE,GAAG8L,eAAe,IAAI9L,KAAQ,EAAE,EAAE,IAhOlC,KAiOrCyL,EAAcM,aAAaF,GAAiB7M,KAAKoK,sBACjDqC,EAAcM,aAAaF,EAAyD,KAAxC7M,KAAKC,cAAiC,kBAAM,IAAIyB,KAAKC,GAAG,GACpG3B,KAAKoK,qBAAgE,KAAxCpK,KAAKC,cAAiC,kBAAM,IAAIyB,KAAKC,GAAG,CACzF,GAAC,kCAGD,WACI,IAAIqL,EAAoBhN,KAAKoD,YAAYsJ,SAASC,MAAK,SAAAC,GAAC,MAAe,SAAXA,EAAE9I,IAAe,IACzEmJ,EAAejN,KAAKoD,YAAYsJ,SAASC,MAAK,SAAAC,GAAC,MAAe,YAAXA,EAAE9I,IAAkB,IACrEoJ,GAAkBxL,KAAKyL,IAAInN,KAAKC,cAAwB,WAAI,IAAIyB,KAAKC,GAAG,KAzO3D,IA0ObyL,GAAkBpN,KAAKC,cAAmB,KAAG,IAAIyB,KAAKC,GAAG,KAzOjD,IA0OdqL,EAAkBD,aAAa,IAAI/L,KAAQ,EAAE,EAAE,IAAKhB,KAAKqK,sBACzD2C,EAAkBD,aAAa,IAAI/L,KAAQ,EAAE,EAAE,GAAIkM,GACnDD,EAAaF,aAAa,IAAI/L,KAAQ,EAAE,EAAE,IAAKhB,KAAKsK,iBACpD2C,EAAaF,aAAa,IAAI/L,KAAQ,EAAE,EAAE,GAAIoM,GAC9CpN,KAAKqK,qBAAuB6C,EAC5BlN,KAAKsK,gBAAkB8C,CAC3B,GAAC,0BAGD,WACI,IAAIC,EAAkBrN,KAAKoD,YAAYsJ,SAASC,MAAK,SAAAC,GAAC,MAAe,aAAXA,EAAE9I,IAAmB,IAC3EwJ,EAAiBtN,KAAKoD,YAAYsJ,SAASC,MAAK,SAAAC,GAAC,MAAe,UAAXA,EAAE9I,IAAgB,IACvEyJ,EAAiBvN,KAAKoD,YAAYsJ,SAASC,MAAK,SAAAC,GAAC,MAAe,aAAXA,EAAE9I,IAAmB,IAC1E0J,EAAgBxN,KAAKoD,YAAYsJ,SAASC,MAAK,SAAAC,GAAC,MAAe,aAAXA,EAAE9I,IAAmB,IAEzE2J,EAAqB,IAAIzM,KAAQ,EAAE,EAAE,GAAG8L,eACxC,IAAI9L,KAAQ,EAAE,EAAE,GAChBhB,KAAKkK,sBAELwD,EAAqB,IAAI1M,KAAQ,EAAE,EAAE,GAAG8L,eACxC,IAAI9L,KAAQ,EAAE,EAAE,IACfhB,KAAKkK,sBAIVoD,EAAeP,aAAaW,EAAoB1N,KAAKmK,sBACrDkD,EAAgBN,aAAaU,EAAoBzN,KAAKmK,sBAGtDmD,EAAe3C,QAAQ3K,KAAKC,cAAwB,SAAI4J,EA1QhC,GA2QxBwD,EAAgB1C,SAAS3K,KAAKC,cAAwB,SAAI4J,EA3QlC,GA4QxB0D,EAAe5C,SAAS3K,KAAKC,cAAwB,SAAI4J,EA5QjC,GA6QxB2D,EAAc7C,QAAQ3K,KAAKC,cAAwB,SAAI4J,EA7Q/B,GA+QxB4D,EAAqB,IAAIzM,KAAQ,EAAE,EAAE,GAAG8L,eACpC,IAAI9L,KAAQ,EAAE,EAAE,GAChBhB,KAAKkK,qBAAuBlK,KAAKC,cAAwB,SAAI4J,EAjRzC,GAmRxB6D,EAAqB,IAAI1M,KAAQ,EAAE,EAAE,GAAG8L,eACpC,IAAI9L,KAAQ,EAAE,EAAE,IACfhB,KAAKkK,qBAAuBlK,KAAKC,cAAwB,SAAI4J,EArR1C,GAyRxByD,EAAeP,aAAaW,GAAqB1N,KAAKC,cAAiC,kBAAE2J,GACzFyD,EAAgBN,aAAaU,GAAqBzN,KAAKC,cAAiC,kBAAE2J,GAC1F5J,KAAKmK,qBAAuBnK,KAAKC,cAAiC,kBAAE2J,EAEpE5J,KAAKkK,sBAAwBlK,KAAKC,cAAwB,SAAI4J,EA7RtC,EA8RrB7J,KAAKkK,sBAAgC,EAARxI,KAAKC,KACjC3B,KAAKkK,sBAAgC,EAARxI,KAAKC,GAE1C,KAAC,EA5RwB,CAASmB,GCfrB6K,EAA6BC,EAAQ,IAA9CC,QAaFC,EAAqB,WACvB,WAAY9D,GAAU,oBAClBhK,KAAKgK,SAAWA,EAChB,IAAM+D,EAAWC,UAAUC,YAAcD,UAAUC,cAAiBD,UAAUE,kBAAoBF,UAAUE,oBAAsB,GAClIlO,KAAKmO,QAAU,KACf,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IAC/BL,EAASK,IACPL,EAASK,GAAGE,GAAGC,WAAW,oCAC5BvO,KAAKmO,QAAUJ,EAASK,IAI9BpO,KAAKwO,QAAU,EACfxO,KAAKyO,aAAe,EACpBzO,KAAK0O,aAAe,EACpB1O,KAAK2O,eAAiB,EACtB3O,KAAK4O,YAAc,EACnB5O,KAAK6O,WAAa,EAClB7O,KAAK8O,SAAW,EAChB9O,KAAK+O,SAAW,EAChB/O,KAAKgP,YAAc,EACnBhP,KAAKiP,cAAgB,EACrBjP,KAAKkP,SAAW,GAChBlP,KAAKmP,SAAW,GAChBnP,KAAKoP,WAAa,GAClBpP,KAAKqP,YAAc,GACnBrP,KAAKsP,WAAa,GAClBtP,KAAKuP,YAAc,GACnBvP,KAAKwP,WAAa,GAClBxP,KAAKyP,WAAa,GAClBzP,KAAK0P,aAAe,GACpB1P,KAAK2P,WAAa,GAClB3P,KAAK4P,YAAc,GACnB5P,KAAK6P,kBAAoB,GACzB7P,KAAK8P,iBAAmB,GACxB9P,KAAK+P,MAAQ,GACb/P,KAAKgQ,SAAW,GAEhBhQ,KAAKiQ,eAAiB,GACtB,IAAI,IAAI7B,EAAE,EAAGA,GAAK,GAAIA,IAClBpO,KAAKiQ,eAAeC,MAAK,GAG7BlQ,KAAKmQ,UAAY,EACjBnQ,KAAKoQ,OAAS,EACdpQ,KAAKqQ,YAAc,EACnBrQ,KAAKsQ,MAAQ,EACbtQ,KAAKuQ,KAAO,EAGZvQ,KAAKwQ,aA5DG,EA6DRxQ,KAAKyQ,cA3DK,mBA4DVzQ,KAAK0Q,cA1DK,kBA2DV1Q,KAAK2Q,gBAzDM,kBA2DX3Q,KAAK4Q,YAAc,GACnB,IAAI,IAAIxC,EAAE,EAAGA,GAAK,EAAGA,IACjBpO,KAAK4Q,YAAYV,MAAK,GAG1BlQ,KAAK6Q,wBAA0B,IAAIlD,EAAyB3D,EAChE,CA2RC,OA3RA,gDAGD,WAEI,IADA,IAAM+D,EAAWC,UAAUC,YAAcD,UAAUC,cAAiBD,UAAUE,kBAAoBF,UAAUE,oBAAsB,GACzHE,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IAC7BL,EAASK,IACPL,EAASK,GAAGE,GAAGC,WAAW,oCAC5BvO,KAAKmO,QAAUJ,EAASK,GAIpC,GAAC,yBAGD,WACIpO,KAAKmO,QAAU,KACfnO,KAAK8Q,sBACc,MAAhB9Q,KAAKmO,SACJnO,KAAK+Q,oBAET/Q,KAAK6Q,wBAAwBG,WACjC,GAAC,6BAGD,WACI,IAAIZ,EAAM,SAAKpQ,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAW,GAC7CE,EAAK,SAAKtQ,KAAKmO,QAAQ8C,KAAKjR,KAAKsQ,OAAU,GAC/CA,EAAS,GAAKA,EAAQ,GAAK,EAC3B,IAAID,EAAW,SAAKrQ,KAAKmO,QAAQ8C,KAAKjR,KAAKqQ,aAAgB,GAC3DA,EAAe,GAAKA,EAAc,GAAK,EACvCrQ,KAAK6Q,wBAAwBK,iBAAiBd,EAAQC,GACtDrQ,KAAK6Q,wBAAwBM,YAAYf,EAAQE,EACrD,GAAC,4BAGD,WACItQ,KAAK6Q,wBAAwBO,cAAcpR,KAAKmO,QAAQ8C,KAAKjR,KAAKmQ,WACtE,GAAC,2BAGD,WACI,GAlHiB,qBAkHdnQ,KAAKmO,QAAQ8C,KAAKjR,KAAKuQ,MAEnBvQ,KAAKmO,QAAQ8C,KAAKjR,KAAKuQ,QAAUvQ,KAAKyQ,eAAkBzQ,KAAK4Q,YAhHlD,GAmHJ5Q,KAAKmO,QAAQ8C,KAAKjR,KAAKuQ,QAAUvQ,KAAKyQ,gBAC5CzQ,KAAK4Q,YApHK,IAoH4B,IAHtCS,QAAQC,IAAI,aACZtR,KAAK4Q,YAlHK,IAkH4B,GAKvC5Q,KAAKmO,QAAQ8C,KAAKjR,KAAKuQ,QAAUvQ,KAAK0Q,eAAkB1Q,KAAK4Q,YArHlD,GAwHJ5Q,KAAKmO,QAAQ8C,KAAKjR,KAAKuQ,QAAUvQ,KAAK0Q,gBAC5C1Q,KAAK4Q,YAzHK,IAyH4B,IAHtCS,QAAQC,IAAI,aACZtR,KAAK4Q,YAvHK,IAuH4B,GAKvC5Q,KAAKmO,QAAQ8C,KAAKjR,KAAKuQ,QAAUvQ,KAAK2Q,gBAAmB3Q,KAAK4Q,YA1HlD,GA6HL5Q,KAAKmO,QAAQ8C,KAAKjR,KAAKuQ,QAAUvQ,KAAK2Q,iBAC5C3Q,KAAK4Q,YA9HM,IA8H4B,IAHvCS,QAAQC,IAAI,cACZtR,KAAK4Q,YA5HM,IA4H4B,GAKxC5Q,KAAKmO,QAAQ8C,KAAKjR,KAAKuQ,QAAUvQ,KAAKwQ,aAAgBxQ,KAAK4Q,YAvIlD,GA0IF5Q,KAAKmO,QAAQ8C,KAAKjR,KAAKuQ,QAAUvQ,KAAKwQ,cAC5CxQ,KAAK4Q,YA3IG,IA2I4B,IAHpCS,QAAQC,IAAI,WACZtR,KAAK4Q,YAzIG,IAyI4B,QAKxC,IAAI,IAAIxC,EAAI,EAAGA,EAAIpO,KAAK4Q,YAAYvC,OAAQD,IACxCpO,KAAK4Q,YAAYxC,IAAK,CAGlC,GAAC,8BAGD,WAEQpO,KAAKmO,QAAQoD,QAAQvR,KAAKwO,SAASgD,UAAYxR,KAAKiQ,eAAejQ,KAAKwO,UACxE6C,QAAQC,IAAI,WACZtR,KAAKiQ,eAAejQ,KAAKwO,UAAW,GAC9BxO,KAAKmO,QAAQoD,QAAQvR,KAAKwO,SAASgD,UACzCxR,KAAKiQ,eAAejQ,KAAKwO,UAAW,GAIpCxO,KAAKmO,QAAQoD,QAAQvR,KAAK2O,gBAAgB6C,UAAYxR,KAAKiQ,eAAejQ,KAAK2O,iBAC/E0C,QAAQC,IAAI,mBACZtR,KAAKiQ,eAAejQ,KAAK2O,iBAAkB,GACrC3O,KAAKmO,QAAQoD,QAAQvR,KAAK2O,gBAAgB6C,UAChDxR,KAAKiQ,eAAejQ,KAAK2O,iBAAkB,GAI3C3O,KAAKmO,QAAQoD,QAAQvR,KAAK0O,cAAc8C,UAAYxR,KAAKiQ,eAAejQ,KAAK0O,eAC7E2C,QAAQC,IAAI,iBACZtR,KAAKiQ,eAAejQ,KAAK0O,eAAgB,GACnC1O,KAAKmO,QAAQoD,QAAQvR,KAAK0O,cAAc8C,UAC9CxR,KAAKiQ,eAAejQ,KAAK0O,eAAgB,GAIzC1O,KAAKmO,QAAQoD,QAAQvR,KAAKyO,cAAc+C,UAAYxR,KAAKiQ,eAAejQ,KAAKyO,eAC7E4C,QAAQC,IAAI,kBACZtR,KAAKiQ,eAAejQ,KAAKyO,eAAgB,GACnCzO,KAAKmO,QAAQoD,QAAQvR,KAAKyO,cAAc+C,UAC9CxR,KAAKiQ,eAAejQ,KAAKyO,eAAgB,GAIzCzO,KAAKmO,QAAQoD,QAAQvR,KAAKgQ,UAAUwB,UAAYxR,KAAKiQ,eAAejQ,KAAKgQ,WACzEhQ,KAAKgK,SAASyH,eAAe,UAC7BzR,KAAKiQ,eAAejQ,KAAKgQ,WAAY,GAC/BhQ,KAAKmO,QAAQoD,QAAQvR,KAAKgQ,UAAUwB,UAC1CxR,KAAKiQ,eAAejQ,KAAKgQ,WAAY,GAIrChQ,KAAKmO,QAAQoD,QAAQvR,KAAK2P,YAAY6B,UAAYxR,KAAKiQ,eAAejQ,KAAK2P,aAC3E0B,QAAQC,IAAI,WACZtR,KAAKiQ,eAAejQ,KAAK2P,aAAc,GACjC3P,KAAKmO,QAAQoD,QAAQvR,KAAK2P,YAAY6B,UAC5CxR,KAAKiQ,eAAejQ,KAAK2P,aAAc,GAIvC3P,KAAKmO,QAAQoD,QAAQvR,KAAK4P,aAAa4B,UAAYxR,KAAKiQ,eAAejQ,KAAK4P,cAC5EyB,QAAQC,IAAI,WACZtR,KAAKiQ,eAAejQ,KAAK4P,cAAe,GAClC5P,KAAKmO,QAAQoD,QAAQvR,KAAK4P,aAAa4B,UAC7CxR,KAAKiQ,eAAejQ,KAAK4P,cAAe,GAIxC5P,KAAKmO,QAAQoD,QAAQvR,KAAK+O,UAAUyC,UAAYxR,KAAKiQ,eAAejQ,KAAK+O,WACzEsC,QAAQC,IAAI,YACZtR,KAAKiQ,eAAejQ,KAAK+O,WAAY,GAC/B/O,KAAKmO,QAAQoD,QAAQvR,KAAK+O,UAAUyC,UAC1CxR,KAAKiQ,eAAejQ,KAAK+O,WAAY,GAIrC/O,KAAKmO,QAAQoD,QAAQvR,KAAKmP,UAAUqC,UAAYxR,KAAKiQ,eAAejQ,KAAKmP,WACzEkC,QAAQC,IAAI,YACZtR,KAAKiQ,eAAejQ,KAAKmP,WAAY,GAC/BnP,KAAKmO,QAAQoD,QAAQvR,KAAKmP,UAAUqC,UAC1CxR,KAAKiQ,eAAejQ,KAAKmP,WAAY,GAIrCnP,KAAKmO,QAAQoD,QAAQvR,KAAK8O,UAAU0C,UAAYxR,KAAKiQ,eAAejQ,KAAK8O,WACzE9O,KAAK6Q,wBAAwBa,YAC7B1R,KAAKiQ,eAAejQ,KAAK8O,WAAY,GAC/B9O,KAAKmO,QAAQoD,QAAQvR,KAAK8O,UAAU0C,UAC1CxR,KAAKiQ,eAAejQ,KAAK8O,WAAY,GAIrC9O,KAAKmO,QAAQoD,QAAQvR,KAAKkP,UAAUsC,UAAYxR,KAAKiQ,eAAejQ,KAAKkP,WACzEmC,QAAQC,IAAI,YAChBtR,KAAKiQ,eAAejQ,KAAKkP,WAAY,GAC3BlP,KAAKmO,QAAQoD,QAAQvR,KAAKkP,UAAUsC,UAC1CxR,KAAKiQ,eAAejQ,KAAKkP,WAAY,GAIrClP,KAAKmO,QAAQoD,QAAQvR,KAAK+P,OAAOyB,UAAYxR,KAAKiQ,eAAejQ,KAAK+P,QACtEsB,QAAQC,IAAI,eACZtR,KAAKiQ,eAAejQ,KAAK+P,QAAS,GAC5B/P,KAAKmO,QAAQoD,QAAQvR,KAAK+P,OAAOyB,UACvCxR,KAAKiQ,eAAejQ,KAAK+P,QAAS,GAIlC/P,KAAKmO,QAAQoD,QAAQvR,KAAKgP,aAAawC,UAAYxR,KAAKiQ,eAAejQ,KAAKgP,cAC5EqC,QAAQC,IAAI,eACZtR,KAAKiQ,eAAejQ,KAAKgP,cAAe,GAClChP,KAAKmO,QAAQoD,QAAQvR,KAAKgP,aAAawC,UAC7CxR,KAAKiQ,eAAejQ,KAAKgP,cAAe,GAIxChP,KAAKmO,QAAQoD,QAAQvR,KAAKiP,eAAeuC,UAAYxR,KAAKiQ,eAAejQ,KAAKiP,gBAC9EoC,QAAQC,IAAI,iBACZtR,KAAKiQ,eAAejQ,KAAKiP,gBAAiB,GACpCjP,KAAKmO,QAAQoD,QAAQvR,KAAKiP,eAAeuC,UAC/CxR,KAAKiQ,eAAejQ,KAAKiP,gBAAiB,GAI1CjP,KAAKmO,QAAQoD,QAAQvR,KAAK6O,YAAY2C,UAAYxR,KAAKiQ,eAAejQ,KAAK6O,aAC3EwC,QAAQC,IAAI,qBACZtR,KAAKiQ,eAAejQ,KAAK6O,aAAc,GACjC7O,KAAKmO,QAAQoD,QAAQvR,KAAK6O,YAAY2C,UAC5CxR,KAAKiQ,eAAejQ,KAAK6O,aAAc,GAIvC7O,KAAKmO,QAAQoD,QAAQvR,KAAK4O,aAAa4C,UAAYxR,KAAKiQ,eAAejQ,KAAK4O,cAC5EyC,QAAQC,IAAI,sBACZtR,KAAKiQ,eAAejQ,KAAK4O,cAAe,GAClC5O,KAAKmO,QAAQoD,QAAQvR,KAAK4O,aAAa4C,UAC7CxR,KAAKiQ,eAAejQ,KAAK4O,cAAe,GAIxC5O,KAAKmO,QAAQoD,QAAQvR,KAAK8P,kBAAkB0B,UAAYxR,KAAKiQ,eAAejQ,KAAK8P,mBACjFuB,QAAQC,IAAI,aACZtR,KAAKiQ,eAAejQ,KAAK8P,mBAAoB,GACvC9P,KAAKmO,QAAQoD,QAAQvR,KAAK8P,kBAAkB0B,UAClDxR,KAAKiQ,eAAejQ,KAAK8P,mBAAoB,GAE7C9P,KAAKmO,QAAQoD,QAAQvR,KAAK6P,mBAAmB2B,UAAYxR,KAAKiQ,eAAejQ,KAAK6P,oBAClFwB,QAAQC,IAAI,aACZtR,KAAKiQ,eAAejQ,KAAK6P,oBAAqB,GACxC7P,KAAKmO,QAAQoD,QAAQvR,KAAK6P,mBAAmB2B,UACnDxR,KAAKiQ,eAAejQ,KAAK6P,oBAAqB,EAEtD,GAAC,8BAGD,WACQ7P,KAAKmO,QAAQoD,QAAQvR,KAAKoP,YAAYoC,UAAYxR,KAAKiQ,eAAejQ,KAAKoP,aAC3EpP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKoP,aAAc,IACjCpP,KAAKmO,QAAQoD,QAAQvR,KAAKoP,YAAYoC,SAAWxR,KAAKiQ,eAAejQ,KAAKoP,cAChFpP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKoP,aAAc,GAEvCpP,KAAKmO,QAAQoD,QAAQvR,KAAKqP,aAAamC,UAAYxR,KAAKiQ,eAAejQ,KAAKqP,cAC5ErP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKqP,cAAe,IAClCrP,KAAKmO,QAAQoD,QAAQvR,KAAKqP,aAAamC,SAAWxR,KAAKiQ,eAAejQ,KAAKqP,eACjFrP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKqP,cAAe,GAExCrP,KAAKmO,QAAQoD,QAAQvR,KAAKsP,YAAYkC,UAAYxR,KAAKiQ,eAAejQ,KAAKsP,aAC3EtP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKsP,aAAc,IACjCtP,KAAKmO,QAAQoD,QAAQvR,KAAKsP,YAAYkC,SAAWxR,KAAKiQ,eAAejQ,KAAKsP,cAChFtP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKsP,aAAc,GAEvCtP,KAAKmO,QAAQoD,QAAQvR,KAAKuP,aAAaiC,UAAYxR,KAAKiQ,eAAejQ,KAAKuP,cAC5EvP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKuP,cAAe,IAClCvP,KAAKmO,QAAQoD,QAAQvR,KAAKuP,aAAaiC,SAAWxR,KAAKiQ,eAAejQ,KAAKuP,eACjFvP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKuP,cAAe,GAExCvP,KAAKmO,QAAQoD,QAAQvR,KAAKwP,YAAYgC,UAAYxR,KAAKiQ,eAAejQ,KAAKwP,aAC3ExP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKwP,aAAc,IACjCxP,KAAKmO,QAAQoD,QAAQvR,KAAKwP,YAAYgC,SAAWxR,KAAKiQ,eAAejQ,KAAKwP,cAChFxP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKwP,aAAc,GAEvCxP,KAAKmO,QAAQoD,QAAQvR,KAAKyP,YAAY+B,UAAYxR,KAAKiQ,eAAejQ,KAAKyP,aAC3EzP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKyP,aAAc,IACjCzP,KAAKmO,QAAQoD,QAAQvR,KAAKyP,YAAY+B,SAAWxR,KAAKiQ,eAAejQ,KAAKyP,cAChFzP,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAKyP,aAAc,GAEvCzP,KAAKmO,QAAQoD,QAAQvR,KAAK0P,cAAc8B,UAAYxR,KAAKiQ,eAAejQ,KAAK0P,eAC7E1P,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,SAAU,GAC1EpQ,KAAKiQ,eAAejQ,KAAK0P,eAAgB,IACnC1P,KAAKmO,QAAQoD,QAAQvR,KAAK0P,cAAc8B,SAAWxR,KAAKiQ,eAAejQ,KAAK0P,gBAClF1P,KAAK6Q,wBAAwBc,YAAY3R,KAAKmO,QAAQ8C,KAAKjR,KAAKoQ,QAAS,GACzEpQ,KAAKiQ,eAAejQ,KAAK0P,eAAgB,EAEjD,GAAC,+BAGD,WACI1P,KAAK4R,kBACL5R,KAAK6R,iBACL7R,KAAK8R,gBACL9R,KAAK+R,mBACL/R,KAAKgS,kBACT,KAAC,EAxVsB,GA8VNC,EAA8B,WAI/C,aACI,MADW,oBACL,IAAIC,MAAM,0DACpB,CAOC,OAPA,6CAED,SAAmBlI,GAIf,OAHKiI,EAA+BE,WAChCF,EAA+BE,SAAW,IAAIrE,EAAsB9D,IAEjEiI,EAA+BE,QAC1C,KAAC,EAb8C,GC1WlCxE,EAA6BC,EAAQ,IAA9CC,QAEFuE,EAAc,GAIdC,EAAc,WAChB,WAAYC,GAAM,oBACd,IAAMvE,EAAWC,UAAUC,YAAcD,UAAUC,cAAiBD,UAAUE,kBAAoBF,UAAUE,oBAAsB,GAClIlO,KAAKmO,QAAU,KACf,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IAC/BL,EAASK,IACPL,EAASK,GAAGE,GAAGC,WAAW,UAC5BvO,KAAKmO,QAAUJ,EAASK,IAI9BpO,KAAKuS,QAAU,EACfvS,KAAKwS,QAAU,EACfxS,KAAKwO,QAAU,EACfxO,KAAKyS,QAAU,EACfzS,KAAK0S,SAAW,EAChB1S,KAAK2S,SAAW,EAChB3S,KAAK+O,SAAW,EAChB/O,KAAK8O,SAAW,EAChB9O,KAAKgP,YAAc,EACnBhP,KAAK4S,aAAe,EACpB5S,KAAKmP,SAAW,GAChBnP,KAAKkP,SAAW,GAChBlP,KAAK6S,MAAQ,GACb7S,KAAK8S,QAAU,GACf9S,KAAK+S,QAAU,GACf/S,KAAKgT,SAAW,GAChBhT,KAAKiT,WAAa,GAClBjT,KAAKkT,cAAgB,GACrBlT,KAAKmT,YAAc,EACnB,IAAI,IAAI/E,EAAI,EAAGA,GAAK,GAAIA,IACpBpO,KAAKkT,cAAchD,MAAK,GAG5BlQ,KAAKoT,SAAW,EAChBpT,KAAKqT,SAAW,EAChBrT,KAAKsT,UAAY,EACjBtT,KAAKuT,UAAY,EACjBvT,KAAK6Q,wBAA0B,IAAIlD,EAAyB2E,EAChE,CAwNC,OAxNA,gDAED,WAEI,IADA,IAAMvE,EAAWC,UAAUC,YAAcD,UAAUC,cAAiBD,UAAUE,kBAAoBF,UAAUE,oBAAsB,GACzHE,EAAI,EAAGA,EAAIL,EAASM,OAAQD,IAC7BL,EAASK,IACPL,EAASK,GAAGE,GAAGC,WAAW,UAC5BvO,KAAKmO,QAAUJ,EAASK,GAIpC,GAAC,yBAED,WACIpO,KAAKmO,QAAU,KACfnO,KAAK8Q,sBACc,MAAhB9Q,KAAKmO,SACJnO,KAAK+Q,oBAET/Q,KAAK6Q,wBAAwBG,WACjC,GAAC,2BAED,WAII,GAHGtP,KAAKyL,IAAInN,KAAKmO,QAAQ8C,KAAKjR,KAAKqT,WAGhC3R,KAAKyL,IAAInN,KAAKmO,QAAQ8C,KAAKjR,KAAKoT,YAAchB,EAAY,CACzD,IAAIoB,EAAG,SAAKxT,KAAKmO,QAAQ8C,KAAKjR,KAAKoT,UAAa,GAChDpT,KAAK6Q,wBAAwBO,cAAcoC,EAE/C,MACIxT,KAAK6Q,wBAAwBO,cAAc,GAE5C1P,KAAKyL,IAAInN,KAAKmO,QAAQ8C,KAAKjR,KAAKuT,YAGhC7R,KAAKyL,IAAInN,KAAKmO,QAAQ8C,KAAKjR,KAAKsT,WAGvC,GAAC,6BAED,WACItT,KAAK6Q,wBAAwBK,iBAnFX,EAmF+ClR,KAAKmO,QAAQoD,QAAQvR,KAAK8O,UAAUrI,OACrGzG,KAAK6Q,wBAAwBM,YArFf,EAqF0CnR,KAAKmO,QAAQoD,QAAQvR,KAAK+O,UAAUtI,MAChG,GAAC,+BAED,WACQzG,KAAKmO,QAAQoD,QAAQvR,KAAK8O,UAAU0C,SAGpCH,QAAQC,IAAI,gBAAkBtR,KAAKmO,QAAQoD,QAAQvR,KAAK8O,UAAUrI,OAIlEzG,KAAKmO,QAAQoD,QAAQvR,KAAK+O,UAAUyC,OAI5C,GAAC,8BAID,WAEQxR,KAAKmO,QAAQoD,QAAQvR,KAAK2S,UAAUnB,UAAYxR,KAAKkT,cAAclT,KAAK2S,WAErE3S,KAAKmT,aAAe,IACnBnT,KAAKmT,aAAe,EACpB9B,QAAQC,IAAI,kBAAoBtR,KAAKmT,aACrCnT,KAAK6Q,wBAAwBc,YA/GvB,EA+GkD3R,KAAKmT,cAEjEnT,KAAKkT,cAAclT,KAAK2S,WAAY,GAC9B3S,KAAKmO,QAAQoD,QAAQvR,KAAK2S,UAAUnB,UAE1CxR,KAAKkT,cAAclT,KAAK2S,WAAY,GAGpC3S,KAAKmO,QAAQoD,QAAQvR,KAAK0S,UAAUlB,UAAYxR,KAAKkT,cAAclT,KAAK0S,WAErE1S,KAAKmT,aAAe,IACnBnT,KAAKmT,aAAe,EACpB9B,QAAQC,IAAI,kBAAoBtR,KAAKmT,aACrCnT,KAAK6Q,wBAAwBc,YA5HvB,EA4HkD3R,KAAKmT,cAEjEnT,KAAKkT,cAAclT,KAAK0S,WAAY,GAC9B1S,KAAKmO,QAAQoD,QAAQvR,KAAK0S,UAAUlB,UAC1CxR,KAAKkT,cAAclT,KAAK0S,WAAY,GAGpC1S,KAAKmO,QAAQoD,QAAQvR,KAAKgP,aAAawC,UAAYxR,KAAKkT,cAAclT,KAAKgP,cAC3EqC,QAAQC,IAAI,eACZtR,KAAKkT,cAAclT,KAAKgP,cAAe,GACjChP,KAAKmO,QAAQoD,QAAQvR,KAAKgP,aAAawC,UAC7CxR,KAAKkT,cAAclT,KAAKgP,cAAe,GAGvChP,KAAKmO,QAAQoD,QAAQvR,KAAK6S,OAAOrB,UAAYxR,KAAKkT,cAAclT,KAAK6S,QACrExB,QAAQC,IAAI,SACZtR,KAAKkT,cAAclT,KAAK6S,QAAS,GAC3B7S,KAAKmO,QAAQoD,QAAQvR,KAAK6S,OAAOrB,UACvCxR,KAAKkT,cAAclT,KAAK6S,QAAS,GAGjC7S,KAAKmO,QAAQoD,QAAQvR,KAAK8S,SAAStB,UAAYxR,KAAKkT,cAAclT,KAAK8S,UACvEzB,QAAQC,IAAI,WACZtR,KAAKkT,cAAclT,KAAK8S,UAAW,GAC7B9S,KAAKmO,QAAQoD,QAAQvR,KAAK8S,SAAStB,UACzCxR,KAAKkT,cAAclT,KAAK8S,UAAW,GAGnC9S,KAAKmO,QAAQoD,QAAQvR,KAAK+S,SAASvB,UAAYxR,KAAKkT,cAAclT,KAAK+S,UACvE1B,QAAQC,IAAI,WACZtR,KAAKkT,cAAclT,KAAK+S,UAAW,GAC7B/S,KAAKmO,QAAQoD,QAAQvR,KAAK+S,SAASvB,UACzCxR,KAAKkT,cAAclT,KAAK+S,UAAW,GAGnC/S,KAAKmO,QAAQoD,QAAQvR,KAAKgT,UAAUxB,UAAYxR,KAAKkT,cAAclT,KAAKgT,WACxE3B,QAAQC,IAAI,YACZtR,KAAKkT,cAAclT,KAAKgT,WAAY,GAC9BhT,KAAKmO,QAAQoD,QAAQvR,KAAKgT,UAAUxB,UAC1CxR,KAAKkT,cAAclT,KAAKgT,WAAY,GAGpChT,KAAKmO,QAAQoD,QAAQvR,KAAKuS,SAASf,UAAYxR,KAAKkT,cAAclT,KAAKuS,UACvElB,QAAQC,IAAI,WACZtR,KAAKkT,cAAclT,KAAKuS,UAAW,GAC7BvS,KAAKmO,QAAQoD,QAAQvR,KAAKuS,SAASf,UACzCxR,KAAKkT,cAAclT,KAAKuS,UAAW,GAGnCvS,KAAKmO,QAAQoD,QAAQvR,KAAKwS,SAAShB,UAAYxR,KAAKkT,cAAclT,KAAKwS,UACvEnB,QAAQC,IAAI,WACZtR,KAAKkT,cAAclT,KAAKwS,UAAW,GAC7BxS,KAAKmO,QAAQoD,QAAQvR,KAAKwS,SAAShB,UACzCxR,KAAKkT,cAAclT,KAAKwS,UAAW,GAGnCxS,KAAKmO,QAAQoD,QAAQvR,KAAKyS,SAASjB,UAAYxR,KAAKkT,cAAclT,KAAKyS,UACvEpB,QAAQC,IAAI,WACZtR,KAAKkT,cAAclT,KAAKyS,UAAW,GAC7BzS,KAAKmO,QAAQoD,QAAQvR,KAAKyS,SAASjB,UACzCxR,KAAKkT,cAAclT,KAAKyS,UAAW,GAGnCzS,KAAKmO,QAAQoD,QAAQvR,KAAKwO,SAASgD,UAAYxR,KAAKkT,cAAclT,KAAKwO,UACvE6C,QAAQC,IAAI,WACZtR,KAAKkT,cAAclT,KAAKwO,UAAW,GAC7BxO,KAAKmO,QAAQoD,QAAQvR,KAAKwO,SAASgD,UACzCxR,KAAKkT,cAAclT,KAAKwO,UAAW,GAGnCxO,KAAKmO,QAAQoD,QAAQvR,KAAKkP,UAAUsC,UAAYxR,KAAKkT,cAAclT,KAAKkP,WACxEmC,QAAQC,IAAI,YACZtR,KAAKkT,cAAclT,KAAKkP,WAAY,GAC9BlP,KAAKmO,QAAQoD,QAAQvR,KAAKkP,UAAUsC,UAC1CxR,KAAKkT,cAAclT,KAAKkP,WAAY,GAGpClP,KAAKmO,QAAQoD,QAAQvR,KAAKmP,UAAUqC,UAAYxR,KAAKkT,cAAclT,KAAKmP,WACxEkC,QAAQC,IAAI,YACZtR,KAAKkT,cAAclT,KAAKmP,WAAY,GAC9BnP,KAAKmO,QAAQoD,QAAQvR,KAAKmP,UAAUqC,UAC1CxR,KAAKkT,cAAclT,KAAKmP,WAAY,GAGpCnP,KAAKmO,QAAQoD,QAAQvR,KAAK6S,OAAOrB,UAAYxR,KAAKkT,cAAclT,KAAK6S,QACrExB,QAAQC,IAAI,SACZtR,KAAKkT,cAAclT,KAAK6S,QAAS,GAC3B7S,KAAKmO,QAAQoD,QAAQvR,KAAK6S,OAAOrB,UACvCxR,KAAKkT,cAAclT,KAAK6S,QAAS,GAGjC7S,KAAKmO,QAAQoD,QAAQvR,KAAK8S,SAAStB,UAAYxR,KAAKkT,cAAclT,KAAK8S,UACvEzB,QAAQC,IAAI,WACZtR,KAAKkT,cAAclT,KAAK8S,UAAW,GAC7B9S,KAAKmO,QAAQoD,QAAQvR,KAAK8S,SAAStB,UACzCxR,KAAKkT,cAAclT,KAAK8S,UAAW,GAInC9S,KAAKmO,QAAQoD,QAAQvR,KAAK+S,SAASvB,UAAYxR,KAAKkT,cAAclT,KAAK+S,UACvE1B,QAAQC,IAAI,WACZtR,KAAKkT,cAAclT,KAAK+S,UAAW,GAC7B/S,KAAKmO,QAAQoD,QAAQvR,KAAK+S,SAASvB,UACzCxR,KAAKkT,cAAclT,KAAK+S,UAAW,GAGnC/S,KAAKmO,QAAQoD,QAAQvR,KAAKgT,UAAUxB,UAAYxR,KAAKkT,cAAclT,KAAKgT,WACxE3B,QAAQC,IAAI,YACZtR,KAAKkT,cAAclT,KAAKgT,WAAY,GAC9BhT,KAAKmO,QAAQoD,QAAQvR,KAAKgT,UAAUxB,UAC1CxR,KAAKkT,cAAclT,KAAKgT,WAAY,GAGpChT,KAAKmO,QAAQoD,QAAQvR,KAAKiT,YAAYzB,UAAYxR,KAAKkT,cAAclT,KAAKiT,aAC1E5B,QAAQC,IAAI,QACZtR,KAAK6Q,wBAAwBY,eAAe,aAC5CzR,KAAKkT,cAAclT,KAAKiT,aAAc,GAChCjT,KAAKmO,QAAQoD,QAAQvR,KAAKiT,YAAYzB,UAC5CxR,KAAKkT,cAAclT,KAAKiT,aAAc,GAGtCjT,KAAKmO,QAAQoD,QAAQvR,KAAK4S,cAAcpB,UAAYxR,KAAKkT,cAAclT,KAAK4S,eAC5E5S,KAAK6Q,wBAAwBa,YAC7B1R,KAAKkT,cAAclT,KAAK4S,eAAgB,GAClC5S,KAAKmO,QAAQoD,QAAQvR,KAAK4S,cAAcpB,UAC9CxR,KAAKkT,cAAclT,KAAK4S,eAAgB,EAEhD,GAAC,+BAED,WACI5S,KAAKyT,kBACLzT,KAAK0T,gBACL1T,KAAK2T,oBACL3T,KAAK+R,kBACT,KAAC,EA/Pe,GAkQC6B,EAAuB,WAIxC,aACI,MADW,oBACL,IAAI1B,MAAM,0DACpB,CAOC,OAPA,6CAED,SAAmBI,GAIf,OAHKsB,EAAwBzB,WACzByB,EAAwBzB,SAAW,IAAIE,EAAeC,IAEnDsB,EAAwBzB,QACnC,KAAC,EAbuC,GCzQvB0B,EAAU,WAE3B,aAAc,oBACV7T,KAAK8T,UAAY,EACrB,CAiBC,OAjBA,2CAED,SAAeC,GACX/T,KAAK8T,UAAU5D,KAAK6D,EACxB,GAAC,4BAED,SAAeA,GACX,IAAIC,EAAQhU,KAAK8T,UAAUG,QAAQF,GAChCC,GAAS,GACRhU,KAAK8T,UAAUI,OAAOF,EAAO,EAErC,GAAC,6BAED,SAAgBG,GACZ,IAAK,IAAI/F,EAAI,EAAGA,EAAIpO,KAAK8T,UAAUzF,OAAQD,IACvCpO,KAAK8T,UAAU1F,GAAGvL,OAAOsR,EAEjC,KAAC,EArB0B,G,iBCEVC,EAAY,WAI7B,aACI,MADW,oBACL,IAAIlC,MAAM,0DACpB,CAOC,OAPA,8FAED,2FACQkC,EAAaC,qBAAqB,CAAC,EAAF,6BACSC,MAAO,KAAD,EAAhDF,EAAaC,qBAAoB,uCAE9BD,EAAaC,sBAAoB,2CAC3C,kDAPA,MAOA,EAb4B,GAAZD,EAEVC,qBAAuB,KCDlC,IAYqBE,EAAU,WAG3B,WAAYpT,EAAU+K,EAAYsI,EAASC,EAAMC,EAAOC,EAAcC,GAAU,oBAC5E5U,KAAKmB,SAAWA,EAChBnB,KAAKkM,WAAaA,EAClBlM,KAAKwU,QAAUA,EACfxU,KAAKyU,KAAOA,EACZzU,KAAK0U,MAAQA,EACb1U,KAAK2U,aAAeA,EACpB3U,KAAK4U,SAAWA,CACpB,CAsJC,OAtJA,8FAGD,wHAEqBR,EAAaS,cAAc,KAAD,EAAvCP,EAAI,OACRtU,KAAKwU,QAAU,IAAIF,EAAKQ,UAAU9U,KAAKwU,QAAQ1S,EAAG9B,KAAKwU,QAAQzS,EAAG/B,KAAKwU,QAAQxS,GAC/EhC,KAAKsU,KAAOA,GACRS,EAAY,IAAIT,EAAKU,aACfC,cACVF,EAAUG,UAAU,IAAIZ,EAAKQ,UAAU9U,KAAKmB,SAASW,EAAG9B,KAAKmB,SAASY,EAAG/B,KAAKmB,SAASa,IACvF+S,EAAUI,YAAY,IAAIb,EAAKc,aAAapV,KAAKkM,WAAWpK,EAAG9B,KAAKkM,WAAWnK,EAAG/B,KAAKkM,WAAWlK,EAAGhC,KAAKkM,WAAWpE,IAErH9H,KAAKqV,cAAgB,IAAIf,EAAKU,YAE1BM,EAAc,IAAIhB,EAAKiB,qBAAqBR,IAE5CL,EAAQ,IAAIJ,EAAKkB,WAAW,IAAIlB,EAAKQ,UAAU9U,KAAK0U,MAAM5S,EAAE,EAAG9B,KAAK0U,MAAM3S,EAAE,EAAG/B,KAAK0U,MAAM1S,EAAE,KAC1FyT,sBAAsBzV,KAAKyU,KAAMzU,KAAKwU,SAExCkB,EAAgB,IAAIpB,EAAKqB,4BAA4B3V,KAAKyU,KAAMa,EAAaZ,EAAO1U,KAAKwU,SAC7FxU,KAAK4V,UAAY,IAAItB,EAAKuB,YAAYH,GAEtC1V,KAAK4V,UAAUE,YAAY9V,KAAK4U,UAChC5U,KAAK4V,UAAUG,mBAAkC,GAAf/V,KAAK4U,UACvC5U,KAAK2U,aAAaqB,aAAahW,KAAK4V,WAEpC5V,KAAKiW,OAAS,IAAIjW,KAAKsU,KAAK4B,gBACxBC,EAAY,IAAInW,KAAKsU,KAAK8B,0BAA0BpW,KAAK2U,cAC7D3U,KAAKqW,QAAU,IAAIrW,KAAKsU,KAAKgC,iBAAiBtW,KAAKiW,OAAQjW,KAAK4V,UAAWO,GAC3EnW,KAAKqW,QAAQE,oBAAoB,EAAG,EAAG,GACvCvW,KAAK2U,aAAa6B,UAAUxW,KAAKqW,SAEf,IACC,KACU,KAFX,IAIG,KAHF,IAKO,GAEG,KAPV,IASQ,GAVT,IAYI,IAGtBrW,KAAKyW,UAAS,EAAM,IAAIzW,KAAKsU,KAAKQ,UAdf,IASQ,GAFE,MARX,IAYI,IApEX,EAMD,GAkEV9U,KAAKyW,UAAS,EAAM,IAAIzW,KAAKsU,KAAKQ,WAff,IASQ,GAFE,MARX,IAYI,IAnEV,GAIF,GAoEV9U,KAAKyW,UAAS,EAAO,IAAIzW,KAAKsU,KAAKQ,UAAU,IAXnB,IAJE,MAFV,IAIG,IA1DX,EAIA,GAoEV9U,KAAKyW,UAAS,EAAO,IAAIzW,KAAKsU,KAAKQ,WAbV,IACC,IAJE,MAFV,IAIG,IAzDV,GAED,GAuEN9U,KAAKyU,KAAO,GACZzU,KAAK4V,UAAUc,mBAlEE,GAmEpB,iDACJ,kDAxDA,IAwDA,sBAGD,SAASC,EAASC,EAAKC,EAAQC,EAAO9C,EAAO+C,GACzC,IAAIC,EAAoB,IAAIhX,KAAKsU,KAAKQ,UAAU,GAAI,EAAG,GACnDmC,EAAc,IAAIjX,KAAKsU,KAAKQ,WAAW,EAAG,EAAG,GAO7CoC,EAAYlX,KAAKqW,QAAQI,SACzBG,EACAI,EACAC,EARuB,GAUvBJ,EACA7W,KAAKiW,OACLU,GAGJO,EAAUC,0BAhBgB,GAiB1BD,EAAUE,8BAbc,KAcxBF,EAAUG,+BAbkB,KAc5BH,EAAUI,mBAhBK,KAiBfJ,EAAUK,oBAlBU,GAoBxB,GAAC,2BAGD,WAQI,IAPA,IAAIC,EAAc,CACd,QAAW,CACP,SAAY,KACZ,SAAY,MAEhB,OAAU,IAELpJ,EAAE,EAAGA,EAAIpO,KAAKqW,QAAQoB,eAAgBrJ,IAAI,CAC/CpO,KAAKqW,QAAQqB,qBAAqBtJ,GAAG,GACrC,IAAIuJ,EAAe3X,KAAKqW,QAAQuB,oBAAoBxJ,GAChDjN,EAAWwW,EAAaE,YACxB3W,EAAWyW,EAAaG,cAC5BN,EAAYO,OAAO7H,KAAK,CACpB,SAAY,IAAIlP,KAAQG,EAASW,IAAKX,EAASY,IAAKZ,EAASa,KAC7D,SAAY,IAAIwD,KAAQtE,EAASY,IAAKZ,EAASa,IAAKb,EAASc,IAAKd,EAAS4G,MAEnF,CACA,IAAIkQ,EAAwBhY,KAAKqW,QAAQ4B,2BAErC9W,EAAW6W,EAAsBH,YACjC3W,EAAW8W,EAAsBF,cAKrC,OAJAN,EAAYU,QAAU,CAClB,SAAY,IAAIlX,KAAQG,EAASW,IAAKX,EAASY,IAAKZ,EAASa,KAC7D,SAAY,IAAIwD,KAAQtE,EAASY,IAAKZ,EAASa,IAAKb,EAASc,IAAKd,EAAS4G,MAExE0P,CACX,GAAC,0BAGD,WACI,OAAOxX,KAAK4V,SAChB,GAAC,4BAGD,SAAgBuC,GACZnY,KAAKqW,QAAQ+B,iBAAkBD,EAhJrB,GAiJVnY,KAAKqW,QAAQ+B,iBAAkBD,EAhJpB,EAiJf,GAAC,mBAGD,SAAME,GACF,IAAIC,EAAW5W,KAAKyL,IAAInN,KAAKqW,QAAQkC,yBACjCC,EAhJe,IAgJwBF,EAC1B,IAAbA,IACAE,EAAgB,GAEpBH,GAAcG,EACdxY,KAAKqW,QAAQoC,SAASJ,EAAW,EA9JtB,GA+JXrY,KAAKqW,QAAQoC,SAASJ,EAAW,EA9JrB,GA+JZrY,KAAKqW,QAAQoC,SAASJ,EA9JZ,GA+JVrY,KAAKqW,QAAQoC,SAASJ,EA9JX,EA+Jf,GAAC,iCAGD,SAAqBnX,GACjBlB,KAAKqW,QAAQqC,kBA/JH,GA+JoBxX,EAtKnB,GAuKXlB,KAAKqW,QAAQqC,kBAhKH,GAgKoBxX,EAtKlB,EAuKhB,GAAC,yBAGD,WACI,OAAOlB,KAAKqW,QAAQkC,uBACxB,KAAC,EAjK0B,GCflBI,EAAU,IAGVC,EAA0B,IAE1BC,EAAmB,4CAyB3B,OAzB2B,kDAC5B,SAAsBC,EAAYC,EAAcC,EAAYC,GAExD,IAAIC,EAEDH,EAICG,EAbO,GAUqBJ,EAFdE,EAIkBL,GAGhCO,EAdO,KAccJ,EAazB,OAXAG,GAA0CC,GACjB,IACrBD,EAAqB,IAEjBA,EAAqB,IACzBA,EAAqB,GAMlB,CAFPD,EAAaL,GAAW,EAAIjX,KAAKyX,KAAKF,EAAmBL,IAErCK,EACxB,KAAC,EAzB2B,GCDXG,EAAe,kHAQ/B,OAR+B,uCAEhC,SAAWC,EAAkBL,EAAYC,GACrC,OAAOjZ,KAAKsZ,sBALM,GAKmC,EAAMN,EAAYC,EAC3E,GAAC,mBAED,SAAMZ,EAAYW,EAAYC,GAC1B,OAAOjZ,KAAKsZ,sBAAsBjB,GAAY,EAAOW,EAAYC,EACrE,KAAC,EAR+B,CAASJ,GCFxBU,EAAc,kHAQ9B,OAR8B,uCAE/B,SAAWF,EAAkBL,EAAYC,GACrC,OAAOjZ,KAAKsZ,sBAAsBD,GAAkB,EAAML,EAAYC,EAC1E,GAAC,mBAED,SAAMZ,EAAYW,EAAYC,GAC1B,OAAOjZ,KAAKsZ,sBAAsBjB,GAAY,EAAOW,EAAYC,EACrE,KAAC,EAR8B,CAASJ,GCKvBW,EAAS,WAG1B,aAAc,oBACVxZ,KAAKyZ,YAAc,IAAIL,EACvBpZ,KAAKgZ,WAAa,EAClBhZ,KAAKiZ,mBAAqB,CAC9B,CAiEC,OAjEA,mCAGD,WACIjZ,KAAKyZ,YAAc,IAAIF,CAC3B,GAAC,6BAGD,SAAgBG,GACZ,OAAOA,GAlB4B,GAmBvC,GAAC,kCAGD,SAAqBA,EAAYC,GAE1BA,EAASC,eAAeF,EAAY1Z,KAAKgZ,aACrChZ,KAAKyZ,uBAAuBF,IAC3BvZ,KAAKyZ,YAAc,IAAIL,EAInC,GAAC,uCAGD,SAA0BM,GACtB,OAAS1Z,KAAKgZ,YAnCY,IAmCgChZ,KAAK6Z,gBAAgBH,IAAiB1Z,KAAK6Z,gBAAgBH,EACzH,GAAC,iCAGD,SAAoBA,GAChB,OAAQ1Z,KAAKgZ,YAxCa,IAwC+BhZ,KAAK6Z,gBAAgBH,EAClF,GAAC,wBAGD,SAAWA,EAAaL,EAAkBM,GACtC,IAAIG,EAAY9Z,KAAKyZ,YAAYM,WAAWV,EAAkBrZ,KAAKgZ,WAAYhZ,KAAKiZ,oBACpFjZ,KAAKgZ,WAAac,EAAU,GAC5B9Z,KAAKiZ,mBAAqBa,EAAU,GACpC9Z,KAAKga,qBAAqBN,EAAYC,EAC1C,GAAC,mBAGD,SAAMD,EAAarB,EAAWsB,GAC1B,IAAIG,EAAY9Z,KAAKyZ,YAAYnJ,MAAM+H,EAAYrY,KAAKgZ,WAAYhZ,KAAKiZ,oBACzEjZ,KAAKgZ,WAAac,EAAU,GAC5B9Z,KAAKiZ,mBAAqBa,EAAU,GACpC9Z,KAAKga,qBAAqBN,EAAYC,EAC1C,GAAC,uBAGD,SAAUM,GACNja,KAAKgZ,WAAaiB,GACZja,KAAKgZ,WAAWL,EAAU,EAAK,GACjC3Y,KAAKiZ,oBAAsBvX,KAAK4P,KAAMtR,KAAKgZ,WAAWL,EAAU,GAAKC,EAClE5Y,KAAKiZ,mBAAqB,IACzBjZ,KAAKiZ,mBAAqB,IAEzBjZ,KAAKgZ,aAAeL,IACzB3Y,KAAKiZ,mBAAqBL,IAElC,GAAC,2BAGD,WACI,OAAO5Y,KAAKgZ,UAChB,KAAC,EAxEyB,GCDTkB,EAAQ,WAEzB,WAAYC,GAAW,oBACnBna,KAAKoa,QAAU,EACfpa,KAAKqa,SAAW,EAChBra,KAAKsa,MAAQ,EACbta,KAAKua,OAAS,EACdva,KAAKwa,MAAQ,EACbxa,KAAKya,OAAS,EACdza,KAAK0a,MAAQ,EACb1a,KAAK2a,MAAQ,EACb3a,KAAK4a,YAAc,CAAC5a,KAAKqa,QAASra,KAAKoa,QAASpa,KAAKsa,MAAOta,KAAKua,OAAQva,KAAKwa,MAAOxa,KAAKya,OAAQza,KAAK0a,MAAO1a,KAAK2a,OAEnH3a,KAAK6a,aAAe7a,KAAKoa,QACzBpa,KAAKma,UAAYA,EAEjBna,KAAK8a,uBAAyB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IAClD9a,KAAK+a,uBAAyB,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAEzD,CAmFC,OAnFA,yCAED,SAAaC,GACT,GAAIhb,KAAK4a,YAAY3G,QAAQ+G,IAAU,EACnC,OAAO,EAEP,MAAM,IAAI9I,MAAM,SAAW8I,EAAQ,iBAE3C,GAAC,sCAGD,SAAyBC,EAASC,GAC9B,OAASA,EAAclb,KAAK8a,uBAAuBpZ,KAAKyL,IAAI8N,GAAY,KACnEjb,KAAK+a,uBAAuBrZ,KAAKyL,IAAI8N,GAAY,GAAKjb,KAAK8a,uBAAuBpZ,KAAKyL,IAAI8N,GAAY,GAChH,GAAC,+BAGD,SAAkBA,EAAUC,GACxB,GAAGD,IAAajb,KAAKoa,SAAY1Y,KAAKyL,IAAI8N,KAAcjb,KAAKsa,OAAS5Y,KAAKyL,IAAI+N,GAAe,EAC1F,OAAOlb,KAAKma,UAAUgB,gBAE1B,GAAGF,IAAajb,KAAKqa,SAAWa,EAAc,EAC1C,OAAO,EAEX,GAAGD,EAAW,GAAKC,EAAc,EAC7B,OAAO,EAEX,IAAIE,EAAkBpb,KAAKqb,yBAAyBJ,EAAUC,GAC9D,GAAKE,EAAkB,EACnB,OAAOzC,EAEP,IAAI2C,EAASF,EAAkBxC,EAC/B,OAAQD,GAAW,EAAIjX,KAAKyX,KAAKmC,EAAO1C,GAEhD,GAAC,6BAGD,SAAgBc,GACZ,OAAOA,IA3D4B,GA4DvC,GAAC,4BAGD,WACI,OAAO,CACX,GAEA,4BACA,SAAe6B,EAAiB7B,GAC5B6B,EAAkB7Z,KAAKyL,IAAIoO,GAC3B,IAAIvC,EAAahZ,KAAKma,UAAUgB,gBAEhC,GAAGnb,KAAK6a,eAAiB7a,KAAKoa,QAC1B,OAAO,EAGX,IAAIoB,GAAyB9B,EAAc,GAAG,EAC1C+B,EAA2Bzb,KAAK8a,uBAAuBpZ,KAAKyL,IAAInN,KAAK6a,cAAgB,IAAM,EAAInZ,KAAKyX,IAA2B,GAAtBqC,IAIzGE,GAA2BH,EAAkBE,IADzBzb,KAAK+a,uBAAuBrZ,KAAKyL,IAAInN,KAAK6a,cAAgB,GAAKY,GAKnFE,EAAY,SAAI,EAAID,EAA0B,GAQlD,OANGC,EAAe,IACdA,EAAe,GAzFH,EA4FqB3b,KAAK6a,aACJ7B,EAAa2C,CAGvD,GAAC,yBAED,WACI,GACH,6BAGD,WACI,OAAO3b,KAAK6a,YAChB,KAAC,EAtGwB,GCJRe,EAAS,kHAezB,OAfyB,wCAG1B,SAAYlC,EAAauB,EAAUM,GAC/B,IAAGvb,KAAK6b,aAAaZ,KAAajb,KAAK6Z,gBAAgBH,GAInD,MAAM,IAAIxH,MAAM,+CAHhBlS,KAAK6a,aAAeI,EACpBjb,KAAKma,UAAU2B,UAAU9b,KAAK+b,kBAAkBd,EAAUM,EAAiB7B,GAInF,GAAC,4BAGD,SAAeA,EAAaV,GACxB,OAAQhZ,KAAK6Z,gBAAgBH,IAAgBV,EAfnB,GAgB9B,KAAC,EAfyB,CAASkB,GCAlB8B,EAAgB,kHAOhC,OAPgC,wCAEjC,SAAYtC,EAAauB,EAAUM,GAC5Bvb,KAAK6b,aAAaZ,KACjBjb,KAAK6a,aAAeI,EACpBjb,KAAKma,UAAU2B,UAAU9b,KAAK+b,kBAAkBd,EAAUM,EAAiB7B,IAEnF,KAAC,EAPgC,CAASQ,GCMxCvQ,EAAW,CAAC,EAAE,EAAE,GAEDsS,EAAG,kDAEpB,WAAYtH,GAAc,IAAD,EAcc,OAdd,qBACrB,gBACKwF,UAAY,IAAIX,EACrB,EAAKG,SAAW,IAAIqC,EAAiB,EAAK7B,WAC1C,EAAK+B,qBAAuB,EAC5B,EAAKC,oBAAsB,EAC3B,EAAKhb,SAAW,IAAIH,KAAQ2I,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAC/D,EAAKyS,mBAAqB,IAAI5W,KAAQ,EAAE,EAAE,EAAE,GAC5C,EAAKiP,KAAO,IACZ,EAAKjJ,aAAe,IAAIxK,KAAQ,EAAE,IAAI,GACtC,EAAKE,SAAW,IAAIsE,KAAQ,EAAE,EAAE,EAAE,GAClC,EAAKgP,QAAU,IAAIxT,KAAQ,EAAE,EAAE,GAE/B,EAAKqb,WAAa,IAAI9H,EAAW,EAAKpT,SAAU,EAAKib,mBAAoB,EAAK5H,QAAS,EAAKC,KAAM,EAAKjJ,aAAcmJ,EAAc,GACnI,EAAK0H,WAAWC,mBAAmB,CAEvC,CA4FC,OA5FA,uCAGD,SAAW5C,EAAaL,GACpBrZ,KAAKma,UAAUJ,WAAWL,EAAaL,EAAiBrZ,KAAK2Z,UAC1DN,EAAmB,IAAOrZ,KAAKma,UAAUoC,oBAAoB7C,GAC5D1Z,KAAKqc,WAAWG,eAAgBxc,KAAK2Z,SAAS8C,eAAezc,KAAKqc,WAAWK,cAAehD,IAE5F1Z,KAAKqc,WAAWG,eAAgB,EAExC,GAAC,mBAGD,SAAM9C,EAAarB,GACfrY,KAAKma,UAAU7J,MAAMoJ,EAAarB,EAAWrY,KAAK2Z,UAElD3Z,KAAKqc,WAAW/L,MAnCM,IAmCA+H,EAC1B,GAAC,yBAGD,SAAYqB,EAAauB,GACrBjb,KAAK2Z,SAAShI,YAAY+H,EAAauB,EAAUjb,KAAKqc,WAAWK,cACrE,GAAC,8BAGD,WACI,GACH,6BAGD,WACI,GACH,uBAGD,WACI1c,KAAKma,UAAUwC,QACnB,GAAC,2BAGD,SAAcC,GACV5c,KAAKmc,oBAAsBS,EAC3B5c,KAAKqc,WAAWQ,oBAAqBD,EACzC,GAAC,oBAGD,WACI,IAAIE,EAAsB9c,KAAKqc,WAAWU,gBAC1C/c,KAAKmB,SAAW2b,EAA6B,QAAY,SACzD9c,KAAKkB,SAAW4b,EAA6B,QAAY,SACzD9c,KAAKmM,WAAa2Q,EAA4B,OAC9C,uEAAsB9c,KAAKgd,mBAC/B,GAAC,6BAGD,WACI,OAAOhd,KAAKmc,mBAChB,GAAC,8BAGD,WACI,MAAO,CACH,UAAanc,KAAKkc,qBAClB,SAAYlc,KAAKqc,WAAWK,cAC5B,kBAAqB1c,KAAKmc,oBAC1B,SAAYnc,KAAKmB,SACjB,SAAYnB,KAAKkB,SACjB,YAAelB,KAAKqc,WACpB,WAAcrc,KAAKmM,WACnB,IAAOnM,KAAKmb,gBAEpB,GAAC,sBAED,WACI,OAAOnb,KAAKqc,WAAWK,aAC3B,GAAC,2BAED,WACI,OAAO1c,KAAKma,UAAUgB,eAC1B,GAAC,4BAED,SAAe8B,GACE,cAAVA,EACCjd,KAAK2Z,SAAW,IAAIqC,EAAiBhc,KAAKma,WAC5B,WAAT8C,IAELjd,KAAK2Z,SAAW,IAAIiC,EAAU5b,KAAKma,WAE3C,GAAC,6BAED,WACI,OAAOna,KAAK2Z,SAASuD,iBACzB,KAAC,EA9GmB,CAASrJ,GCJZsJ,GAAc,kDAG/B,WAAYhc,EAAU+K,EAAYsI,EAASC,EAAMC,EAAOC,EAAcC,GAAU,IAAD,EASlD,OATkD,qBAC3E,gBACKzT,SAAWA,EAChB,EAAK+K,WAAaA,EAClB,EAAKsI,QAAUA,EACf,EAAKC,KAAOA,EACZ,EAAKC,MAAQA,EACb,EAAKC,aAAeA,EAChBC,IAAUA,EAAW,GACzB,EAAKA,SAAWA,EAAS,CAC7B,CAmEC,OAnEA,2FAGD,iHACW,MAAI,2CACd,kDALA,IAKA,+EAGD,sHAEqBR,EAAaS,cAAc,KAAD,EAUe,OAVtDP,EAAI,OACRtU,KAAKwU,QAAU,IAAIF,EAAKQ,UAAU9U,KAAKwU,QAAQ1S,EAAG9B,KAAKwU,QAAQzS,EAAG/B,KAAKwU,QAAQxS,GAC/EhC,KAAKsU,KAAOA,GACRS,EAAY,IAAIT,EAAKU,aACfC,cACVF,EAAUG,UAAU,IAAIZ,EAAKQ,UAAU9U,KAAKmB,SAASW,EAAG9B,KAAKmB,SAASY,EAAG/B,KAAKmB,SAASa,IACvF+S,EAAUI,YAAY,IAAIb,EAAKc,aAAapV,KAAKkM,WAAWpK,EAAG9B,KAAKkM,WAAWnK,EAAG/B,KAAKkM,WAAWlK,EAAGhC,KAAKkM,WAAWpE,IAErH9H,KAAKqV,cAAgB,IAAIf,EAAKU,YAE1BM,EAAc,IAAIhB,EAAKiB,qBAAqBR,GAAW,EAAD,QAExC/U,KAAKod,gBAAgB,KAAD,IAAlC1I,EAAK,QACH2I,UAAU,KAChB3I,EAAMe,sBAAsBzV,KAAKyU,KAAMzU,KAAKwU,SAExCkB,EAAgB,IAAIpB,EAAKqB,4BAA4B3V,KAAKyU,KAAMa,EAAaZ,EAAO1U,KAAKwU,SAC7FxU,KAAK4V,UAAY,IAAItB,EAAKuB,YAAYH,GAEtC1V,KAAK4V,UAAUE,YAAY9V,KAAK4U,UAChC5U,KAAK4V,UAAUG,mBAAmC,EAAhB/V,KAAK4U,UAEvC5U,KAAK2U,aAAaqB,aAAahW,KAAK4V,WAEhC5V,KAAKyU,KAAO,GACZzU,KAAK4V,UAAUc,mBAlDE,GAmDpB,iDACJ,kDAhCA,IAgCA,2BAGD,WACI,IAAIpB,EAActV,KAAK4V,UAAU0H,iBACjC,GAAGhI,EAAY,CACXA,EAAYiI,kBAAkBvd,KAAKqV,eAEnC,IAAIlU,EAAWnB,KAAKqV,cAAcwC,YAC9B3W,EAAWlB,KAAKqV,cAAcyC,cAC5B5X,EAAW,CACb,SAAY,IAAIc,KAAQG,EAASW,IAAKX,EAASY,IAAKZ,EAASa,KAC7D,SAAY,IAAIwD,KAAQtE,EAASY,IAAKZ,EAASa,IAAKb,EAASc,IAAKd,EAAS4G,MAG/E,OADA9H,KAAKwd,gBAAgBtd,GACdA,CACX,CACI,MAAM,IAAIgS,MAAM,sCAExB,GAAC,+BAGD,SAAkBuL,GACd,IAAIC,EAAc,IAAI1d,KAAKsU,KAAKQ,UAAU9U,KAAKyU,KAAKgJ,EAAe3b,EAAG9B,KAAKyU,KAAKgJ,EAAe1b,EAAG/B,KAAKyU,KAAKgJ,EAAezb,GAC3HhC,KAAK4V,UAAU+H,WAAWD,EAC9B,GAAC,0BAGD,WACI,OAAO1d,KAAK4V,SAChB,KAAC,EAhF8B,CAAS/B,GCHvB+J,GAAe,kHAS/B,OAT+B,0CAIhC,iDAEA,8GACqBxJ,EAAaS,cAAc,KAAD,EAAnC,OAAJP,EAAI,yBACD,IAAIA,EAAKuJ,gBAAgB,IAAIvJ,EAAKQ,UAAU9U,KAAK0U,MAAM5S,EAAG9B,KAAK0U,MAAM3S,EAAG/B,KAAK0U,MAAM1S,KAAG,gDAChG,kDALD,MAKC,EAT+B,CAASmb,ICAxBW,GAAW,kDAE5B,WAAY/a,GAAe,IAAD,EAMI,OANJ,qBACtB,cAAMA,IACDA,cAAgBA,EACrB,EAAKgb,WAAa,GAClB,EAAKC,cAAgB,GACrB,EAAKC,OAAS,KACd,EAAKhe,cAAgB,KAAK,CAC9B,CA8CC,OA9CA,oCAED,WAC6B,MAAtBD,KAAKC,gBAEJD,KAAKoD,YAAYjC,SAASyB,IACtB5C,KAAKC,cAAwB,SAAE6B,EAC/B9B,KAAKC,cAAwB,SAAE8B,EAC/B/B,KAAKC,cAAwB,SAAE+B,GAGnChC,KAAKoD,YAAY8I,WAAWtJ,IACxB5C,KAAKC,cAAwB,SAAE6B,EAC/B9B,KAAKC,cAAwB,SAAE8B,EAC/B/B,KAAKC,cAAwB,SAAE+B,EAC/BhC,KAAKC,cAAwB,SAAE6H,GAI3C,GAAC,yEAGD,WAAiBtE,EAAOC,EAAYtC,EAAUuC,GAAO,IAAF,yFAsB9C,OArBG1D,KAAKoD,cACCY,EAAW,IAAI1D,IAAwBN,KAAK+d,WAAY/d,KAAKge,cAAehe,KAAKie,OAAQ,QAAI1Z,GAAW,GACxGmC,GAAU,IAAIpG,MAAsB4d,KAAKle,KAAK+C,eAC9CmD,EAAW,IAAI5F,IAAyB,CAAE6d,IAAKzX,IAC/C0X,EAAc,IAAI9d,IAAyB,CAAEgE,MAAO,WACpD+Z,EAAgB,IAAI/d,IAAqC,EAAnBN,KAAKge,cAAiB,GAAwB,EAAnBhe,KAAKge,gBACtEM,EAAM,IAAIhe,IAAY+d,EAAeD,IACvCjd,SAASyB,IAAI,GAAG5C,KAAKie,OAAO,EAAE,IAC5BM,EAAO,IAAIje,IAAY0D,EAAUkC,IAClC/E,SAASyB,IAAI,EAAE,EAAE,GACtB5C,KAAKoD,YAAc,IAAI9C,IACvBN,KAAKoD,YAAYxC,IAAI2d,GAAM3d,IAAI0d,GAC/Bte,KAAKoD,YAAYU,KAAOL,EACxBzD,KAAKoD,YAAYjC,SAASyB,IAAIzB,EAAS,GAAIA,EAAS,GAAIA,EAAS,IACjEnB,KAAKoD,YAAYM,MAAMd,IAAIc,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAErD1D,KAAK+d,YAAcra,EAAM,GACzB1D,KAAKge,eAAiBta,EAAM,GAC5B1D,KAAKie,QAAUva,EAAM,GAErBF,EAAM5C,IAAIZ,KAAKoD,cAClB,kBACMpD,MAAI,gDACd,yDA3BA,MA2BA,EAvD2B,CAAS8C,GCDpB0b,GAAU,kHAM1B,OAN0B,2FAG3B,8GACqBpK,EAAaS,cAAc,KAAD,EAAnC,OAAJP,EAAI,yBACD,IAAIA,EAAKkB,WAAW,IAAIlB,EAAKQ,UAAU9U,KAAK0U,MAAM5S,EAAE,EAAG9B,KAAK0U,MAAM3S,EAAE,EAAG/B,KAAK0U,MAAM1S,EAAE,KAAG,gDACjG,kDAN0B,MAM1B,EAN0B,CAASmb,ICKnBsB,GAAY,WAG7B,WAAYC,EAAOlb,EAAMmR,GAAc,oBACnC3U,KAAKwD,MAAQA,EACbxD,KAAK2U,aAAeA,EACpB3U,KAAK2e,gBAAkB,GACvB3e,KAAK4e,iBAAmB,GACX,IAAVF,GACC1e,KAAK6e,cAGb,CAoFC,OApFA,0CAGD,WACI7e,KAAK2e,gBAAgBG,SAAQ,SAASC,GAClCA,EAAKhC,eACT,GACJ,GAAC,qBAGD,WACI/c,KAAK4e,iBAAiBE,SAAQ,SAASE,GACnCA,EAAOC,SACX,GACJ,GAAC,8EAGD,WAAsB9d,EAASkN,EAAQyI,EAAOoI,EAAQhe,EAAUie,EAAa7K,GAAI,2GA8B5E,OA9B8E8K,EAAa,+BAAG,MAEzF1Y,GAAU,IAAIpG,MAAsB4d,KAAMiB,IACxCE,MAAQ/e,KAChBoG,EAAQ4Y,MAAQhf,KAChBoG,EAAQ6Y,OAAO3c,IAAKyL,EAAQ6Q,GACtBM,EAAgB,IAAIlf,IAA4B,CAAC6d,IAAKzX,EAAUqQ,KAAMzW,MACxE8e,KACIK,GAAgB,IAAInf,MAAsB4d,KAC1CkB,IAEUG,OAAO3c,IAAKyL,EAAQ6Q,GAClCO,EAAcJ,MAAQ/e,KACtBmf,EAAcH,MAAQhf,KACtBkf,EAAcE,UAAYD,EAC1BD,EAAcG,YAAY/c,IAAI,GAAI,MAEhCgd,EAAQ,IAAItf,IAAmB+N,EAAQyI,EAAOoI,IAC9CvU,QAAQzJ,IACR2e,EAAiB,IAAIvf,MACZwf,iBAAkB,IAAIxf,KAAe,EAAG,EAAG,GAAKY,GAE3D6e,EAAc,IAAIvB,GAClB,IAAIle,KAAca,EAAS,GAAGA,EAAS,GAAGA,EAAS,IACnD0e,EACA,IAAIvL,EAAKQ,UAAU,EAAE,EAAE,GACvB,EACA,IAAIxU,KAAc+N,EAAQyI,EAAOoI,GACjClf,KAAK2U,aACL,KACF,EAAD,QAEKoL,EAAYzD,mBAAmB,KAAD,GACpCtc,KAAK2e,gBAAgBzO,KAAK6P,IACtBC,EAAO,IAAI1f,IAAYsf,EAAOJ,IAC7Bre,SAASyB,IAAIzB,EAAS,GAAGA,EAAS,GAAGA,EAAS,IACnDnB,KAAKwD,MAAM5C,IAAIof,GAAM,iDACxB,+DAxCA,IAwCA,yEAGD,WAAiB7e,EAAWmT,GAAM,IAAF,+EAW3B,OAVGiK,EAAO,IAAIT,GAAY,6BACtBmC,WAAWjgB,KAAKwD,MAAO,cAAerC,EAAU,CAAE,GAAK,GAAK,KAC7D+e,EAAc,IAAItC,GAClB,IAAItd,KAAca,EAAS,GAAGA,EAAS,GAAGA,EAAS,KACnD,IAAIb,MAAmBwf,iBAAkB,IAAIxf,KAAe,EAAG,EAAG,GAAK,GACvE,IAAIgU,EAAKQ,UAAU,EAAE,EAAE,GACvB,GACA,IAAIxU,KAAcie,EAAKP,cAAeO,EAAKN,OAAO,EAAGM,EAAKP,eAC1Dhe,KAAK2U,aACL,KACF,EAAD,OACKuL,EAAY5D,mBAAmB,KAAD,EACpCtc,KAAK2e,gBAAgBzO,KAAKgQ,GAC1BA,EAAYC,eAAe5B,GAC3Bve,KAAK4e,iBAAiB1O,KAAKqO,GAAM,gDACpC,qDAnBA,IAmBA,2EAGD,8GACqBnK,EAAaS,cAAc,KAAD,EAAvCP,EAAI,OACRtU,KAAKogB,gBAAiB,CAAE,GAAI,EAAG,IAAM,GAAI,EAAG,IAAK1e,KAAKC,GAAG,EAAG,yBAA0B2S,EAAM,8BAC5FtU,KAAKogB,gBAAiB,EAAG,GAAI,EAAG,IAAM,GAAI,EAAG,IAAK1e,KAAKC,GAAG,EAAG,yBAA0B2S,EAAM,8BAC7FtU,KAAKogB,gBAAiB,CAAE,EAAG,EAAG,GAAK,IAAK,GAAK,IAAK,EAAG,yBAA0B9L,EAAM,8BACrFtU,KAAKqgB,WAAY,CAAE,EAAG,GAAK,IAAM/L,GACjCtU,KAAKqgB,WAAY,CAAE,EAAG,GAAK,IAAM/L,GACjCtU,KAAKqgB,WAAY,CAAE,EAAG,GAAK,IAAM/L,GAAO,gDAC3C,kDAXA,MAWA,EAhG4B,GCP3BgM,GAAQ,4CAmMZ,OAnMY,8CAEb,SAAqBlgB,GAEpB,IAAMmgB,EAASC,SAASC,cAAe,UA0EvC,SAASC,IAERH,EAAOI,MAAMC,QAAU,GAEvBL,EAAOI,MAAME,OAAS,OACtBN,EAAOI,MAAMG,KAAO,mBACpBP,EAAOI,MAAM7J,MAAQ,QAErByJ,EAAOQ,aAAe,KACtBR,EAAOS,aAAe,KAEtBT,EAAOU,QAAU,IAElB,CAoBA,SAASC,EAAgBC,GAExBA,EAAQR,MAAMxf,SAAW,WACzBggB,EAAQR,MAAMS,OAAS,OACvBD,EAAQR,MAAMU,QAAU,WACxBF,EAAQR,MAAMW,OAAS,iBACvBH,EAAQR,MAAMY,aAAe,MAC7BJ,EAAQR,MAAMa,WAAa,kBAC3BL,EAAQR,MAAMrc,MAAQ,OACtB6c,EAAQR,MAAMc,KAAO,yBACrBN,EAAQR,MAAMe,UAAY,SAC1BP,EAAQR,MAAMgB,QAAU,MACxBR,EAAQR,MAAMiB,QAAU,OACxBT,EAAQR,MAAMkB,OAAS,KAExB,CAEA,GAAK,OAAQ7T,UAmBZ,OAjBAuS,EAAOjS,GAAK,WACZiS,EAAOI,MAAMC,QAAU,OAEvBM,EAAgBX,GAEhBvS,UAAU5F,GAAG0Z,mBAAoB,gBAAiBC,MAAM,SAAWC,GAElEA,EAnIF,WAEC,IAAIC,EAAiB,KAAK,SAEXC,EAAiB,GAAD,4CAS9B,OAT8B,kCAA/B,WAAiCC,GAAO,2EAEW,OAAlDA,EAAQC,iBAAkB,MAAOC,GAAiB,SAE5CjiB,EAASgI,GAAGka,WAAYH,GAAU,KAAD,EACvC5B,EAAOgC,YAAc,UAErBN,EAAiBE,EAAQ,4CAEzB,sBAED,SAASE,IAERJ,EAAeO,oBAAqB,MAAOH,GAE3C9B,EAAOgC,YAAc,WAErBN,EAAiB,IAElB,CAIA1B,EAAOI,MAAMC,QAAU,GAEvBL,EAAOI,MAAME,OAAS,UACtBN,EAAOI,MAAMG,KAAO,mBACpBP,EAAOI,MAAM7J,MAAQ,QAErByJ,EAAOgC,YAAc,WAErBhC,EAAOQ,aAAe,WAErBR,EAAOI,MAAMgB,QAAU,KAExB,EAEApB,EAAOS,aAAe,WAErBT,EAAOI,MAAMgB,QAAU,KAExB,EAEApB,EAAOU,QAAU,WAEQ,OAAnBgB,GAUJjU,UAAU5F,GAAGqa,eAAgB,eADT,CAAEC,iBAAkB,CAAE,cAAe,gBAAiB,gBAAiB,YAChCX,KAAMG,GACjE7gB,aAAashB,QAAQ,MAAM,IAI3BV,EAAeW,KAIjB,CAED,CA6DcC,IA1CbnC,IAEAH,EAAOgC,YAAc,oBA0CfP,GAAa1B,EAASwC,oBAE1BvC,EAAOwC,OAIT,IAAIC,OA5CL,SAA2BC,GAE1BvC,IAEArP,QAAQ6R,KAAM,sDAAuDD,GAErE1C,EAAOgC,YAAc,gBAEtB,IAsCQhC,EAIP,IAAM4C,EAAU3C,SAASC,cAAe,KAoBxC,OAlBgC,IAA3BlgB,OAAO6iB,iBAEXD,EAAQE,KAAO7C,SAAS8C,SAASD,KAAKE,QAAS,SAAU,UACzDJ,EAAQK,UAAY,sBAIpBL,EAAQE,KAAO,4BACfF,EAAQK,UAAY,uBAIrBL,EAAQxC,MAAMG,KAAO,mBACrBqC,EAAQxC,MAAM7J,MAAQ,QACtBqM,EAAQxC,MAAM8C,eAAiB,OAE/BvC,EAAgBiC,GAETA,CAIT,GAAC,4CAID,WAEC,GAAK,OAAQnV,UAAY,CAIxB,GAAK,iBAAiB0V,KAAM1V,UAAU2V,WAAc,OAEpD3V,UAAU5F,GAAGga,iBAAkB,kBAAkB,WAEhD9B,EAASwC,oBAAqB,CAE/B,GAED,CAED,KAAC,EAnMY,GAARxC,GAiLEwC,oBAAqB,EAsB7BxC,GAASsD,iC,YCvLYC,GAAU,kDAG3B,aAAc,IAAD,EASgB,OAThB,qBACT,gBACK7a,MAAQ,CACT,WAAc,EACd,SAAY,EACZ,aAAgB,GAEpB,EAAK2V,gBAAkB,GACvBtd,aAAashB,QAAQ,MAAM,GAC3B,EAAKmB,aAAc,EAAM,CAC7B,CAuKC,OAvKA,+FAGD,gGAYI,OAVA9jB,KAAK4e,iBAAmB,GACxB5e,KAAKwD,MAAQ,IAAIlD,KACjBN,KAAKI,SAAW,IAAIE,KAAoB,CAAEyjB,OAAO,IACjD/jB,KAAKI,SAAS4jB,QAASzjB,OAAOC,WAAYD,OAAOE,aACjDT,KAAKI,SAAS6jB,cAAe,QAAU,GACvCjkB,KAAKI,SAAS8jB,eAAiB5jB,KAC/BN,KAAKK,OAAS,IAAIF,EAAOH,KAAKI,UAE9BJ,KAAKmkB,MAAQ,IAAI7jB,IAEjB,UACMN,KAAKokB,aAAa,KAAD,GAOS,OAJhCpkB,KAAKqkB,aAAe,IAAI/jB,IAAmB,SAAU,GACrDN,KAAKwD,MAAM5C,IAAIZ,KAAKqkB,cACpBrkB,KAAKskB,SAAW,IAAIhkB,IAAwB,SAAU,GACtDN,KAAKskB,SAASnjB,SAASyB,IAAK,EAAG,IAAK,GACpC5C,KAAKwD,MAAM5C,IAAKZ,KAAKskB,UAAW,UAEflQ,EAAaS,cAAc,KAAD,GAmBzC,OAnBEP,EAAI,OAERtU,KAAK0e,MAAQ,IAAID,GAAa,EAAEze,KAAKwD,MAAOxD,KAAK2U,cACjD3U,KAAK2e,gBAAgBzO,KAAKlQ,KAAK0e,OAC/B1e,KAAK4e,iBAAiB1O,KAAKlQ,KAAK0e,OAGhC1e,KAAKwD,MAAM5C,IAAIZ,KAAKukB,QAEpBvkB,KAAKue,KAAO,IAAIT,GAAY,4BAC5B9d,KAAKue,KAAK0B,WAAWjgB,KAAKwD,MAAO,cAAe,CAAC,GAAG,EAAE,GAAI,CAAC,EAAE,EAAE,IAC/DxD,KAAKkgB,YAAc,IAAItC,GACnB,IAAItd,KAAc,GAAG,EAAE,IACvB,IAAIA,MAAmBwf,iBAAkB,IAAIxf,KAAe,EAAG,EAAG,GAAK,GACvE,IAAIgU,EAAKQ,UAAU,EAAE,EAAE,GACvB,GACA,IAAIxU,KAAcN,KAAKue,KAAKP,cAAehe,KAAKue,KAAKN,OAAO,EAAGje,KAAKue,KAAKP,eACzEhe,KAAK2U,aACL,KACF,UACI3U,KAAKkgB,YAAY5D,mBAAmB,KAAD,GAUpB,OATrBtc,KAAK2e,gBAAgBzO,KAAKlQ,KAAKkgB,aAC/BlgB,KAAKkgB,YAAYC,eAAengB,KAAKue,MACrCve,KAAK4e,iBAAiB1O,KAAKlQ,KAAKue,MAGhCve,KAAKgK,SAAW,IAAIiS,EAAIjc,KAAK2U,cACzB5K,EAAW,IAAID,EACnB9J,KAAKgK,SAASmW,eAAepW,GAC7B/J,KAAKgK,SAASmW,eAAengB,KAAKK,QAAQ,KAC1CL,KAAK4e,iBAAgB,UAAY7U,EAASkW,WAAWjgB,KAAKwD,OAAM,yBAA1C0M,KAAI,gBAC1BlQ,KAAKgK,SAASwT,kBAGdxd,KAAKwkB,UAAYxkB,KAAKwkB,UAAUC,KAAKzkB,MACrCA,KAAK0kB,mBAAqB1kB,KAAK0kB,mBAAmBD,KAAKzkB,MACvDA,KAAK2kB,eAAiB3kB,KAAK2kB,eAAeF,KAAKzkB,MAG/CA,KAAK2kB,iBAGL3kB,KAAK4kB,MAAMC,YAAY7kB,KAAKI,SAASoC,YACrCxC,KAAKwkB,YAELhE,SAASsE,KAAKD,YAAavE,GAASyE,aAAc/kB,KAAKI,WACvDJ,KAAKI,SAASgI,GAAGC,SAAU,EAAK,iDAEnC,kDAzEA,IAyEA,4BAGD,WAAiB,IAAD,OACZ9H,OAAO6hB,iBAAiB,SAAUpiB,KAAK0kB,oBACvCnkB,OAAO6hB,iBAAiB,uBAAuB,SAAS4C,GACpD/S,EAA+BgT,gBACnC,IAEAzE,SAAS4B,iBAAiB,WAAW,SAAC8C,GAClC,IAAIC,EAAYD,EAAME,IAEtB,OADA,EAAKpb,SAASqb,eAAe,EAAKhlB,QAC3B8kB,GACH,IAAK,IACD,EAAK9kB,OAAS,IAAIF,EAAO,EAAKC,UAC9B,MACJ,IAAK,IACD,EAAKC,OAAS,IAAIgC,EAAc,EAAKjC,UACrC,MACJ,IAAK,IACD,EAAKC,OAAS,IAAI6B,EAAgB,IAAIlB,MAAS,KAAM,IAAM,KAC3D,MACJ,IAAK,IACD,EAAKX,OAAS,IAAI6B,EAAgB,IAAIlB,KAAQ,KAAM,IAAM,KAC1D,MACJ,IAAK,IACD,EAAKX,OAAS,IAAI6B,EAAgB,IAAIlB,KAAQ,EAAK,GAAM,IAKjE,EAAKgJ,SAASmW,eAAe,EAAK9f,QAClC,EAAK2J,SAASwT,iBAEhB,IAAG,EACT,GAAC,yEAGD,sHACqBpJ,EAAaS,cAAc,KAAD,EAAvCP,EAAI,OACRtU,KAAKqV,cAAgB,IAAIf,EAAKU,YAC1BsQ,EAA2B,IAAIhR,EAAKiR,gCACpCC,EAAa,IAAIlR,EAAKmR,sBAAsBH,GAC5CI,EAAuB,IAAIpR,EAAKqR,iBAChCC,EAAS,IAAItR,EAAKuR,oCAEtB7lB,KAAK2U,aAAe,IAAIL,EAAKwR,wBAAwBN,EAAYE,EAAsBE,EAAQN,GAC/FtlB,KAAK2U,aAAaoR,WAAW,IAAIzR,EAAKQ,UAAU,GAAG,IAAI,IAAI,iDAC9D,kDAbA,IAaA,gCAGD,WACI9U,KAAKK,OAAO2lB,eACZhmB,KAAKI,SAAS4jB,QAAQzjB,OAAOC,WAAYD,OAAOE,aAChDT,KAAKI,SAASkJ,OAAQtJ,KAAKwD,MAAOxD,KAAKK,OAAO4lB,oBAClD,GAAC,uBAGD,WACI,IAAIC,EAAYlmB,KAAKmkB,MAAMgC,WAC3BnmB,KAAKI,SAASgmB,iBAAiBpmB,KAAKwkB,WACpCxkB,KAAK2U,aAAa0R,eAAeH,EAAW,IAC5ClmB,KAAK4e,iBAAiBE,SAAQ,SAASE,GACnCA,EAAOC,SACX,IACAjf,KAAK2e,gBAAgBG,SAAQ,SAASC,GAClCA,EAAKhC,eACT,IACA/c,KAAKK,OAAOimB,8BACZ1S,EAAwBiB,YAAY7U,KAAKgK,UAAUuc,cACnDvmB,KAAKwmB,SAAS,CAAC,SAAYxmB,KAAKgK,SAASyc,WAAY,WAAczmB,KAAKgK,SAASmR,gBAAiB,aAAgBnb,KAAKgK,SAASkT,oBAChIld,KAAKI,SAASkJ,OAAQtJ,KAAKwD,MAAOxD,KAAKK,OAAO4lB,oBAElD,GAAC,oBAED,WAAS,IAAD,OACJ,OACI,iCACI,sBAAKtF,MAAO,CAACxf,SAAS,WAAY2f,KAAK,OAAQ4F,IAAI,OAAQpiB,MAAM,OAAQgK,GAAG,aAAY,SAQpF,qBAAGqS,MAAO,CAAEkB,OAAQ,GAAIjB,QAAS,QAAS+F,WAAY,QAAQ,UAAE,kBAC5CC,SAAS5mB,KAAKgJ,MAAM6R,mBAG5C,sBAAKgM,IAAK,SAAAjC,GAAU,EAAKA,MAAQA,CAAM,MAInD,KAAC,EApL0B,CAASkC,a,SCZlCC,GAAY,CAChBjQ,MAAM,QACNoI,OAAO,QACP8H,gBAAgB,mCAChBC,eAAe,QACfC,iBAAkB,aAIPC,GAAW,WAEtB,IAAMC,EAAWC,eAEjB,OACE,qCACE,sBAAK1G,MAAOoG,GAAU,SACpB,uBAAKzY,GAAG,aAAaqS,MAAO,CAACxf,SAAS,WAAYulB,IAAI,KAAMY,MAAM,MAAM,UACtE,sBAAKC,UAAW,gBAAgB,SAC9B,sBAAI5G,MAAO,CAACe,UAAU,SAAU8F,SAAS,QAAQ,UAAC,UACzC,wBAAK,iBAGhB,sBAAKD,UAAW,wBAAwB,SACtC,yBACEA,UAAW,iBACXE,QAAS,kBAAML,EAAS,SAAS,EAAC,SACnC,cAIH,sBAAKG,UAAW,wBAAwB,SACxC,yBACIA,UAAW,iBACXE,QAAS,kBAAML,EAAS,gBAAgB,EAAC,SAC1C,wBAIH,sBAAKG,UAAW,wBAAwB,SACtC,yBACEA,UAAW,iBACXE,QAAS,kBAAML,EAAS,WAAW,EAAC,SACrC,6BAQb,E,yGC9CaM,GAAe,SAAH,GAA4C,IAAtCC,EAAW,EAAXA,YAAaC,EAAiB,EAAjBA,kBACxC,EAAwBC,IAAMC,UAAS,GAAM,oBAAtCC,EAAI,KAAEC,EAAO,KACNC,eAEdJ,IAAMK,WAAU,WACZF,EAAQL,EACZ,GAAG,CAACA,IAEJ,IAAMQ,EAAeC,aAAO,MAAPA,EAAc,gBAAGC,EAAK,EAALA,MAAK,kCACvCzH,QAAS,OACT0H,WAAY,SACZxR,MAAM,OACNuK,QAASgH,EAAME,QAAQ,EAAG,IAEvBF,EAAMG,OAAOC,SAAO,IACvBC,eAAgB,cAAY,IAGhC,OACI,qCACI,eAACC,GAAA,EAAI,UACD,gBAACC,GAAA,EAAM,CACHC,GAAI,CACA/R,MAAOvW,OAAOC,WAAW,EACzBsoB,WAAY,EACZ,qBAAsB,CACtBhS,MAAOvW,OAAOC,WAAW,EACzBuoB,UAAW,eAGfC,QAAQ,aACRC,OAAO,QACPlB,KAAMA,EAAK,UAEX,gBAACI,EAAY,CAACZ,UAAU,gBAAgBE,QAASG,EAAkB,UAC/D,eAAC,KAAgB,IACjB,sBAAKjH,MAAO,CAAC7J,MAAM,QAAQ,SACvB,qBAAI6J,MAAO,CAACe,UAAU,QAASwH,aAAa,IAAI,SAAC,wBAGzD,eAACC,GAAA,EAAO,UAK5B,E,oBCnDaC,GAAeC,0BCOtBC,GAAgB,CAClB,KAAQ,KACR,SAAY,KACZ,OAAU,MAIDC,GAAc,SAAH,GAA0C,IAApCC,EAAS,EAATA,UAAW5B,EAAiB,EAAjBA,kBAErC,EAAwBC,IAAMC,UAAS,GAAM,oBAAtCC,EAAI,KAAEC,EAAO,KACpB,EAAgDH,IAAM4B,WAAWL,IAA1DM,EAAmB,EAAnBA,oBAAqBC,EAAgB,EAAhBA,iBAE5B9B,IAAMK,WAAU,WACZF,EAAQwB,EACZ,GAAG,CAACA,IAEUvB,eAAd,IAEME,EAAeC,aAAO,MAAPA,EAAc,gBAAGC,EAAK,EAALA,MAAK,kCACvCzH,QAAS,OACT0H,WAAY,SACZjH,QAASgH,EAAME,QAAQ,EAAG,IAEvBF,EAAMG,OAAOC,SAAO,IACvBC,eAAgB,YAAU,IAG9B,EAAwCb,IAAMC,SAASwB,IAAc,oBAA9DM,EAAY,KAAEC,EAAe,KAgBpC,OAEI,qCACI,eAAClB,GAAA,EAAI,UACD,gBAACC,GAAA,EAAM,CACHC,GAAI,CACA/R,MAAOvW,OAAOC,WAAW,EACzBsoB,WAAY,EACZ,qBAAsB,CACtBhS,MAAOvW,OAAOC,WAAW,EACzBuoB,UAAW,eAGfC,QAAQ,aACRC,OAAO,OACPlB,KAAMA,EAAK,UAEX,gBAACI,EAAY,CAACV,QAASG,EAAmBL,UAAU,gBAAe,UAC/D,sBAAK5G,MAAO,CAAC7J,MAAM,QAAQ,SACvB,qBAAI6J,MAAO,CAACe,UAAU,OAAQoI,YAAY,IAAI,SAAC,YAEnD,eAAC,KAAe,OAEpB,eAACX,GAAA,EAAO,IACR,eAACR,GAAA,EAAI,CAAChI,MAAO,CAAC+H,eAAgB,SAAU9H,QAAS,OAAQ0H,WAAW,SAAUyB,cAAc,UAAU,SAE9FC,OAAOC,QAAQL,GAAczL,KAAI,YAA6B,IAAD,oBAA1B+L,EAAQ,KAAEC,EAAU,KACnD,OACI,sBAEIC,IAAG,UAAKF,EAAQ,QAChBpT,MAAO,GACPoI,OAAQ,GACRqI,UAAS,2BAAsB4C,GAC/B1C,QAAS,kBA/CrB,SAAC4C,GACrB,IAAMC,EAAa,gBAAOhB,IAC1BgB,EAAcD,GAAQ,WACtBR,EAAgBS,GAChBZ,EAAoB,CAChBa,aAAcF,EACd3mB,MAAO,EACP8mB,UAAW,EACXC,UAAW,EACX5I,OAAQ8H,EAAmBA,EAAiB9H,OAAS,EAAI,GAEjE,CAoCmD6I,CAAgBR,EAAS,GALnCA,EAQjB,YAS5B,E,wCCnFaS,GAAc,WAEzB,MAAkC9C,IAAMC,UAAS,GAAM,oBAAhD0B,EAAS,KAAEoB,EAAY,KAC9B,EAAsC/C,IAAMC,UAAS,GAAM,oBAApDH,EAAW,KAAEkD,EAAc,KAClC,EAAkChD,IAAMC,SAAS,KAAI,oBAA9CgD,EAAS,KAChB,GAD8B,KACMjD,IAAMC,SAAS,MAAI,oBAAhDiD,EAAU,KACjB,GADgC,KACMlD,IAAMC,SAAS,KAAG,oBAAjDkD,EAAW,KAAEC,EAAc,KAElC,EAAgDpD,IAAMC,SAAS,MAAK,oBAA7D6B,EAAgB,KAAED,EAAmB,KAU5C,OAPA7B,IAAMK,WAAU,WACW,OAArByB,GACFsB,EAAe,GAAD,oBAAKD,GAAW,CAAErB,KAElCtY,QAAQC,IAAI0Z,EACd,GAAG,CAACrB,IAGF,qCACE,gBAACP,GAAa8B,SAAQ,CAACzkB,MAAO,CAACkjB,mBAAkBD,uBAAqB,UACpE,iCACE,uBAAK/I,MAAO,CAACoJ,cAAc,MAAMrB,eAAe,gBAAiB9H,QAAQ,QAAQ,UAC/E,eAACuK,GAAA,EAAU,CAAC1D,QAAS,kBAAMmD,GAAa,EAAK,EAAEjK,MAAO,CAACzB,OAAO,GAAIkM,OAAO,IAAK7D,UAAU,SAAQ,SAC9F,eAAC,KAAO,MAEV,8BAAI,qCACJ,eAAC4D,GAAA,EAAU,CAAC1D,QAAS,kBAAMoD,GAAe,EAAK,EAAElK,MAAO,CAACzB,OAAO,GAAIkM,OAAO,IAAK7D,UAAU,SAAQ,SAChG,eAAC,KAAY,SAGjB,+BACI,sBACEA,UAAU,aACV5G,MAAO,CACLsG,eAAe,GAAD,OAAKL,SAAS,GAAe,IAAVkE,EAAc,MAAc,aAAKlE,SAAS,GAAgB,IAAXmE,EAAe,MAAe,KAC9GnK,QAAQ,OACRzf,SAAS,YACT,SAED6pB,EAAY7M,KAAI,SAACkM,EAAMgB,GACtB,OACE,sBAEEjB,IAAG,UAAKC,EAAKE,aAAY,QACzBzT,MAAkB,GAAXuT,EAAK3mB,MACZwb,OAAmB,GAAXmL,EAAK3mB,MACbid,MAAO,CACL+F,IAAI2D,EAAKI,UACT3J,KAAKuJ,EAAKG,UACVrpB,SAAU,WACV0gB,OAAQwI,EAAKxI,OAAOyJ,YAEtB7D,QAAS,WAAOpW,QAAQC,IAAI,wBAAD,OAAyB+Z,EAAG,kBAAUE,KAAKC,UAAUR,EAAYK,KAAQ,GAV/FA,EAaX,WAKR,eAAC,GAAW,CAAC7B,UAAWA,EAAW5B,kBAAmB,WAAOgD,GAAa,EAAM,IAChF,eAAC,GAAY,CAACjD,YAAaA,EAAaC,kBAAmB,WAAOiD,GAAe,EAAM,QAI/F,E,SCxDeY,OAlBf,WAME,OAJAvD,qBAAU,WACR1H,SAASkL,MAAQ,mBACnB,GAAG,IAGD,eAAC,KAAM,UACL,gBAAC,KAAM,WACL,eAAC,KAAK,CAACC,OAAK,EAACphB,KAAK,SAAS4W,QAAW,eAAC,GAAU,MACjD,eAAC,KAAK,CAACwK,OAAK,EAACphB,KAAK,IAAI4W,QAAW,eAAC,GAAQ,MAC1C,eAAC,KAAK,CAACwK,OAAK,EAACphB,KAAK,gBAAgB4W,QAAW,eAAC,GAAW,UAKjE,EClBayK,IAASC,WAAWrL,SAASsL,eAAe,SACpDxiB,OACH,eAAC,GAAG,I,mGCPeqE,EAAwB,WAGzC,WAAYoe,GAAK,oBACb/rB,KAAK+rB,IAAMA,CACf,CAmCC,OAnCA,6CAGD,SAAiBrS,EAAaL,GAC1BrZ,KAAK+rB,IAAIhS,WAAWL,EAAaL,EACrC,GAAC,yBAGD,SAAYK,EAAarB,GACrBrY,KAAK+rB,IAAIzb,MAAMoJ,EAAarB,EAChC,GAAC,yBAGD,SAAYqB,EAAasS,GACrBhsB,KAAK+rB,IAAIpa,YAAY+H,EAAasS,EACtC,GAAC,2BAGD,SAAcpP,GACV5c,KAAK+rB,IAAI3a,cAAcwL,EAC3B,GAAC,uBAGD,WACI5c,KAAK+rB,IAAIra,WACb,GAAC,uBAGD,WACI1R,KAAK+rB,IAAIlpB,QACb,GAAC,4BAGD,SAAeoa,GACXjd,KAAK+rB,IAAIta,eAAewL,EAC5B,KAAC,EAxCwC,E","file":"static/js/main.a6fa3956.chunk.js","sourcesContent":["//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.35;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 85, window.innerWidth / window.innerHeight, 0.1, 200 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") == \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n                let offsetVector = new Vector3(0,0,5);\r\n                offsetVector.applyQuaternion(this.observedState.rotation);\r\n                positionToLookAt.x += offsetVector.x;\r\n                positionToLookAt.y += offsetVector.y;\r\n                positionToLookAt.z += offsetVector.z;\r\n                this.camera.lookAt(positionToLookAt);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader()\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import {\r\n\tColor,\r\n\tMatrix4,\r\n\tMesh,\r\n\tPerspectiveCamera,\r\n\tPlane,\r\n\tShaderMaterial,\r\n\tUniformsUtils,\r\n\tVector3,\r\n\tVector4,\r\n\tWebGLRenderTarget,\r\n\tHalfFloatType,\r\n\tNoToneMapping,\r\n\tLinearSRGBColorSpace\r\n} from 'three';\r\n\r\nclass Reflector extends Mesh {\r\n\r\n\tconstructor( geometry, options = {} ) {\r\n\r\n\t\tsuper( geometry );\r\n\r\n\t\tthis.isReflector = true;\r\n\r\n\t\tthis.type = 'Reflector';\r\n\t\tthis.camera = new PerspectiveCamera(null, null, 0.1, 10);\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst color = ( options.color !== undefined ) ? new Color( options.color ) : new Color( 0x7F7F7F );\r\n\t\tconst textureWidth = options.textureWidth || 512;\r\n\t\tconst textureHeight = options.textureHeight || 512;\r\n\t\tconst clipBias = options.clipBias || 0;\r\n\t\tconst shader = options.shader || Reflector.ReflectorShader;\r\n\t\tconst multisample = ( options.multisample !== undefined ) ? options.multisample : 4;\r\n\r\n\t\t//\r\n\r\n\t\tconst reflectorPlane = new Plane();\r\n\t\tconst normal = new Vector3();\r\n\t\tconst reflectorWorldPosition = new Vector3();\r\n\t\tconst cameraWorldPosition = new Vector3();\r\n\t\tconst rotationMatrix = new Matrix4();\r\n\t\tconst lookAtPosition = new Vector3( 0, 0, - 1 );\r\n\t\tconst clipPlane = new Vector4();\r\n\r\n\t\tconst view = new Vector3();\r\n\t\tconst target = new Vector3();\r\n\t\tconst q = new Vector4();\r\n\r\n\t\tconst textureMatrix = new Matrix4();\r\n\t\tconst virtualCamera = this.camera;\r\n\r\n\t\tconst renderTarget = new WebGLRenderTarget( textureWidth, textureHeight, { samples: multisample, type: HalfFloatType } );\r\n\r\n\t\tconst material = new ShaderMaterial( {\r\n\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\r\n\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\tvertexShader: shader.vertexShader\r\n\t\t} );\r\n\r\n\t\tmaterial.uniforms[ 'tDiffuse' ].value = renderTarget.texture;\r\n\t\tmaterial.uniforms[ 'color' ].value = color;\r\n\t\tmaterial.uniforms[ 'textureMatrix' ].value = textureMatrix;\r\n\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n\t\t\treflectorWorldPosition.setFromMatrixPosition( scope.matrixWorld );\r\n\t\t\tcameraWorldPosition.setFromMatrixPosition( camera.matrixWorld );\r\n\r\n\t\t\trotationMatrix.extractRotation( scope.matrixWorld );\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\t\t\tnormal.applyMatrix4( rotationMatrix );\r\n\r\n\t\t\tview.subVectors( reflectorWorldPosition, cameraWorldPosition );\r\n\r\n\t\t\t// Avoid rendering when reflector is facing away\r\n\r\n\t\t\tif ( view.dot( normal ) > 0 ) return;\r\n\r\n\t\t\tview.reflect( normal ).negate();\r\n\t\t\tview.add( reflectorWorldPosition );\r\n\r\n\t\t\trotationMatrix.extractRotation( camera.matrixWorld );\r\n\r\n\t\t\tlookAtPosition.set( 0, 0, - 1 );\r\n\t\t\tlookAtPosition.applyMatrix4( rotationMatrix );\r\n\t\t\tlookAtPosition.add( cameraWorldPosition );\r\n\r\n\t\t\ttarget.subVectors( reflectorWorldPosition, lookAtPosition );\r\n\t\t\ttarget.reflect( normal ).negate();\r\n\t\t\ttarget.add( reflectorWorldPosition );\r\n\r\n\t\t\tvirtualCamera.position.copy( view );\r\n\t\t\tvirtualCamera.up.set( 0, 1, 0 );\r\n\t\t\tvirtualCamera.up.applyMatrix4( rotationMatrix );\r\n\t\t\tvirtualCamera.up.reflect( normal );\r\n\t\t\tvirtualCamera.lookAt( target );\r\n\r\n\t\t\tvirtualCamera.far = camera.far; // Used in WebGLBackground\r\n\r\n\t\t\tvirtualCamera.updateMatrixWorld();\r\n\t\t\tvirtualCamera.projectionMatrix.copy( camera.projectionMatrix );\r\n\r\n\t\t\t// Update the texture matrix\r\n\t\t\ttextureMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\t\t\ttextureMatrix.multiply( virtualCamera.projectionMatrix );\r\n\t\t\ttextureMatrix.multiply( virtualCamera.matrixWorldInverse );\r\n\t\t\ttextureMatrix.multiply( scope.matrixWorld );\r\n\r\n\t\t\t// Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\r\n\t\t\t// Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\r\n\t\t\treflectorPlane.setFromNormalAndCoplanarPoint( normal, reflectorWorldPosition );\r\n\t\t\treflectorPlane.applyMatrix4( virtualCamera.matrixWorldInverse );\r\n\r\n\t\t\tclipPlane.set( reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant );\r\n\r\n\t\t\tconst projectionMatrix = virtualCamera.projectionMatrix;\r\n\r\n\t\t\tq.x = ( Math.sign( clipPlane.x ) + projectionMatrix.elements[ 8 ] ) / projectionMatrix.elements[ 0 ];\r\n\t\t\tq.y = ( Math.sign( clipPlane.y ) + projectionMatrix.elements[ 9 ] ) / projectionMatrix.elements[ 5 ];\r\n\t\t\tq.z = - 1.0;\r\n\t\t\tq.w = ( 1.0 + projectionMatrix.elements[ 10 ] ) / projectionMatrix.elements[ 14 ];\r\n\r\n\t\t\t// Calculate the scaled plane vector\r\n\t\t\tclipPlane.multiplyScalar( 2.0 / clipPlane.dot( q ) );\r\n\r\n\t\t\t// Replacing the third row of the projection matrix\r\n\t\t\tprojectionMatrix.elements[ 2 ] = clipPlane.x;\r\n\t\t\tprojectionMatrix.elements[ 6 ] = clipPlane.y;\r\n\t\t\tprojectionMatrix.elements[ 10 ] = clipPlane.z + 1.0 - clipBias;\r\n\t\t\tprojectionMatrix.elements[ 14 ] = clipPlane.w;\r\n\r\n\t\t\t// Render\r\n\t\t\tscope.visible = false;\r\n\r\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\r\n\t\t\tconst currentShadowAutoUpdate = renderer.shadowMap.autoUpdate;\r\n\t\t\tconst currentOutputColorSpace = renderer.outputColorSpace;\r\n\t\t\tconst currentToneMapping = renderer.toneMapping;\r\n\r\n\t\t\trenderer.xr.enabled = false; // Avoid camera modification\r\n\t\t\trenderer.shadowMap.autoUpdate = false; // Avoid re-computing shadows\r\n\t\t\trenderer.outputColorSpace = LinearSRGBColorSpace;\r\n\t\t\trenderer.toneMapping = NoToneMapping;\r\n\r\n\t\t\trenderer.setRenderTarget( renderTarget );\r\n\r\n\t\t\trenderer.state.buffers.depth.setMask( true ); // make sure the depth buffer is writable so it can be properly cleared, see #18897\r\n\r\n\t\t\tif ( renderer.autoClear === false ) renderer.clear();\r\n\t\t\trenderer.render( scene, virtualCamera );\r\n\r\n\t\t\trenderer.xr.enabled = currentXrEnabled;\r\n\t\t\trenderer.shadowMap.autoUpdate = currentShadowAutoUpdate;\r\n\t\t\trenderer.outputColorSpace = currentOutputColorSpace;\r\n\t\t\trenderer.toneMapping = currentToneMapping;\r\n\r\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t\t\t// Restore viewport\r\n\r\n\t\t\tconst viewport = camera.viewport;\r\n\r\n\t\t\tif ( viewport !== undefined ) {\r\n\r\n\t\t\t\trenderer.state.viewport( viewport );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.visible = true;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getRenderTarget = function () {\r\n\r\n\t\t\treturn renderTarget;\r\n\r\n\t\t};\r\n\r\n\t\tthis.dispose = function () {\r\n\r\n\t\t\trenderTarget.dispose();\r\n\t\t\tscope.material.dispose();\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nReflector.ReflectorShader = {\r\n\r\n\tuniforms: {\r\n\r\n\t\t'color': {\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'tDiffuse': {\r\n\t\t\tvalue: null\r\n\t\t},\r\n\r\n\t\t'textureMatrix': {\r\n\t\t\tvalue: null\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tvertexShader: /* glsl */`\r\n\t\tuniform mat4 textureMatrix;\r\n\t\tvarying vec4 vUv;\r\n\r\n\t\t#include <common>\r\n\t\t#include <logdepthbuf_pars_vertex>\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvUv = textureMatrix * vec4( position, 1.0 );\r\n\r\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\r\n\r\n\t\t\t#include <logdepthbuf_vertex>\r\n\r\n\t\t}`,\r\n\r\n\tfragmentShader: /* glsl */`\r\n\t\tuniform vec3 color;\r\n\t\tuniform sampler2D tDiffuse;\r\n\t\tvarying vec4 vUv;\r\n\r\n\t\t#include <logdepthbuf_pars_fragment>\r\n\r\n\t\tfloat blendOverlay( float base, float blend ) {\r\n\r\n\t\t\treturn( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\r\n\r\n\t\t}\r\n\r\n\t\tvec3 blendOverlay( vec3 base, vec3 blend ) {\r\n\r\n\t\t\treturn vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\t#include <logdepthbuf_fragment>\r\n\r\n\t\t\tvec4 base = texture2DProj( tDiffuse, vUv );\r\n\t\t\tgl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\r\n\r\n\t\t\t#include <tonemapping_fragment>\r\n\t\t\t#include <encodings_fragment>\r\n\r\n\t\t}`\r\n};\r\n\r\nexport { Reflector };","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\nimport { Reflector } from '../addons/Reflector';\r\nimport { Object3D } from 'three';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        super('res/models/source/AutoConInterior.gltf');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n    }\r\n\r\n\r\n    generateRetrovisor(){\r\n        const path = new THREE.Shape();\r\n        path.absellipse(0,0,0.15,0.075,0, Math.PI*2, false,0);\r\n        const ellipseGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const retrovisor = new Reflector(\r\n            ellipseGeometry,\r\n            {\r\n                textureWidth: 512,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: 512,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0.35,\r\n                multisample: 2\r\n            }\r\n        );\r\n        retrovisor.rotateX( -Math.PI );\r\n        retrovisor.rotateY( 0.3 );\r\n        retrovisor.position.set(0,0.625,0.375);\r\n        this.threeDModel.add(retrovisor);\r\n    }\r\n\r\n\r\n    generateLeftMirror(){\r\n        const path = new THREE.Shape();\r\n        path.absellipse(0,0,0.105,0.075,0, Math.PI*2, false,0);\r\n        const leftMirrorGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const leftMirror = new Reflector(\r\n            leftMirrorGeometry, \r\n            {\r\n                textureWidth: 512,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: 512,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0,\r\n                multisample: 2\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(leftMirror);\r\n        container.position.set(1.148, 0.394, 0.538);\r\n        container.rotateX(-Math.PI+0.03);\r\n        leftMirror.rotateY(-26*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateRightMirror(){\r\n        const path = new THREE.Shape();\r\n        path.absellipse(0,0,0.105,0.075,0, Math.PI*2, false,0);\r\n        const rightMirrorGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const rightMirror = new Reflector(\r\n            rightMirrorGeometry, \r\n            {\r\n                textureWidth: 512,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: 512,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0,\r\n                multisample: 2\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(rightMirror);\r\n        container.position.set(-1.138, 0.394, 0.53);\r\n        container.rotateX(-Math.PI+2.9*Math.PI/180);\r\n        rightMirror.rotateY(28.2*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateMirrors(){\r\n        this.generateRetrovisor();\r\n        this.generateLeftMirror();\r\n        this.generateRightMirror();\r\n    }\r\n\r\n    async addToScene(scene){\r\n        await super.addToScene(scene, \"driverCar\", POSITION, SCALE);\r\n        this.generateMirrors();\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, -this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, -this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n\r\n        let rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation\r\n        );\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(-this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(-this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation + this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                console.log(\"DPAD DOWN\");\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                console.log(\"DPAD LEFT\");\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                console.log(\"DPAD RIGHT\");\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                console.log(\"DPAD UP\");\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            console.log(\"BOTON X\");\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            console.log(\"BOTON TRIANGULO\");\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            console.log(\"BOTON CIRCULO\");\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            console.log(\"BOTON CUADRADO\");\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.carLogic.changeShiftBox(\"manual\");\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            console.log(\"BOTON +\");\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            console.log(\"BOTON -\");\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            console.log(\"BOTON L2\");\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            console.log(\"BOTON L3\");\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n            console.log(\"BOTON R3\");\r\n        this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            console.log(\"BOTON ENTER\");\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            console.log(\"BOTON SHARE\");\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            console.log(\"BOTON OPTIONS\");\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            console.log(\"BOTON BUMPER LEFT\");\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            console.log(\"BOTON BUMPER RIGHT\");\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            console.log(\"RUEDA IZQ\");\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            console.log(\"RUEDA DER\");\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n           // console.log(\"Adelante/Abajo Joy Izq: \" + this.gamepad.axes[this.yLeftAxe]);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n            //console.log(\"Izq/Der Joy Izq: \" + this.gamepad.axes[this.xLeftAxe]);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n           // console.log(\"Adelante/Abajo Joy Der: \" + this.gamepad.axes[this.yRightAxe]);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n           // console.log(\"Izq/Der Joy Der: \" + this.gamepad.axes[this.xRightAxe]);\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n            //console.log(this.gamepad.buttons[this.buttonR2]);\r\n            //this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n            console.log(\"accelerator: \" + this.gamepad.buttons[this.buttonR2].value);\r\n            //this.auto.acelerar();\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n            //this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n            //console.log(\"Break: \" + this.gamepad.buttons[this.buttonL2].value);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            //console.log(\"Aumento de marcha (R1)\");\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                console.log(\"Marcha Actual: \" + this.actualShift)\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            //console.log(\"reduccion de marcha (L1)\");\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                console.log(\"Marcha Actual: \" + this.actualShift)\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            console.log(\"shareButton\");\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            console.log(\"padUp\");\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            console.log(\"padDown\");\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            console.log(\"padLeft\");\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            console.log(\"padRight\");\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            console.log(\"buttonA\");\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            console.log(\"buttonB\");\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            console.log(\"buttonY\");\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            console.log(\"buttonX\");\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            console.log(\"buttonR3\");\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            console.log(\"buttonL3\");\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            console.log(\"padUp\");\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            console.log(\"padDown\");\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            console.log(\"padLeft\");\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            console.log(\"padRight\");\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            console.log(\"Menu\");\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        this.engineState = new TurnedOnEngine();\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4 } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst POSITION = [0,0,0];\r\nconst FACTOR_BRAKE_TO_FORCE = 300;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld){\r\n        super();\r\n        this.carEngine = new CarEngine();\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(POSITION[0], POSITION[1], POSITION[2]);\r\n        this.rotationQuaternion = new Vector4(0,0,0,1);\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        this.carPhysics.buildAmmoPhysics();\r\n        \r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM()\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.setMargin(0.05);\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n           // console.log(this.observedState);\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n    }\r\n}","import * as THREE from 'three';\r\nimport BoxPhysics from '../LogicModel/Physics/PhysicsTypes/BoxPhysics';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\n// import ConePhysics from '../LogicModel/Physics/PhysicsTypes/ConePhysics'\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\n\r\nexport default class LevelFactory {\r\n\r\n\r\n    constructor(level, scene,physicsWorld){\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld\r\n        this.physicsToUpdate = [];\r\n        this.objectsToAnimate = [];\r\n        if(level === 0){\r\n            this.createLevel0()\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        })\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n    }\r\n\r\n\r\n    async createRectangle(position,length, width, height ,rotation, pathTexture, Ammo, normalMapPath = null){\r\n        \r\n        const texture = new THREE.TextureLoader().load( pathTexture );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( length, height );\r\n        const floorMaterial = new THREE.MeshStandardMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        if( normalMapPath ){\r\n            let normalTexture = new THREE.TextureLoader().load(\r\n                normalMapPath\r\n            );\r\n            normalTexture.repeat.set( length, height );\r\n            normalTexture.wrapS = THREE.RepeatWrapping;\r\n            normalTexture.wrapT = THREE.RepeatWrapping;\r\n            floorMaterial.normalMap = normalTexture;\r\n            floorMaterial.normalScale.set(10, 10);\r\n        }\r\n        const rampa = new THREE.BoxGeometry( length, width, height);\r\n        rampa.rotateX(rotation);\r\n        const quaternionRamp = new THREE.Quaternion();\r\n        quaternionRamp.setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), rotation);\r\n\r\n        let rampPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            quaternionRamp ,  //Quaternion2\r\n            new Ammo.btVector3(0,0,0), //Inertia\r\n            0, //Mass\r\n            new THREE.Vector3(length, width, height), //Shape\r\n            this.physicsWorld, //Physics World\r\n            1000 // friction\r\n        ); \r\n        \r\n        await rampPhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(rampPhysics);\r\n        let ramp = new THREE.Mesh( rampa, floorMaterial );\r\n        ramp.position.set(position[0],position[1],position[2]);\r\n        this.scene.add(ramp);\r\n    }\r\n\r\n\r\n    async createCone(position , Ammo){\r\n        let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        cone.addToScene(this.scene, \"trafficCone\", position, [ 0.5, 0.5, 0.5]);\r\n        let conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(cone.RADIUS_BOTTOM, cone.HEIGHT/2, cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(conePhysics);\r\n        conePhysics.attachObserver(cone);\r\n        this.objectsToAnimate.push(cone);\r\n    }\r\n\r\n\r\n    async createLevel0(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.createRectangle( [ 10, 0, 10 ], 10, 2, 10, -Math.PI/8, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ -10, 0, 10 ], 10, 2, 10, -Math.PI/4, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ 0, 0, 0 ], 100, 0.1, 100, 0, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createCone( [ 0, 0.5, 10 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 30 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 20 ], Ammo );\r\n    }\r\n\r\n}\r\n\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport Camera from '../Camera/Camera';\r\nimport CarOffsetCamera from '../Camera/CarOffsetCamera';\r\nimport OrbitalCamera from '../Camera/OribtalCamera';\r\nimport CarModel from '../3DModels/CarModel';\r\nimport LogitechG29ControllerSingleton from '../LogicModel/ControllerMapping/LogitechG29Controller';\r\nimport XboxControllerSingleton from '../LogicModel/ControllerMapping/XboxController';\r\nimport Car from '../LogicModel/CarLogic/Car';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\nimport { Vector3 } from 'three';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\nimport LevelFactory from '../Levels/LevelsFactory';\r\nimport  {VRButton}  from '../addons/VRbutton';\r\n\r\nexport default class ThreeScene extends Component{\r\n    \r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            \"currentRPM\": 0,\r\n            \"velocity\": 0,\r\n            \"currentShift\": 0,\r\n        };\r\n        this.physicsToUpdate = [];\r\n        localStorage.setItem(\"VR\", false);\r\n        this.gotAnyEvent = false;\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        //Generate elements needed to render the scene\r\n        this.objectsToAnimate = [];\r\n        this.scene = new THREE.Scene();\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true });\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\r\n        this.renderer.setClearColor( 0x87cefa, 1 );\r\n        this.renderer.outputEncoding = THREE.sRGBEncoding;\r\n        this.camera = new Camera(this.renderer);\r\n        \r\n        this.clock = new THREE.Clock();\r\n\r\n        //Ammo.js\r\n        await this.createAmmo();\r\n\r\n        //Add elements to the scene\r\n        this.ambientLight = new THREE.AmbientLight(0xffffff, 1.0);\r\n        this.scene.add(this.ambientLight);\r\n        this.sunLight = new THREE.DirectionalLight( 0xffffff, 1.0 );\r\n        this.sunLight.position.set( 0, 100, 0 );\r\n        this.scene.add( this.sunLight );\r\n        \r\n        let Ammo = await AmmoInstance.getInstance();\r\n\r\n        this.level = new LevelFactory(0,this.scene, this.physicsWorld);\r\n        this.physicsToUpdate.push(this.level);\r\n        this.objectsToAnimate.push(this.level);\r\n\r\n        \r\n        this.scene.add(this.mirror);\r\n\r\n        this.cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        this.cone.addToScene(this.scene, \"trafficCone\", [10,0,0], [1,1,1]);\r\n        this.conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(10,0,0), \r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(this.cone.RADIUS_BOTTOM, this.cone.HEIGHT/2, this.cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await this.conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(this.conePhysics);\r\n        this.conePhysics.attachObserver(this.cone);\r\n        this.objectsToAnimate.push(this.cone);\r\n\r\n        //Add driver's car to scene\r\n        this.carLogic = new Car(this.physicsWorld);\r\n        let carModel = new CarModel();\r\n        this.carLogic.attachObserver(carModel);\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n        this.carLogic.notifyObservers();\r\n        \r\n        //Bind this to methods of the class\r\n        this.animation = this.animation.bind(this);\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n        this.generateEvents = this.generateEvents.bind(this);\r\n        \r\n        //Handle resize and gamepad connection on window.\r\n        this.generateEvents();\r\n\r\n        //Append canvas to DOM in HTML and start animating\r\n        this.mount.appendChild(this.renderer.domElement);\r\n        this.animation();\r\n\r\n        document.body.appendChild( VRButton.createButton( this.renderer ) );\r\n        this.renderer.xr.enabled = true;\r\n        \r\n    }\r\n\r\n\r\n    generateEvents(){\r\n        window.addEventListener(\"resize\", this.handleWindowResize);\r\n        window.addEventListener(\"gamepaddisconnected\", function(e){\r\n            LogitechG29ControllerSingleton.removeInstance();  \r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            var numCamera = event.key;\r\n            this.carLogic.removeObserver(this.camera);\r\n            switch(numCamera){\r\n                case \"1\":\r\n                    this.camera = new Camera(this.renderer);\r\n                    break;\r\n                case \"2\":\r\n                    this.camera = new OrbitalCamera(this.renderer);\r\n                    break;\r\n                case \"3\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"4\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"5\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.carLogic.attachObserver(this.camera);\r\n            this.carLogic.notifyObservers();\r\n\r\n          }, false);\r\n    }\r\n\r\n\r\n    async createAmmo(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.tempTransform = new Ammo.btTransform();\r\n        let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n        let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n        let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n        let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n        this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, overlappingPairCache, solver, collisionConfiguratation);\r\n        this.physicsWorld.setGravity(new Ammo.btVector3(0,-9.8,0));\r\n    }\r\n\r\n\r\n    handleWindowResize(){\r\n        this.camera.handleResize();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance() );\r\n    }\r\n\r\n\r\n    animation(){\r\n        let deltaTime = this.clock.getDelta();\r\n        this.renderer.setAnimationLoop(this.animation);\r\n        this.physicsWorld.stepSimulation(deltaTime, 10);\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        });\r\n        this.camera.setPositionRelativeToObject();\r\n        XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n        this.setState({\"velocity\": this.carLogic.getSpeed(), \"currentRPM\": this.carLogic.getCurrentRPM(), \"currentShift\": this.carLogic.getCurrentShift()});\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance());\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div style={{position:\"absolute\", left:\"10px\", top:\"10px\", color:\"red\"}} id=\"Acelerador\">\r\n                    {/*\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Velocidad: {parseInt(this.state.velocity)} km/h\r\n                    </p>\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        RPM: {parseInt(this.state.currentRPM)}\r\n                    </p>*/}\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Cambio Actual: {parseInt(this.state.currentShift)}\r\n                    </p>\r\n                </div>\r\n                <div ref={mount => {this.mount = mount;}}></div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <div id=\"button-box\" style={{position:\"absolute\", top:\"5%\", right:\"5%\"}}>\r\n          <div className={\"MainMenuTitle\"}>\r\n            <h1 style={{textAlign:\"center\", fontSize:\"7rem\"}}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/scene\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </div>\r\n          <div className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/configs\")}\r\n            >\r\n              Configuración\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Grid } from '@mui/material'\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"right\", paddingRight:30}}>Configurations</h3>\r\n                        </div>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { createContext, useState } from 'react';\r\n\r\nexport const ItemsContext = createContext();\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport { ItemsContext } from '../LevelEditorContext/ItemsContext';\r\n\r\n\r\nconst allUnselected = {\r\n    \"cone\": null,\r\n    \"trapecio\": null,\r\n    \"street\": null\r\n};\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const {setLastSelectedItem, lastSelectedItem} = React.useContext(ItemsContext);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    const [itemSelected, setItemSelected] = React.useState(allUnselected);\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        const dictSelection = {...allUnselected};\r\n        dictSelection[item] = \"selected\";\r\n        setItemSelected(dictSelection);\r\n        setLastSelectedItem({\r\n            selectedItem: item,\r\n            scale: 1.0,\r\n            positionX: 0.0,\r\n            positionY: 0.0,\r\n            zIndex: lastSelectedItem ? lastSelectedItem.zIndex + 1 : 1\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"left\", paddingLeft:10}}>Items</h3>\r\n                        </div>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <Grid style={{justifyContent: \"center\", display: \"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n                        {\r\n                            Object.entries(itemSelected).map(([nameItem, isSelected]) => {\r\n                                return (\r\n                                    <img \r\n                                        key={nameItem}\r\n                                        src={`${nameItem}.png`} \r\n                                        width={75}\r\n                                        height={75} \r\n                                        className={`imageLevelEditor ${isSelected}`} \r\n                                        onClick={() => handleSelection(nameItem)}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport { Grid, Container, Typography, Button, IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { ItemsContext } from './LevelEditorContext/ItemsContext';\r\n\r\nconst MAX_WIDTH = 4000;\r\nconst MAX_HEIGHT = 4000;\r\n\r\nconst MAX_WIDTH_INPUT = 3000;\r\nconst MAX_HEIGHT_INPUT = 3000;\r\n\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = React.useState(false);\r\n  const [openConfigs, setOpenConfigs] = React.useState(false);\r\n  const [widthGrid, setWidthGrid] = React.useState(200);\r\n  const [heightGrid, setHeightGrid] = React.useState(200);\r\n  const [itemsInGrid, setItemsInGrid] = React.useState([]);\r\n\r\n  const [lastSelectedItem, setLastSelectedItem] = React.useState(null);\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (lastSelectedItem !== null){\r\n      setItemsInGrid([...itemsInGrid, lastSelectedItem]);\r\n    }\r\n    console.log(itemsInGrid);\r\n  }, [lastSelectedItem]);\r\n\r\n  return (\r\n    <>\r\n      <ItemsContext.Provider value={{lastSelectedItem, setLastSelectedItem}}>\r\n        <div>\r\n          <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n            <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n              <AddIcon/>\r\n            </IconButton>\r\n            <h1>Driving Simulator - Level Editor</h1>\r\n            <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n              <div \r\n                className=\"level-grid\"\r\n                style={{\r\n                  backgroundSize: `${parseInt(25 - widthGrid*100/(MAX_WIDTH*4))}% ${parseInt(25 - heightGrid*100/(MAX_HEIGHT*4))}%`,\r\n                  display:\"flex\",\r\n                  position:\"relative\"\r\n                }}\r\n              >\r\n                {itemsInGrid.map((item, idx) => {\r\n                  return(\r\n                    <img \r\n                      key={idx} \r\n                      src={`${item.selectedItem}.png`} \r\n                      width={item.scale*75} \r\n                      height={item.scale*75} \r\n                      style={{\r\n                        top:item.positionY, \r\n                        left:item.positionX,\r\n                        position: \"absolute\",\r\n                        zIndex: item.zIndex.toString()\r\n                      }}\r\n                      onClick={() => {console.log(`OPEN CONFIGS OF idx: ${idx}, obj: ${JSON.stringify(itemsInGrid[idx])}`)}}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n          </div>\r\n          \r\n        </div>\r\n        <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n        <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n      </ItemsContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import ThreeScene from './Scene/ThreeScene';\r\nimport { useEffect } from 'react';\r\nimport { MainMenu } from './Menus/MainMenu';\r\nimport { LevelEditor } from './Menus/LevelEditor';\r\nimport { HashRouter as Router, Routes as Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    document.title = 'Driving Simulator';\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/scene\" element = {<ThreeScene/>} />\r\n        <Route exact path=\"/\" element = {<MainMenu/>} />\r\n        <Route exact path=\"/level-editor\" element = {<LevelEditor/>} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n","export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}"],"sourceRoot":""}