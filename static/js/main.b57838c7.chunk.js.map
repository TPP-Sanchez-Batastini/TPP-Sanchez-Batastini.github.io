{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/Models.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics.js","3DModels/StraightStreet.js","3DModels/Intersection.js","3DModels/Curve.js","3DModels/TStreet.js","3DModels/Checkpoint.js","Levels/LevelScore.js","Levels/LevelsFactory.js","addons/VRbutton.js","LogicModel/IA/TrafficModel.js","Menus/Sessions/SessionContext.jsx","Menus/Constants/Constants.js","Menus/Components/EndOfLevelModal.jsx","Menus/Components/PauseModal.jsx","Scene/ThreeScene.jsx","Menus/MainMenu.jsx","Menus/Components/ConfigDrawer.jsx","Menus/LevelEditorContext/ItemsContext.jsx","Menus/Components/ItemsDrawer.jsx","Menus/Components/InputsGrid.jsx","Menus/Resources/Street/AbstractStreet.js","Menus/Resources/Street/Curve.js","Menus/Resources/Street/StraightStreet.js","Menus/Resources/Street/TStreet.js","Menus/Resources/Street/StraightStreetLinker.js","Menus/Resources/StreetFactory.js","Menus/Resources/Street/Intersection.js","Menus/Resources/LevelEditor.js","Menus/Components/LevelGrid.jsx","Menus/LevelEditor.jsx","Menus/Resources/Hasher.js","Menus/Components/LoginForm.jsx","Menus/Sessions/SessionHooks.jsx","Menus/Components/SignUpForm.jsx","Menus/Sessions/SessionProvider.jsx","Menus/Components/CardLevel/LevelCardContent.jsx","Menus/Components/LevelsSelectionGrid.jsx","Menus/Components/LoginDialog.jsx","Menus/Components/LoginButton.jsx","Menus/LevelsList.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","constructor","car","this","handleAccelerate","valueClutch","valueAccelerator","accelerate","handleBrake","valueBrake","brake","doHorn","changeShift","valueShift","turnDirection","wheelAxesValue","turnOnCar","updateCar","update","changeShiftBox","mode","turnRightLight","turnLeftLight","turnParkingLight","Observer","observedState","newState","Camera","renderer","super","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","rotation","handleResize","aspect","updateProjectionMatrix","setPositionRelativeToObject","cameraOffset","Vector3","applyQuaternion","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","rotationQuat","x","y","z","w","normalize","quaternion","getCameraInstance","addContainerToScene","scene","rotate","CarOffsetCamera","positionCamera","cameraOffsetRotated","positionToLookAt","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","async","loadAsync","threeDObject","objectName","scale","modelVariable","loadFBX","e","loadGLTF","name","getModel","animate","ModelsSingleton","carModel","building_1","building_2","building_3","building_4","changeMaterialsToBasic","children","i","length","child","isGroup","isMesh","newMaterial","prototype","call","material","receiveShadow","castShadow","pathToTextureRcvd","result","Models","static","loadModels","Error","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","LIGTH_TIC","CarModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","lastVelocityRotation","lastRPMRotation","lastTurnOff","Date","generateRetrovisor","plane","retrovisor","Reflector","textureWidth","textureHeight","clipBias","multisample","rotateX","rotateY","generateLeftMirror","leftMirrorGeometry","leftMirror","container","Object3D","generateRightMirror","rightMirrorGeometry","rightMirror","generateMirrors","generateSpotlights","rightSpotlight","leftSpotlight","targetRight","targetLeft","target","shadow","mapSize","width","height","near","far","fov","intensity","angle","distance","rightTurnlight","targetTurnRight","leftTurnlight","targetTurnLeft","rightTurnlightBack","targetTurnRightBack","leftTurnlightBack","targetTurnLeftBack","turnRigth","time","timePassed","turnLeft","arguments","undefined","hasMirrors","models","getInstance","clone","moveCar","addPhysicsView","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","watchPhysicsColliders","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","rotateVelocityAndRPM","steeringWheel","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","velocityIndicator","rpmIndicator","newVelRotation","abs","newRPMRotation","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorOne","default","require","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","checkEvents","doActionByMapping","doActionsPedals","axes","doActionsWheel","doActionsDPad","doActionsButtons","buttons","pressed","doActionsShifter","LogitechG29ControllerSingleton","instance","XboxController","auto","pause","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","doActionsAxes","axe","doActionHotKeys","value","doActionsTriggers","XboxControllerSingleton","Observable","observers","attachObserver","observer","removeObserver","index","indexOf","splice","notifyObservers","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","updatePhysics","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","getRigidBody","setEngineForce","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringRotation","setSteeringValue","getVelocity","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","changeValueInRPMCurve","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","TurnedOnEngine","CarEngine","useAudio","engineState","playbackRate","turnOn","Audio","play","setTimeout","soundEngine","AudioContext","webkitAudioContext","fetch","then","response","arrayBuffer","buffer","decodeAudioData","soundEngineSource","createBufferSource","loop","connect","destination","start","clutchIsPressed","handleEngineShutdown","shiftBox","shutDownEngine","isInConditionToAccelerate","engineCanApplyForce","rpmReturn","changeRPM","RPMModification","log","getCurrentRPM","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","isValidShift","shift","calculateNormalFactorRPM","newShift","oldVelocity","getValueForNewRPM","normalFactorRPM","XValue","getEngineForce","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactor","getCurrentShift","ManualBox","SemiAutomaticBox","Car","initialPosition","initialRotation","Quaternion","identity","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","turnRigthLigth","turnLeftLigth","positionAndRotation","getDataToAnimate","getLastRotation","getSpeed","GeneralPhysics","generateShape","getMotionState","getWorldTransform","setLinearVelocity","velocityVector","velVectorBT","applyForce","BoxPhysics","setMargin","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","load","map","materialBox","geometryPlane","box","cone","CylinderPhysics","btCylinderShape","CustomGeometryPhysics","triangle_mesh","btTriangleMesh","vectA","vectB","vectC","verticesPos","getAttribute","array","triangles","setX","setY","setZ","addTriangle","destroy","btBvhTriangleMeshShape","StraightStreet","pathToNormalMap","SIZE","SIDEWALK_HEIGHT","createSidewalkMesh","wrapS","wrapT","repeat","materialSidewalk","geometrySidewalk","createStreetMesh","mesh","iter","model3D","loadBuildingBlock","parseInt","random","LONG","updateMatrix","updateMatrixWorld","matrixAutoUpdate","secondModel3D","rotationY","baseStreet","leftSidewalk","rightSidewalk","createBuildings","Intersection","SQUARE_SIZE","getLerpPoints","vec1","vec2","quantPoints","points","createSidewalkCurve","initialPoint","lerpPoints","pointsCurve","getPoints","secondLerpPoints","thirdLerpPoints","fourthLerpPoints","getGeometrySidewalk","geom","columnas","aux_vertices","indexes","uv1","uv2","uv3","accum_x","accum_z","uv","vertex","filas","j","vertexArr","Float32Array","uvArr","setIndex","setAttribute","computeVertexNormals","sidewalk","Curve","TOP_CENTER","createLongSidewalkCurve","fifthLerpPoints","sixthLerpPoints","getGeometryLongSidewalk","createLongSidewalkMesh","longSidewalk","TStreet","createStraightSidewalkMesh","createBuilding","Checkpoint","checkpointsData","RADIUS","stepHeartbeat","LEAST_OPACITY","MAX_OPACITY","newOpacity","opacity","transparent","checkpoint","LevelScore","initialScore","score","timeStart","alterScore","isNaN","getCurrentScore","getCurrentTime","timeInSeconds","seconds","minutes","toString","padStart","LevelFactory","endLevel","levelScore","physicsToUpdate","objectsToAnimate","STREET_TYPES","createStreet","bind","createCurve","createTStreet","createIntersection","OBJECTS","createCone","forEach","phys","object","pathTexture","normalMapPath","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","buildAmmoPhysics","ramp","addToScene","conePhysics","threeObject","onCollide","street","streetPhysics","movingLeft","leftSidewalkPhysics","movingRight","rightSidewalkPhysics","tStreet","movingOne","cornerPhysicsOne","movingTwo","cornerPhysicsTwo","intersection","cornerPhysicsThree","cornerPhysicsFour","curve","movingCorner","cornerPhysics","longSidePhysics","segmentsQuantity","buildStreetPhysics","buildIntersectionPhysics","buildCurvePhysics","buildTStreetPhysics","checkpoints","checkpointPhysics","removeRigidBody","rigidyBody","removeCollisionObject","remove","end","createCheckpoint","position_x","position_y","createRectangle","long","type","segments","json","streets","instantiateStreet","long_x","long_y","objects","obj","instantiateObject","getScore","getTime","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","outline","zIndex","xr","isSessionSupported","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","sessionInit","optionalFeatures","requestSession","setItem","showEnterVR","xrSessionIsGranted","click","catch","exception","console","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","TrafficModel","SIZE_OF_TRAFFIC","timeSinceLastUpdate","now","trafficWorker","Worker","currentTraffic","levelStreets","lastID","straightStreetIndex","straightStreets","filter","elem","lastCarRotation","carOffset","onmessage","onReceiveResponseFromWorker","updateCarEngines","data","getNextCarPos","pos_x_street","pos_y_street","isSide","max_x_offset","max_y_offset","positionData","onCollideWithCarOfTraffic","object3D","engine","deleteCar","carId","objectsInTraffic","generateCar","updateTraffic","trafficCars","Object","entries","entry","carData","postMessage","playersCar","carActions","keys","steering","values","carObject","SessionContext","createContext","API_URL","VALID_REGEX_EMAIL","EndOfLevelModal","_ref","minScore","levelId","timeInMs","openModal","setOpenModal","React","useState","navigate","useNavigate","useContext","useEffect","user","APIResponse","method","headers","body","JSON","stringify","userId","status","endMSG","detail","msg","error_msg","statusText","postEndOfLevel","_jsx","Modal","open","_jsxs","Box","className","_Fragment","Button","onClick","reloadTab","reload","backToMenu","calidadEspejos","label","resolucion","resolucionVR","PauseModal","pausedLevel","selectedTab","setSelectedTab","TabContext","variant","scrollButtons","TabList","onChange","handleChange","event","newTab","Tab","wrapped","TabPanel","CardMedia","component","image","sx","objectFit","justifyContent","maxHeight","maxWidth","Grid","direction","alignItems","item","xs","Typography","gutterBottom","Slider","defaultValue","marks","max","min","valueLabelDisplay","FormControlLabel","control","Switch","defaultChecked","md","margin","SEGMENT_SIZE","ThreeSceneWrapper","state","useLocation","jsonLevel","ThreeScene","getTimeAsMs","timeStr","hours","split","Component","velocity","gotAnyEvent","stats","Stats","alpha","powerPreference","antialias","setSize","shadowMap","enabled","clock","finishedLevel","levelPaused","props","generateGeneralElements","animation","handleWindowResize","generateEvents","addPlayerCar","generateLevel","addVR","pauseLevel","createAmmo","addGeneralLights","createTraffic","setAnimationLoop","componentWillUnmount","dom","level","trafficModel","getElementById","setPixelRatio","devicePixelRatio","setFramebufferScaleFactor","mount","appendChild","createButton","updateDataLevel","createLevelCustom","geomField","matField","meshField","setClearColor","showPanel","initial_position","initial_rotation","generateInitialTraffic","removeInstance","key","keyPressed","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","onEnterColission","addFunction","cp","obj0","obj1","castObject","wrapPointer","btManifoldPoint","get_m_userPersistentData","collisionContactID","set_m_userPersistentData","setContactProcessedCallback","render","vecDistance","vectorA","vectorB","distanceTo","getMaxSizeStreets","maxX","maxZ","generateSegmentedScenesChildren","segmentedScenes","segmentPosition","isLight","includes","getReducedScene","cloneScene","lastPlayerPos","begin","deltaTime","getDelta","stepSimulation","setState","endScore","endTime","paused","top","right","fontWeight","ref","styleMenu","backgroundImage","backgroundSize","backgroundRepeat","backgroundColor","MainMenu","rowSpacing","flexDirection","ConfigDrawer","openConfigs","handleDrawerClose","setOpen","DrawerHeader","styled","_ref2","theme","spacing","mixins","toolbar","Drawer","flexShrink","boxSizing","anchor","ChevronRightIcon","paddingRight","Divider","ItemsContext","allUnselected","ItemsDrawer","openItems","setLastSelectedItem","lastSelectedItem","itemSelected","setItemSelected","paddingLeft","ChevronLeftIcon","_ref3","nameItem","isSelected","alt","src","dictSelection","selectedItem","positionX","positionY","handleSelection","InputsGrid","setGridDimensions","gridDimensions","InputWidth","setInputWidth","InputHeight","setInputHeight","marginLeft","step","replaceAll","onSubmit","STANDARD_BOX_LONG","AbstractStreet","ninePerNineGrid","rowIndex","columnIndex","rightFilled","filled","topFilled","botFilled","leftFilled","determineStreetRotation","cell","rowCount","columnCount","sumValueForCell","isStraight","getAsJSON","getPositionAsRowAndColumn","getPositionX","getPositionY","getLongX","getLongY","POSSIBLE_ROTATIONS","StraightStreetLinker","arrayOfStreets","sections","segregateSections","sectionsAsJSON","linkSections","rows","cols","sectionsArray","streetRow","streetCol","isHorizontal","generateArraySubsections","finalArray","sectionsJSON","jsonForStreet","reduce","acum","getSectionsAsJSON","TYPES_OF_STREETS","calculateNeighboursFilled","bot","dict","StreetFactory","levelGrid","isInfiniteLevel","getNinePerNineGrid","getNinePerNineGridInfinite","getNinePerNineGridFinite","constructStreets","straightStreetsArray","curvedStreetsArray","streetObject","defineTypeOfStreet","conjunctedStraightStreets","linkStraightStreets","indexRow","indexColumn","matrix","rowArray","realRow","realColumn","celda_vacia","row","column","typeResult","typeDefined","isValidNinePerNineGrid","getCountSidesPainted","aux","validateGrid","isInfinite","validateGridInfinite","valid","wrongCells","validateGridNotInfinite","COLORS","LevelGrid","setLevelGrid","setClick","rightClick","setRightClick","finalGrid","currentRow","newCell","preventDefault","arrayContains","insiderArray","equals","exc","marginTop","marginRight","onMouseDown","idx_row","idx_col","onMouseMove","onEnterHoverWithClickCell","col","levelGridCopy","div_color","onMouseUp","onClickCell","btn_click","onSubmitLevel","vec_aux","exportObj","exportName","dataStr","encodeURIComponent","downloadAnchorNode","downloadObjectAsJson","generateJSONFromGrid","MemoryIcon","LevelEditor","setOpenItems","setOpenConfigs","itemsInGrid","setItemsInGrid","currentItems","Provider","minHeight","IconButton","AddIcon","SettingsIcon","idx","createHash","hash","string","digest","LoginForm","setLogin","email","setEmail","password","setPassword","showPassword","setShowPassword","error","setError","setSessionWithResponse","SessionHooks","loginResponse","jwt","getUser","getJWT","submitGoogleLogin","responseAPI","token","postLoginGoogle","validateFields","errors","match","postLogin","alignContent","Alert","severity","onClose","listerror","TextField","InputProps","endAdornment","InputAdornment","handleClickShowPassword","Visibility","VisibilityOff","GoogleLogin","onSuccess","credentialResponse","OAuthToken","credential","onError","SignUpForm","passwordConfirmation","setPasswordConfirmation","nameToShow","setNameToShow","errorArray","fetchUrl","postSignUp","SessionProvider","childElement","localSessionStr","localSession","parse","GoogleOAuthProvider","clientId","LevelCard","isCompleted","setIsCompleted","completedData","setCompletedData","getTimeInMSAsString","completed","best_score","best_time","fetchUserProgress","CardContent","title","sm","CardHeader","subheader","description","CheckCircleIcon","verticalAlign","CancelIcon","AccessTimeFilledIcon","SportsScoreIcon","startIcon","CarRentalIcon","seleccionarNivel","LevelsSelectionGrid","levels","setLevels","removeItem","levelsJSONs","level_json","fetchLevels","lg","Carousel","autoPlay","navButtonsAlwaysVisible","indicators","navButtonsProps","swipe","Card","boxShadow","CardActions","LoginDialog","openDialog","setOpenDialog","login","Dialog","handleClose","DialogContent","LoginButton","LevelsList","fontSize","ArrowBackIosNewIcon","App","Router","Route","exact","path","ReactDOM","createRoot"],"mappings":"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","file":"static/js/main.b57838c7.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n    doHorn(){\r\n        this.car.doHorn();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n    turnRightLight(){\r\n        this.car.turnRightLight();\r\n    }\r\n    turnLeftLight(){\r\n        this.car.turnLeftLight();\r\n    }\r\n    turnParkingLight(){\r\n        this.car.turnParkingLight();\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.4;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 85, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n        this.rotation = 0;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") === \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.25,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                const rotationQuat = new THREE.Quaternion(this.observedState.rotation.x, this.observedState.rotation.y, this.observedState.rotation.z, this.observedState.rotation.w).normalize();\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), -5*Math.PI/180 + this.rotation); //SUMAR ROTACION EXTRA SI USAMOS EL JOYSTICK DERECHO\r\n                this.group.quaternion.copy(rotationQuat);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    \r\n    addContainerToScene(scene){\r\n        scene.add(this.group);\r\n    }\r\n\r\n    rotate(rotation){\r\n        this.rotation = rotation;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 300 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from 'three';\r\n\r\nclass ModelsSingleton{\r\n\r\n    constructor(){\r\n        this.gltfLoader = new GLTFLoader();\r\n        this.carModel = null;\r\n        this.building_1 = null;\r\n        this.building_2 = null;\r\n        this.building_3 = null;\r\n        this.building_4 = null;\r\n    }\r\n\r\n\r\n    changeMaterialsToBasic(children){\r\n        for (let i=0; i < children.length; i++) {\r\n            const child = children[i];\r\n            \r\n            if(child.isGroup){\r\n                this.changeMaterialsToBasic(child.children);\r\n            }else if(child.isMesh){\r\n                const newMaterial = new THREE.MeshPhongMaterial();\r\n                THREE.MeshBasicMaterial.prototype.copy.call( newMaterial, child.material );\r\n                child.material = newMaterial;\r\n                child.receiveShadow = true;\r\n                child.castShadow = true;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async loadGLTF(pathToTextureRcvd){\r\n        let pathToTexture = pathToTextureRcvd;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        this.changeMaterialsToBasic(result.scene.children);\r\n        return result.scene;\r\n    }\r\n\r\n    async loadModels(){\r\n        this.carModel = this.loadGLTF('res/models/source/Mercedes.glb');\r\n        this.building_1 = this.loadGLTF('res/models/source/buildings/Building_1.glb');\r\n        this.building_2 = this.loadGLTF('res/models/source/buildings/Building_2.glb');\r\n        this.building_3 = this.loadGLTF('res/models/source/buildings/Building_3.glb');\r\n        this.building_4 = this.loadGLTF('res/models/source/buildings/Building_4.glb');\r\n        return \"OK\";\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default class Models{\r\n\r\n    static ModelsSingleton\r\n\r\n    static async getInstance(){\r\n        if (!Models.ModelsSingleton){\r\n            Models.ModelsSingleton = new ModelsSingleton();\r\n            let res = await Models.ModelsSingleton.loadModels();\r\n            if (res === \"OK\"){\r\n                return Models.ModelsSingleton;\r\n            }else{\r\n                throw new Error(\"Error al cargar los modelos.\");\r\n            }\r\n        }else{\r\n            return Models.ModelsSingleton;\r\n        }\r\n        \r\n    }\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\nimport { Reflector } from 'three/examples/jsm/objects/Reflector';\r\nimport { Object3D } from 'three';\r\nimport Models from './Models';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\n//const STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = 0.13\r\nconst MAX_VELOCITY_SHOWN = 240;\r\nconst MAX_RPM_SHOWN = 6000;\r\n\r\nconst LIGTH_TIC = 1000;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        //super('res/models/source/AutoConInterior.glb');\r\n        super('res/models/source/Mercedes.glb');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n        this.lastVelocityRotation = 0;\r\n        this.lastRPMRotation = 0;\r\n        this.lastTurnOff = new Date();\r\n    }\r\n\r\n\r\n    generateRetrovisor(){\r\n        //const path = new THREE.Shape();\r\n        //path.absellipse(0,0,0.15,0.075,0, Math.PI*2, false,0);\r\n        //const ellipseGeometry = new THREE.ShapeBufferGeometry( path );\r\n        const plane = new THREE.PlaneGeometry(0.145, 0.085);\r\n\r\n\r\n        const retrovisor = new Reflector(\r\n            plane,\r\n            //ellipseGeometry,\r\n            {\r\n                textureWidth: window.innerWidth,//window.innerWidth * window.devicePixelRatio,\r\n                textureHeight: window.innerHeight,//window.innerHeight * window.devicePixelRatio,\r\n                clipBias: 0.35,\r\n                multisample: 4\r\n            }\r\n        );\r\n        retrovisor.rotateX( Math.PI-0.04 );\r\n        retrovisor.rotateY( 0.35 );\r\n        retrovisor.position.set(0.075,0.625,0.31);\r\n        this.threeDModel.add(retrovisor);\r\n    }\r\n\r\n\r\n    generateLeftMirror(){\r\n        const leftMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        //const radius = 2\r\n        //const leftMirrorGeometry = new THREE.CylinderGeometry( radius, radius, 0.10, 512, 512,true,0.18,0.15 ); \r\n\r\n        const leftMirror = new Reflector(\r\n            leftMirrorGeometry, \r\n            {\r\n                textureWidth:2* window.innerWidth,//512\r\n                textureHeight:2* window.innerHeight,//512\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(leftMirror);\r\n        container.position.set(0.96, 0.345, 0.62);\r\n        //container.position.set(0.4, 0.345,0.5+  radius);\r\n        container.rotateX(-Math.PI+0.13);\r\n        //container.rotateX(-Math.PI);\r\n        leftMirror.rotateY(-18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateRightMirror(){\r\n        const rightMirrorGeometry = new THREE.PlaneGeometry(0.19, 0.10);\r\n        const rightMirror = new Reflector(\r\n            rightMirrorGeometry, \r\n            {\r\n                textureWidth: window.innerWidth,\r\n                textureHeight: window.innerHeight,\r\n                clipBias: 0,\r\n                multisample: 4\r\n            }\r\n        );\r\n        let container = new Object3D();\r\n        container.add(rightMirror);\r\n        container.position.set(-0.96, 0.345, 0.62);\r\n        container.rotateX(-Math.PI+0.1);\r\n        rightMirror.rotateY(18*Math.PI/180);\r\n        this.threeDModel.add(container);\r\n    }\r\n\r\n\r\n    generateMirrors(){\r\n        this.generateRetrovisor();\r\n        this.generateLeftMirror();\r\n        this.generateRightMirror();\r\n    }\r\n\r\n    generateSpotlights(){\r\n        this.rightSpotlight = new THREE.SpotLight(0xffffff);\r\n        this.leftSpotlight = new THREE.SpotLight(0xffffff);\r\n        this.targetRight = new Object3D();\r\n        this.targetLeft = new Object3D();\r\n        this.targetRight.position.set(-0.8, 0.05, 3.0);\r\n        this.targetLeft.position.set(0.8, 0.05, 3.0);\r\n        this.rightSpotlight.position.set(-0.8, 0.3, 2.6);\r\n        this.leftSpotlight.position.set(0.8, 0.3, 2.6);\r\n        this.rightSpotlight.target = this.targetRight;\r\n        this.leftSpotlight.target = this.targetLeft;\r\n        this.leftSpotlight.castShadow = true;\r\n        this.rightSpotlight.castShadow = true;\r\n        this.rightSpotlight.shadow.mapSize.width = 1024;\r\n        this.leftSpotlight.shadow.mapSize.height = 1024;\r\n        this.rightSpotlight.shadow.camera.near = 0.1;\r\n        this.leftSpotlight.shadow.camera.near = 0.1;\r\n        this.rightSpotlight.shadow.camera.far = 2;\r\n        this.leftSpotlight.shadow.camera.far = 2;\r\n        this.rightSpotlight.shadow.camera.fov = 10;\r\n        this.leftSpotlight.shadow.camera.fov = 10;\r\n        this.rightSpotlight.intensity = 0.5;\r\n        this.leftSpotlight.intensity = 0.5;\r\n        this.rightSpotlight.angle = Math.PI/5;\r\n        this.leftSpotlight.angle = Math.PI/5;\r\n\r\n        this.rightSpotlight.distance = 15;\r\n        this.leftSpotlight.distance = 15;\r\n\r\n        this.threeDModel.add(this.leftSpotlight);\r\n        this.threeDModel.add(this.rightSpotlight);\r\n        this.threeDModel.add(this.targetLeft);\r\n        this.threeDModel.add(this.targetRight);\r\n\r\n        this.rightTurnlight = new THREE.SpotLight(0xDB8A10);\r\n        this.targetTurnRight = new Object3D();\r\n        this.targetTurnRight.position.set(-0.85, 0.05, 3.0);\r\n        this.rightTurnlight.position.set(-0.8, 0.3, 2.6);\r\n        this.rightTurnlight.target = this.targetTurnRight;\r\n        this.rightTurnlight.castShadow = false;\r\n        this.rightTurnlight.intensity = 0;\r\n        this.rightTurnlight.angle = Math.PI/5;\r\n        this.rightTurnlight.distance = 10;\r\n        this.threeDModel.add(this.targetTurnRight);\r\n        this.threeDModel.add(this.rightTurnlight);\r\n        \r\n\r\n        this.leftTurnlight = new THREE.SpotLight(0xDB8A10);\r\n        this.targetTurnLeft = new Object3D();\r\n        this.targetTurnLeft.position.set(0.85, 0.05, 3.0);\r\n        this.leftTurnlight.position.set(0.8, 0.3, 2.6);\r\n        this.leftTurnlight.target = this.targetTurnLeft;\r\n        this.leftTurnlight.castShadow = false;\r\n        this.leftTurnlight.intensity = 0;\r\n        this.leftTurnlight.angle = Math.PI/5;\r\n        this.leftTurnlight.distance = 10;\r\n        this.threeDModel.add(this.targetTurnLeft);\r\n        this.threeDModel.add(this.leftTurnlight);\r\n\r\n\r\n        this.rightTurnlightBack = new THREE.SpotLight(0xDB8A10);\r\n        this.targetTurnRightBack = new Object3D();\r\n        this.targetTurnRightBack.position.set(-0.85, 3, -3.0);\r\n        this.rightTurnlightBack.position.set(-0.8, 3.2, 2.6);\r\n        this.rightTurnlightBack.target = this.targetTurnRightBack;\r\n        this.rightTurnlightBack.castShadow = false;\r\n        this.rightTurnlightBack.intensity = 0;\r\n        this.rightTurnlightBack.angle = Math.PI/5;\r\n        this.rightTurnlightBack.distance = 10;\r\n        this.threeDModel.add(this.targetTurnRightBack);\r\n        this.threeDModel.add(this.rightTurnlightBack);\r\n\r\n        this.leftTurnlightBack = new THREE.SpotLight(0xDB8A10);\r\n        this.targetTurnLeftBack = new Object3D();\r\n        this.targetTurnLeftBack.position.set(0.85, 3, -3.0);\r\n        this.leftTurnlightBack.position.set(0.8, 3.2, 2.6);\r\n        this.leftTurnlightBack.target = this.targetTurnLeftBack;\r\n        this.leftTurnlightBack.castShadow = false;\r\n        this.leftTurnlightBack.intensity = 0;\r\n        this.leftTurnlightBack.angle = Math.PI/5;\r\n        this.leftTurnlightBack.distance = 10;\r\n        this.threeDModel.add(this.targetTurnLeftBack);\r\n        this.threeDModel.add(this.leftTurnlightBack);\r\n        \r\n    }\r\n\r\n    turnRigth(){\r\n        let time = new Date();\r\n        if(this.observedState[\"turnRigthLigth\"]  ){\r\n            let timePassed = time - this.lastTurnOff;\r\n            if( timePassed < LIGTH_TIC ){\r\n                this.rightTurnlight.intensity = 1;\r\n                this.rightTurnlightBack.intensity = 1;\r\n            }else if(timePassed < 2*LIGTH_TIC){\r\n                \r\n                this.rightTurnlight.intensity = 0;\r\n                this.rightTurnlightBack.intensity = 0;\r\n            }else{\r\n                this.lastTurnOff = new Date();\r\n            }\r\n        }else{\r\n            this.rightTurnlight.intensity = 0;\r\n            this.rightTurnlightBack.intensity = 0;\r\n        }\r\n    }\r\n\r\n    turnLeft(){\r\n        let time = new Date();\r\n        if(this.observedState[\"turnLeftLigth\"]  ){\r\n            let timePassed = time - this.lastTurnOff;\r\n            if( timePassed < LIGTH_TIC ){\r\n                this.leftTurnlight.intensity = 1;\r\n                this.leftTurnlightBack.intensity = 1;\r\n            }else if(timePassed < 2*LIGTH_TIC){\r\n                this.leftTurnlight.intensity = 0;\r\n                this.leftTurnlightBack.intensity = 0;\r\n            }else{\r\n                this.lastTurnOff = new Date();\r\n            }\r\n        }else{\r\n            this.leftTurnlight.intensity = 0;\r\n            this.leftTurnlightBack.intensity = 0;\r\n        }\r\n    }\r\n\r\n\r\n    async addToScene(scene, name=\"driverCar\", hasMirrors = true){\r\n        const models = await Models.getInstance();\r\n        this.threeDModel = await models.carModel;\r\n        this.threeDModel = this.threeDModel.clone();\r\n        this.threeDModel.name = name;\r\n        this.threeDModel.position.x = POSITION[0];\r\n        this.threeDModel.position.y = POSITION[1];\r\n        this.threeDModel.position.z = POSITION[2];\r\n        this.threeDModel.scale.x = SCALE[0];\r\n        this.threeDModel.scale.y = SCALE[1];\r\n        this.threeDModel.scale.z = SCALE[2];\r\n        scene.add(this.threeDModel);\r\n        if(hasMirrors){\r\n            this.generateMirrors();\r\n        }\r\n        this.generateSpotlights();\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n            this.rotateVelocityAndRPM();\r\n            this.turnRigth();\r\n            this.turnLeft();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateVelocityAndRPM(){\r\n        let velocityIndicator = this.threeDModel.children.find(o => o.name === 'Cubo001');\r\n        let rpmIndicator = this.threeDModel.children.find(o => o.name === 'Cubo');\r\n        const newVelRotation = -Math.abs(this.observedState[\"velocity\"])*(240*Math.PI/180)/MAX_VELOCITY_SHOWN;\r\n        const newRPMRotation = -this.observedState[\"rpm\"]*(260*Math.PI/180)/MAX_RPM_SHOWN; //Can surpass a little bit the rpm meter\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastVelocityRotation);\r\n        velocityIndicator.rotateOnAxis(new Vector3(0,1,0), newVelRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), -this.lastRPMRotation);\r\n        rpmIndicator.rotateOnAxis(new Vector3(0,1,0), newRPMRotation);\r\n        this.lastVelocityRotation = newVelRotation;\r\n        this.lastRPMRotation = newRPMRotation;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        // let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        // let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        // let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        // let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'W222WheelFtR');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'W222WheelFtL');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'W222WheelBkR');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'W222WheelBkL');\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n            this.globalControllerHandler.doHorn();\r\n            this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto, camera, pause){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox') || gamepads[i].id.startsWith('xinput')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n        this.camera = camera;\r\n        this.pause = pause;\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n        }\r\n        let rotation = ((this.gamepad.axes[this.xRightAxe] )**3)\r\n            this.camera.rotate(-rotation);\r\n        // if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n        //     let rotation = ((this.gamepad.axes[this.xRightAxe] )**3)\r\n        //     this.camera.rotate(-rotation);\r\n        // }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            this.pause();\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            this.globalControllerHandler.turnParkingLight();\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            this.globalControllerHandler.turnLeftLight();\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            \r\n            this.globalControllerHandler.turnRightLight();\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            this.globalControllerHandler.doHorn();\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.pause();\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto, camera, pause) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto, camera, pause);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(useAudio){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n        this.playbackRate = 1.1;\r\n        this.useAudio = useAudio;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        if(this.engineState instanceof TurnedOffEngine){\r\n            this.engineState = new TurnedOnEngine();\r\n            if (this.useAudio){\r\n                new Audio('./sounds/encendido.wav').play();\r\n                setTimeout(() => {\r\n                    this.soundEngine = new (window.AudioContext || window.webkitAudioContext)();\r\n                    fetch(\"./sounds/engine.wav\").then(\r\n                        response => response.arrayBuffer()\r\n                    ).then(buffer => this.soundEngine.decodeAudioData(buffer)\r\n                    ).then(buffer => {\r\n                        this.soundEngineSource = this.soundEngine.createBufferSource();\r\n                        this.soundEngineSource.buffer = buffer;\r\n                        this.soundEngineSource.loop = true;\r\n                        this.soundEngineSource.connect(this.soundEngine.destination);\r\n                        this.soundEngineSource.start();\r\n                    });\r\n                }, 1300);\r\n            }            \r\n        }\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        if (this.soundEngineSource) this.soundEngineSource.playbackRate.value = 1.1 + this.currentRPM/MAX_RPM * 2.0;\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4, Quaternion } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst FACTOR_BRAKE_TO_FORCE = 180;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld, initialPosition, useAudio = true, initialRotation = new Quaternion().identity()){\r\n        super();\r\n        this.carEngine = new CarEngine(useAudio);\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(initialPosition[0], initialPosition[1], initialPosition[2]);\r\n        this.rotationQuaternion = initialRotation;\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        this.turnRigthLigth = false;\r\n        this.turnLeftLigth = false;\r\n\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n    doHorn(){\r\n        new Audio(\"./sounds/bocina.wav\").play();\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnRightLight(){\r\n        if(!this.turnRigthLigth && this.turnLeftLigth){\r\n            this.turnLeftLigth = false;\r\n        } \r\n        this.turnRigthLigth = !this.turnRigthLigth;\r\n    }\r\n\r\n\r\n    turnLeftLight(){\r\n        if(!this.turnLeftLigth && this.turnRigthLigth){\r\n            this.turnRigthLigth = false;\r\n        } \r\n        this.turnLeftLigth = !this.turnLeftLigth;\r\n    }\r\n\r\n    turnParkingLight(){\r\n        if(this.turnLeftLigth && this.turnRigthLigth){\r\n            this.turnLeftLigth = !this.turnLeftLigth;\r\n            this.turnRigthLigth = !this.turnRigthLigth;\r\n        }else{\r\n            this.turnRigthLigth = true;\r\n            this.turnLeftLigth = true;\r\n        }\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"dirVector\": new Vector3(0,0,1).applyQuaternion(this.rotation),\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData,\r\n            \"rpm\": this.getCurrentRPM(),\r\n            \"turnRigthLigth\": this.turnRigthLigth,\r\n            \"turnLeftLigth\": this.turnLeftLigth,\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.castShadow = true;\r\n            cone.receiveShadow = true;\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        const shape = new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n        shape.setMargin(0.05);\r\n        return shape;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class CustomGeometryPhysics extends GeneralPhysics{\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        // eslint-disable-next-line\r\n        let _triangle, triangle_mesh = new Ammo.btTriangleMesh();\r\n        //declare triangles position vectors\r\n        let vectA = new Ammo.btVector3(0, 0, 0);\r\n        let vectB = new Ammo.btVector3(0, 0, 0);\r\n        let vectC = new Ammo.btVector3(0, 0, 0);\r\n        //retrieve vertices positions from object\r\n        let verticesPos = this.shape.getAttribute('position').array;\r\n        let triangles = [];\r\n        for (let i = 0; i < verticesPos.length; i += 3) {\r\n            triangles.push({\r\n                x: verticesPos[i],\r\n                y: verticesPos[i + 1],\r\n                z: verticesPos[i + 2]\r\n            });\r\n        }\r\n        //use triangles data to draw ammo shape\r\n        for (let i = 0; i < triangles.length - 3; i += 3) {\r\n\r\n            vectA.setX(triangles[i].x);\r\n            vectA.setY(triangles[i].y);\r\n            vectA.setZ(triangles[i].z);\r\n\r\n            vectB.setX(triangles[i + 1].x);\r\n            vectB.setY(triangles[i + 1].y);\r\n            vectB.setZ(triangles[i + 1].z);\r\n\r\n            vectC.setX(triangles[i + 2].x);\r\n            vectC.setY(triangles[i + 2].y);\r\n            vectC.setZ(triangles[i + 2].z);\r\n\r\n            triangle_mesh.addTriangle(vectA, vectB, vectC, true);\r\n        }\r\n        Ammo.destroy(vectA);\r\n        Ammo.destroy(vectB);\r\n        Ammo.destroy(vectC);\r\n\r\n        var shape = new Ammo.btBvhTriangleMeshShape(triangle_mesh, true);\r\n        shape.setMargin(0);\r\n        return shape;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class StraightStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n    createSidewalkMesh(scale){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10*scale );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(scale){\r\n        const geometry = new THREE.BoxGeometry( 10*this.SIZE/24, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        \r\n        texture.repeat.set( 1, 2*scale );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsLeft_\"+iter;\r\n        secondModel3D.position.x = -10*this.SIZE/24;\r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = -this.LONG/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh(scale);\r\n            const leftSidewalk = this.createSidewalkMesh(scale);\r\n            const rightSidewalk = this.createSidewalkMesh(scale);\r\n            baseStreet.position.set(0,0,0);\r\n            leftSidewalk.position.set(-8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            rightSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet).add(leftSidewalk).add(rightSidewalk)\r\n            for (let i=0; i<4*scale; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.scale.set(1.0, 1.0, scale);\r\n            leftSidewalk.scale.set(1.0, 1.0, scale);\r\n            rightSidewalk.scale.set(1.0, 1.0, scale);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            rightSidewalk.updateMatrix();\r\n            rightSidewalk.updateMatrixWorld();\r\n            rightSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            this.LONG = this.SIZE*scale;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\n\r\nexport default class Intersection extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 1, 1 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<4; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else if(i===2){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }else if(i===3){\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                }else{\r\n                    sidewalk.position.set(this.SIZE/2-this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class Curve extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24+0.12;\r\n        this.TOP_CENTER = [this.SIZE/2-this.SQUARE_SIZE, this.SIDEWALK_HEIGHT, -this.SIZE/2+this.SQUARE_SIZE];\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    createLongSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SIZE/2,0,-this.SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(\r\n            initialPoint, \r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            5\r\n            );\r\n        const secondLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, -this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const thirdLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            5\r\n        );\r\n        const fourthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2), \r\n            new THREE.Vector3(this.SIZE/2-this.SQUARE_SIZE, 0, this.SIZE/2 - this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE, this.SIZE/2-this.SQUARE_SIZE), \r\n            new THREE.Vector2(this.SIZE/2-this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector2(-this.SIZE/2+this.SQUARE_SIZE,-this.SIZE/2+this.SQUARE_SIZE),\r\n        );\r\n        let pointsCurve = curve.getPoints(30);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const fifthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2+this.SQUARE_SIZE, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE), \r\n            5\r\n        );\r\n        const sixthLerpPoints = this.getLerpPoints(\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2+this.SQUARE_SIZE),\r\n            new THREE.Vector3(-this.SIZE/2, 0, -this.SIZE/2),\r\n            5\r\n        );\r\n        return [\r\n            ...lerpPoints, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints,\r\n            ...pointsCurve,\r\n            ...fifthLerpPoints,\r\n            ...sixthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    getGeometryLongSidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createLongSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(this.TOP_CENTER[0], this.TOP_CENTER[1], this.TOP_CENTER[2]);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SIZE/2)/this.SIZE, (points[i].z+this.SIZE/2)/this.SIZE);\r\n            uv3.push((this.TOP_CENTER[0]+this.SIZE/2)/this.SIZE, (this.TOP_CENTER[2]+this.SIZE/2)/this.SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    createLongSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 10, 10 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometryLongSidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n\r\n    async createBuildings(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsCurve_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        let secondModel3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        secondModel3D.name = \"buildingsCurveOtherSide_\"+iter;\r\n        secondModel3D.position.x = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;      \r\n        secondModel3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        secondModel3D.position.z = 10*this.SIZE/24;\r\n        secondModel3D.scale.x = 0.8;\r\n        secondModel3D.scale.y = 1;\r\n        secondModel3D.scale.z = 0.6;\r\n        secondModel3D.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n        secondModel3D.updateMatrix();\r\n        secondModel3D.updateMatrixWorld();\r\n        secondModel3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D, secondModel3D);\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 1, 1 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            const sidewalk = this.createSidewalkMesh();\r\n            sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n            sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n            sidewalk.updateMatrix();\r\n            sidewalk.updateMatrixWorld();\r\n            sidewalk.matrixAutoUpdate = false;\r\n            const longSidewalk = this.createLongSidewalkMesh();\r\n            longSidewalk.position.set(0,0,0);\r\n            longSidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n            longSidewalk.updateMatrix();\r\n            longSidewalk.updateMatrixWorld();\r\n            longSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(sidewalk).add(longSidewalk);\r\n            for (let i=0; i<3; i++){\r\n                this.createBuildings(position, i);\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from \"./VisualEntity\";\r\nimport Models from './Models';\r\n\r\nconst SEPARATION_BETWEEN_BUILDINGS = 7.5;\r\n\r\nexport default class TStreet extends VisualEntity{\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.pathToNormalMap = \"textures/pavimento_map.png\"\r\n        this.SIZE = 30;\r\n        this.SIDEWALK_HEIGHT = .4;\r\n        this.SQUARE_SIZE = 7*30/24 + 0.12;\r\n        this.observedState = null;\r\n    }\r\n\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    getLerpPoints(vec1, vec2, quantPoints){\r\n        const points = [];\r\n        for (let i=0; i<=quantPoints; i++){\r\n            points.push(new THREE.Vector3(\r\n                vec1.x + (vec2.x - vec1.x) * i/quantPoints,\r\n                vec1.y + (vec2.y - vec1.y) * i/quantPoints,\r\n                vec1.z + (vec2.z - vec1.z) * i/quantPoints,\r\n            ))\r\n        }\r\n        return points;\r\n    }\r\n\r\n    createSidewalkCurve(){\r\n        let initialPoint = new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2);\r\n        const lerpPoints = this.getLerpPoints(initialPoint, new THREE.Vector3(-this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/10), 5);\r\n        const curve = new THREE.QuadraticBezierCurve(\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/10),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/2,this.SQUARE_SIZE/2),\r\n            new THREE.Vector2(-this.SQUARE_SIZE/10,this.SQUARE_SIZE/2)\r\n        );\r\n        const pointsCurve = curve.getPoints(10);\r\n        for (let i=0; i<pointsCurve.length; i++){\r\n            pointsCurve[i] = new THREE.Vector3(pointsCurve[i].x, 0, pointsCurve[i].y);\r\n        }\r\n        const secondLerpPoints = this.getLerpPoints(new THREE.Vector3(-this.SQUARE_SIZE/10,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), 5);\r\n        const thirdLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,this.SQUARE_SIZE/2), new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        const fourthLerpPoints = this.getLerpPoints(new THREE.Vector3(this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), new THREE.Vector3(-this.SQUARE_SIZE/2,0,-this.SQUARE_SIZE/2), 5);\r\n        return [\r\n            ...lerpPoints, \r\n            ...pointsCurve, \r\n            ...secondLerpPoints, \r\n            ...thirdLerpPoints, \r\n            ...fourthLerpPoints\r\n        ];\r\n    }\r\n\r\n\r\n    getGeometrySidewalk(){\r\n        const geom = new THREE.BufferGeometry();\r\n        const points = this.createSidewalkCurve();\r\n        const columnas = points.length;\r\n        const filas = 4; //Fila baja, fila alta, tapa alta\r\n        const aux_vertices = [[],[],[]];\r\n        const indexes = [];\r\n        const uv1 = [];\r\n        const uv2 = [];\r\n        const uv3 = [];\r\n        let accum_x = 0;\r\n        let accum_z = 0;\r\n        for (let i=0; i<points.length; i++){\r\n            accum_x += points[i].x;\r\n            accum_z += points[i].z;\r\n        }\r\n        \r\n        for (let i=0; i<points.length; i++){\r\n            aux_vertices[0].push(points[i].x, points[i].y, points[i].z);\r\n            aux_vertices[1].push(points[i].x, this.SIDEWALK_HEIGHT, points[i].z);\r\n            aux_vertices[2].push(accum_x/points.length, this.SIDEWALK_HEIGHT, accum_z/points.length);            \r\n            // Los uvs se calculan como la posicion del punto en la tapa (X,Z)\r\n            // Normalizar para el UV con +this.SQUARE_SIZE/2 / this.SQUARE_SIZE.\r\n            //uv1.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv1.push(0.03414,0);\r\n            uv2.push((points[i].x+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, (points[i].z+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n            uv3.push(((accum_x/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE, ((accum_z/points.length)+this.SQUARE_SIZE/2)/this.SQUARE_SIZE);\r\n        }\r\n        const uv = [...uv1, ...uv1, ...uv2, ...uv3];\r\n        const vertex = [...aux_vertices[0], ...aux_vertices[1], ...aux_vertices[1], ...aux_vertices[2]];\r\n        for (let i=0; i < filas-1; i++) {\r\n            for (let j=1; j < columnas; j++) {\r\n                //1er triangulo\r\n                indexes.push(i*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push(i*columnas+j);\r\n                //2do triangulo\r\n                indexes.push(i*columnas+j);\r\n                indexes.push((i+1)*columnas+j-1);\r\n                indexes.push((i+1)*columnas+j);\r\n\r\n            }\r\n        }\r\n        const vertexArr = new Float32Array(vertex);\r\n        const uvArr = new Float32Array(uv);\r\n        geom.setIndex(indexes);\r\n        geom.setAttribute(\"position\", new THREE.BufferAttribute(vertexArr, 3));\r\n        geom.setAttribute(\"uv\", new THREE.BufferAttribute(uvArr, 2));\r\n        geom.computeVertexNormals();\r\n        return geom;\r\n    }\r\n\r\n\r\n    createSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.repeat.set( 3, 3 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = this.getGeometrySidewalk();\r\n        const mesh = new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n        mesh.receiveShadow = true;\r\n        mesh.castShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async loadBuildingBlock(id){\r\n        const models = await Models.getInstance();\r\n        const modelBuilding = await models[`building_${id}`];\r\n        return modelBuilding.clone();\r\n    }\r\n\r\n    async createBuilding(position, iter){\r\n        let model3D = await this.loadBuildingBlock(1+(parseInt(Math.random()*4)));\r\n        model3D.name = \"buildingsRight_\"+iter;\r\n        model3D.position.x = 10*this.SIZE/24;\r\n        model3D.position.y = this.SIDEWALK_HEIGHT+0.05;\r\n        model3D.position.z = -this.SIZE/2+4+iter*SEPARATION_BETWEEN_BUILDINGS;\r\n        model3D.scale.x = 0.8;\r\n        model3D.scale.y = 1;\r\n        model3D.scale.z = 0.6;\r\n        model3D.rotateOnAxis(new THREE.Vector3(0,1,0), -Math.PI/2);\r\n        model3D.updateMatrix();\r\n        model3D.updateMatrixWorld();\r\n        model3D.matrixAutoUpdate = false;\r\n        this.threeDModel.add(model3D);\r\n    }\r\n\r\n\r\n    createStraightSidewalkMesh(){\r\n        const texture = new THREE.TextureLoader().load(\"textures/pavimento.jpg\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( 3, 10 );\r\n        const materialSidewalk = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const geometrySidewalk = new THREE.BoxGeometry(7*this.SIZE/24, this.SIDEWALK_HEIGHT, this.SIZE);\r\n        return new THREE.Mesh( geometrySidewalk, materialSidewalk );\r\n    }\r\n\r\n    createStreetMesh(){\r\n        const geometry = new THREE.BoxGeometry( this.SIZE, 0.1, this.SIZE );\r\n        const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n        texture.repeat.set( 1, 1 );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        const material = new THREE.MeshPhongMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        const mesh = new THREE.Mesh( geometry, material );\r\n        mesh.receiveShadow = true;\r\n        return mesh;\r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, rotationY){\r\n        if(!this.threeDModel){\r\n            const baseStreet = this.createStreetMesh();\r\n            baseStreet.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(baseStreet);\r\n            for (let i=0; i<2; i++){\r\n                const sidewalk = this.createSidewalkMesh();\r\n                if (i===0){\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,-this.SIZE/2+this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI/2);\r\n                }else{\r\n                    sidewalk.position.set(-this.SIZE/2+this.SQUARE_SIZE/2,0,this.SIZE/2-this.SQUARE_SIZE/2);\r\n                    sidewalk.rotateOnAxis(new THREE.Vector3(0,1,0), Math.PI);\r\n                }\r\n                sidewalk.updateMatrix();\r\n                sidewalk.updateMatrixWorld();\r\n                sidewalk.matrixAutoUpdate = false;\r\n                this.threeDModel.add(sidewalk);\r\n            }\r\n            for (let i=0; i<4; i++){\r\n                this.createBuilding(position, i);\r\n            }\r\n            const leftSidewalk = this.createStraightSidewalkMesh();\r\n            leftSidewalk.position.set(8.4*this.SIZE/24,this.SIDEWALK_HEIGHT/2,0);\r\n            leftSidewalk.updateMatrix();\r\n            leftSidewalk.updateMatrixWorld();\r\n            leftSidewalk.matrixAutoUpdate = false;\r\n            this.threeDModel.add(leftSidewalk);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.receiveShadow = true;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.rotateOnAxis(new THREE.Vector3(0,1,0), rotationY);\r\n            baseStreet.updateMatrix();\r\n            baseStreet.updateMatrixWorld();\r\n            baseStreet.matrixAutoUpdate = false;\r\n            this.threeDModel.updateMatrix();\r\n            this.threeDModel.updateMatrixWorld();\r\n            this.threeDModel.matrixAutoUpdate = false;\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","import * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\n\r\nexport default class Checkpoint extends VisualEntity{\r\n\r\n    constructor(checkpointsData){\r\n        super(null);\r\n        this.checkpointsData = checkpointsData;\r\n        this.RADIUS = 1;\r\n        this.HEIGHT = 5;\r\n        this.observedState = null;\r\n        this.stepHeartbeat = -0.002;\r\n        this.LEAST_OPACITY = 0.25;\r\n        this.MAX_OPACITY = 0.5;\r\n    } \r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        const currentOpacity = this.threeDModel.children[0].material.opacity;\r\n        const newOpacity = currentOpacity - this.stepHeartbeat;\r\n        this.threeDModel.children[0].material.opacity = newOpacity;\r\n        if(newOpacity <= this.LEAST_OPACITY || newOpacity >= this.MAX_OPACITY){\r\n            this.stepHeartbeat *= -1;\r\n        }\r\n    }\r\n\r\n    \r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS, this.RADIUS, this.HEIGHT, 32 );\r\n            const material = new THREE.MeshBasicMaterial( { color: 0x00ff00, opacity: 0.4, transparent:true });\r\n            const checkpoint = new THREE.Mesh( geometry, material );\r\n            checkpoint.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(checkpoint);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS *= scale[0];\r\n            this.RADIUS *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n}","export default class LevelScore {\r\n\r\n    constructor(initialScore = 0){\r\n        this.score = initialScore;\r\n        this.timeStart = new Date();\r\n    }\r\n\r\n    alterScore(points){\r\n        if (isNaN(points)){\r\n            throw new Error(\"Solo se puede alterar el puntaje con números.\");\r\n        }\r\n        this.score += points;\r\n    }\r\n\r\n    getCurrentScore(){\r\n        return this.score;\r\n    }\r\n\r\n    getCurrentTime(){\r\n        const timeInSeconds = parseInt((new Date() - this.timeStart)/1000);\r\n        const seconds = timeInSeconds%60;\r\n        const minutes = parseInt((timeInSeconds-seconds)/60);\r\n        const minutesUpToSixty = minutes%60;\r\n        const hours = parseInt((minutes-minutesUpToSixty)/24);\r\n        return `${hours.toString().padStart(2,'0')}:${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}`;\r\n    }\r\n}","import * as THREE from \"three\";\r\nimport BoxPhysics from \"../LogicModel/Physics/PhysicsTypes/BoxPhysics\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport TrafficCone from \"../3DModels/TrafficCone\";\r\nimport CylinderPhysics from \"../LogicModel/Physics/PhysicsTypes/CylinderPhysics\";\r\nimport CustomGeometryPhysics from \"../LogicModel/Physics/PhysicsTypes/CustomGeometryPhysics\";\r\nimport StraightStreet from \"../3DModels/StraightStreet\";\r\nimport Intersection from \"../3DModels/Intersection\";\r\nimport Curve from \"../3DModels/Curve\";\r\nimport TStreet from \"../3DModels/TStreet\";\r\nimport Checkpoint from \"../3DModels/Checkpoint\";\r\nimport LevelScore from \"./LevelScore\";\r\n\r\n\r\nconst SUM_FOR_CHECKPOINT = 1000;\r\nconst SUB_FOR_CONE = -100;\r\nconst INITIAL_SCORE = 0;\r\n\r\nexport default class LevelFactory {\r\n  constructor(scene, physicsWorld, endLevel) {\r\n    this.scene = scene;\r\n    this.physicsWorld = physicsWorld;\r\n    this.levelScore = new LevelScore(INITIAL_SCORE);\r\n    this.physicsToUpdate = [];\r\n    this.objectsToAnimate = [];\r\n    this.endLevel = endLevel;\r\n    this.STREET_TYPES = {\r\n      \"STRAIGHT\": this.createStreet.bind(this),\r\n      \"CURVE\": this.createCurve.bind(this),\r\n      \"T_STREET\": this.createTStreet.bind(this),\r\n      \"INTERSECTION\": this.createIntersection.bind(this)\r\n    };\r\n    this.OBJECTS = {\r\n      \"CONE\": this.createCone.bind(this)\r\n    };\r\n  }\r\n\r\n  updatePhysics() {\r\n    this.physicsToUpdate.forEach(function (phys) {\r\n      phys.updatePhysics();\r\n    });\r\n  }\r\n\r\n  animate() {\r\n    this.objectsToAnimate.forEach(function (object) {\r\n      object.animate();\r\n    });\r\n  }\r\n\r\n  async createRectangle(\r\n    position,\r\n    length,\r\n    width,\r\n    height,\r\n    rotation,\r\n    pathTexture,\r\n    Ammo,\r\n    normalMapPath = null\r\n  ) {\r\n    const texture = new THREE.TextureLoader().load(pathTexture);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    texture.repeat.set(length, height);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({\r\n      map: texture,\r\n      side: THREE.DoubleSide,\r\n    });\r\n    if (normalMapPath) {\r\n      let normalTexture = new THREE.TextureLoader().load(normalMapPath);\r\n      normalTexture.repeat.set(length, height);\r\n      normalTexture.wrapS = THREE.RepeatWrapping;\r\n      normalTexture.wrapT = THREE.RepeatWrapping;\r\n      floorMaterial.normalMap = normalTexture;\r\n      floorMaterial.normalScale.set(10, 10);\r\n    }\r\n    const rampa = new THREE.BoxGeometry(length, width, height);\r\n    rampa.rotateX(rotation);\r\n    const quaternionRamp = new THREE.Quaternion();\r\n    quaternionRamp.setFromAxisAngle(new THREE.Vector3(1, 0, 0), rotation);\r\n\r\n    let rampPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      quaternionRamp, //Quaternion2\r\n      new Ammo.btVector3(0, 0, 0), //Inertia\r\n      0, //Mass\r\n      new THREE.Vector3(length, width, height), //Shape\r\n      this.physicsWorld, //Physics World\r\n      1000 // friction\r\n    );\r\n\r\n    await rampPhysics.buildAmmoPhysics();\r\n    //this.physicsToUpdate.push(rampPhysics);\r\n    let ramp = new THREE.Mesh(rampa, floorMaterial);\r\n    ramp.position.set(position[0], position[1], position[2]);\r\n    this.scene.add(ramp);\r\n  }\r\n\r\n  async createCone(position, Ammo, rotationY) {\r\n    let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n    cone = await cone.addToScene(this.scene, \"trafficCone\", position, [0.5, 1, 0.5]);\r\n    let conePhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationY),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      10,\r\n      new THREE.Vector3(\r\n        cone.RADIUS_BOTTOM,\r\n        cone.HEIGHT / 2,\r\n        cone.RADIUS_BOTTOM\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await conePhysics.buildAmmoPhysics();\r\n    conePhysics.rigidBody.threeObject = cone;\r\n    conePhysics.rigidBody.onCollide = () => {\r\n      this.levelScore.alterScore(SUB_FOR_CONE);\r\n    };\r\n    this.physicsToUpdate.push(conePhysics);\r\n    conePhysics.attachObserver(cone);\r\n    this.objectsToAnimate.push(cone);\r\n  }\r\n\r\n  async buildStreetPhysics(position, street, Ammo, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(street.SIZE, 0.1, street.LONG),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingLeft = new THREE.Vector3(\r\n      (-8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let leftSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingLeft.x,\r\n        position[1] + movingLeft.y,\r\n        position[2] + movingLeft.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await leftSidewalkPhysics.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * street.SIZE) / 24,\r\n      street.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + street.SIDEWALK_HEIGHT / 2 + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * street.SIZE) / 24,\r\n        street.SIDEWALK_HEIGHT,\r\n        street.LONG\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildTStreetPhysics(position, Ammo, tStreet, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingOne = new THREE.Vector3(\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n        0,\r\n        - tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2\r\n      ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingOne.x,\r\n        position[1] + movingOne.y,\r\n        position[2] + movingOne.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const movingTwo = new THREE.Vector3(\r\n      -tStreet.SIZE / 2 + tStreet.SQUARE_SIZE / 2,\r\n      0,\r\n      tStreet.SIZE / 2 - tStreet.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingTwo.x,\r\n        position[1] + movingTwo.y,\r\n        position[2] + movingTwo.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      tStreet.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const movingRight = new THREE.Vector3(\r\n      (8.4 * tStreet.SIZE) / 24,\r\n      tStreet.SIDEWALK_HEIGHT / 2,\r\n      0\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    let rightSidewalkPhysics = new BoxPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingRight.x,\r\n        position[1] + movingRight.y,\r\n        position[2] + movingRight.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(\r\n        (7 * tStreet.SIZE) / 24,\r\n        tStreet.SIDEWALK_HEIGHT,\r\n        tStreet.SIZE\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await rightSidewalkPhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildIntersectionPhysics(position, Ammo, intersection) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const cornerPhysicsOne = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsOne.buildAmmoPhysics();\r\n    const cornerPhysicsTwo = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsTwo.buildAmmoPhysics();\r\n    const cornerPhysicsThree = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] - intersection.SIZE / 2 + intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsThree.buildAmmoPhysics();\r\n    const cornerPhysicsFour = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2,\r\n        position[1],\r\n        position[2] + intersection.SIZE / 2 - intersection.SQUARE_SIZE / 2\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      intersection.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysicsFour.buildAmmoPhysics();\r\n  }\r\n\r\n  async buildCurvePhysics(position, Ammo, curve, rotationY) {\r\n    let streetPhysics = new BoxPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      new THREE.Vector3(30, 0.1, 30),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await streetPhysics.buildAmmoPhysics();\r\n    const movingCorner = new THREE.Vector3(\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2,\r\n      0,\r\n      -curve.SIZE / 2 + curve.SQUARE_SIZE / 2\r\n    ).applyAxisAngle(new THREE.Vector3(0, 1, 0), rotationY);\r\n    const cornerPhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(\r\n        position[0] + movingCorner.x,\r\n        position[1] + movingCorner.y,\r\n        position[2] + movingCorner.z\r\n      ),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometrySidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await cornerPhysics.buildAmmoPhysics();\r\n    const longSidePhysics = new CustomGeometryPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]),\r\n      new THREE.Quaternion().setFromAxisAngle(\r\n        new THREE.Vector3(0, 1, 0),\r\n        -Math.PI / 2 + rotationY\r\n      ),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      0,\r\n      curve.getGeometryLongSidewalk(),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    await longSidePhysics.buildAmmoPhysics();\r\n  }\r\n\r\n  async createStreet(position, Ammo, rotationY, segmentsQuantity) {\r\n    let street = new StraightStreet(\"textures/road.jpg\");\r\n    await street.addToScene(\r\n      this.scene,\r\n      \"street\",\r\n      position,\r\n      segmentsQuantity,\r\n      rotationY\r\n    );\r\n    await this.buildStreetPhysics(position, street, Ammo, rotationY);\r\n  }\r\n\r\n  async createIntersection(position, Ammo) {\r\n    let intersection = new Intersection(\"textures/roadWithCrossWalk.jpg\");\r\n    await intersection.addToScene(this.scene, \"intersection\", position);\r\n    await this.buildIntersectionPhysics(position, Ammo, intersection);\r\n  }\r\n\r\n  async createCurve(position, Ammo, rotationY) {\r\n    let curve = new Curve(\"textures/roadWithCrossWalk.jpg\");\r\n    await curve.addToScene(this.scene, \"curve\", position, rotationY);\r\n    await this.buildCurvePhysics(position, Ammo, curve, rotationY);\r\n  }\r\n\r\n  async createTStreet(position, Ammo, rotationY) {\r\n    let tStreet = new TStreet(\"textures/roadWithCrossWalk.jpg\");\r\n    await tStreet.addToScene(this.scene, \"tStreet\", position, rotationY);\r\n    await this.buildTStreetPhysics(position, Ammo, tStreet, rotationY);\r\n  }\r\n\r\n\r\n  async createCheckpoint(position, checkpoints){\r\n    let checkpoint = new Checkpoint(checkpoints);\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await checkpoint.addToScene(this.scene, \"checkpoint\", position, [1,1,1]);\r\n    let checkpointPhysics = new CylinderPhysics(\r\n      new THREE.Vector3(position[0], position[1], position[2]), //Position\r\n      new THREE.Quaternion().identity(),\r\n      new Ammo.btVector3(0, 0, 0),\r\n      1,\r\n      new THREE.Vector3(\r\n        checkpoint.RADIUS,\r\n        checkpoint.HEIGHT / 2,\r\n        checkpoint.RADIUS\r\n      ),\r\n      this.physicsWorld,\r\n      1000\r\n    );\r\n    this.physicsToUpdate.push(checkpointPhysics);\r\n    await checkpointPhysics.buildAmmoPhysics();\r\n    checkpointPhysics.rigidBody.threeObject = checkpoint;\r\n    checkpointPhysics.rigidBody.onCollide = async () => {\r\n      this.physicsWorld.removeRigidBody( checkpointPhysics.rigidyBody );\r\n      this.physicsWorld.removeCollisionObject( checkpointPhysics.rigidBody );\r\n      this.levelScore.alterScore(SUM_FOR_CHECKPOINT);\r\n      this.scene.remove( checkpoint.threeDModel );\r\n      const lastElemUsed = checkpoints.shift();\r\n      if (lastElemUsed.end){\r\n        this.endLevel(this.levelScore.getCurrentScore(), this.levelScore.getCurrentTime() );\r\n      } else if(checkpoints.length > 0){\r\n        await this.createCheckpoint([checkpoints[0].position_x, 1, checkpoints[0].position_y], checkpoints);\r\n      }\r\n    };\r\n    checkpointPhysics.attachObserver(checkpoint);\r\n    this.objectsToAnimate.push(checkpoint);\r\n  }\r\n\r\n  async createLevel0() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.createRectangle(\r\n      [10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 8,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [-10, 0, 10],\r\n      10,\r\n      2,\r\n      10,\r\n      -Math.PI / 4,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createRectangle(\r\n      [0, 0, 0],\r\n      100,\r\n      0.1,\r\n      100,\r\n      0,\r\n      \"textures/pavimento.jpg\",\r\n      Ammo,\r\n      \"textures/pavimento_map.png\"\r\n    );\r\n    this.createCone([0, 0.5, 10], Ammo);\r\n    this.createCone([0, 0.5, 30], Ammo);\r\n    this.createCone([0, 0.5, 20], Ammo);\r\n  }\r\n\r\n\r\n  async instantiateStreet(position, rotation, long, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    let segments = (long[0] === 30 ? long[1] : long[0])/30;\r\n    await this.STREET_TYPES[type]([position[0], 0, position[1]], Ammo, rotation, segments);\r\n  }\r\n\r\n\r\n  async instantiateObject(position, rotation, type){\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    await this.OBJECTS[type]([position[0], 0.5, position[1]], Ammo, rotation);\r\n  }\r\n\r\n  async createLevelCustom(json) {\r\n    \r\n    for( let i=0 ; i<json.streets.length; i++ ){\r\n      let street = json.streets[i];\r\n      await this.instantiateStreet(\r\n        [street.position_x,street.position_y], \r\n        street.rotation, \r\n        [street.long_x, street.long_y], \r\n        street.type\r\n      );\r\n    }\r\n    for( let i=0 ; i<json.objects.length; i++){\r\n      let obj = json.objects[i];\r\n      await this.instantiateObject(\r\n        [obj.position_x,obj.position_y], \r\n        obj.rotation, \r\n        obj.type\r\n      );\r\n    }\r\n    if (json.checkpoints.length > 0){\r\n      await this.createCheckpoint(\r\n        [json.checkpoints[0].position_x, 1, json.checkpoints[0].position_y],\r\n        json.checkpoints\r\n      );\r\n    }\r\n    return {\r\n      physicsToUpdate: this.physicsToUpdate,\r\n      objectsToAnimate: this.objectsToAnimate\r\n    };\r\n    // json.checkpoints.forEach --> Instancio y guardo en un array\r\n    // onCollide de un checkpoint --> saco ese de la escena y agrego uno nuevo (El que le sigue)\r\n    // Si el checkpoint es el ultimo --> Fin de nivel? Solo si esta marcado con un bool de fin nivel o algo asi\r\n  }\r\n\r\n\r\n  getScore(){\r\n    return this.levelScore.getCurrentScore();\r\n  }\r\n\r\n  getTime(){\r\n    return this.levelScore.getCurrentTime();\r\n  }\r\n}\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import CarModel from \"../../3DModels/CarModel\";\r\nimport Observer from \"../../ObserverPattern/Observer\";\r\nimport Car from \"../CarLogic/Car.js\";\r\nimport * as THREE from \"three\";\r\n\r\nconst CLUTCH_PRESSED = 0;\r\nconst CLUTCH_NOT_PRESSED = 1;\r\nconst CAR_OFFSET_CONSTRUCTOR = 10;\r\n\r\n\r\nexport default class TrafficModel extends Observer {\r\n\r\n    constructor(scene, physicsWorld, streets){\r\n        super();\r\n        this.SIZE_OF_TRAFFIC = 6;\r\n        this.timeSinceLastUpdate = Date.now();\r\n        this.trafficWorker = new Worker(\"./workers/TrafficWorker.js\");\r\n        this.currentTraffic = {};\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld;\r\n        this.levelStreets = streets;\r\n        \r\n        this.lastID = 0;\r\n        this.straightStreetIndex = 0;\r\n        this.straightStreets = this.levelStreets.filter(elem => elem.type === \"STRAIGHT\");\r\n        this.lastCarRotation = 0;\r\n        this.carOffset = 0;\r\n        \r\n        this.trafficWorker.onmessage = (message) => {\r\n            this.onReceiveResponseFromWorker(message);\r\n        }\r\n    }\r\n\r\n    async onReceiveResponseFromWorker(message){\r\n        this.updateCarEngines(message.data);\r\n    }\r\n\r\n\r\n    async onCollideWithCarOfTraffic () {\r\n        console.log(\"CHOCASTE AL AUTO\");\r\n    }\r\n\r\n\r\n    getNextCarPos(){\r\n        if(this.lastCarRotation !== 0){\r\n            this.lastCarRotation = 0;\r\n            \r\n            this.straightStreetIndex += 1;\r\n            this.straightStreetIndex = this.straightStreetIndex % this.straightStreets.length;\r\n            if (this.straightStreetIndex === 0){\r\n                this.carOffset += CAR_OFFSET_CONSTRUCTOR;\r\n            }\r\n        }else{\r\n            if(this.lastID > 0){\r\n                this.lastCarRotation = Math.PI;\r\n            }\r\n        }\r\n        return {\r\n            pos_x_street: this.straightStreets[this.straightStreetIndex].position_x,\r\n            pos_y_street: this.straightStreets[this.straightStreetIndex].position_y,\r\n            isSide: this.straightStreets[this.straightStreetIndex].rotation > 0,\r\n            max_x_offset: this.straightStreets[this.straightStreetIndex].long_y,\r\n            max_y_offset: this.straightStreets[this.straightStreetIndex].long_x,\r\n            carOffset: this.carOffset,\r\n            rotation: this.lastCarRotation\r\n        }\r\n    }\r\n\r\n\r\n    async generateCar(){\r\n        const positionData = this.getNextCarPos();\r\n        let carLogic = new Car(\r\n            this.physicsWorld, \r\n            [\r\n                positionData.pos_x_street + (positionData.isSide ? positionData.carOffset-positionData.max_x_offset/2 : (positionData.rotation > 0) ? 2.5 : -2.5) ,\r\n                2,\r\n                positionData.pos_y_street + (!positionData.isSide ? positionData.carOffset-positionData.max_y_offset/2 : (positionData.rotation > 0) ? -2.5 : 2.5)\r\n            ], \r\n            false, \r\n            new THREE.Quaternion().setFromAxisAngle(\r\n                new THREE.Vector3(0,1,0), \r\n                positionData.isSide ? Math.PI/2+positionData.rotation : positionData.rotation\r\n            )\r\n        );\r\n        await carLogic.carPhysics.buildAmmoPhysics(); \r\n        \r\n        let carModel = new CarModel();\r\n        await carModel.addToScene(this.scene, `traffic_car_${this.lastID}`, false);\r\n\r\n        carLogic.carPhysics.rigidBody.threeObject = carModel;\r\n        carLogic.carPhysics.rigidBody.onCollide = this.onCollideWithCarOfTraffic;\r\n\r\n        carLogic.attachObserver(carModel);\r\n        carLogic.notifyObservers();\r\n        \r\n        this.currentTraffic[this.lastID] = {\r\n            object3D: carModel,\r\n            engine: carLogic\r\n        };\r\n        this.lastID += 1;\r\n        return carModel;\r\n    }\r\n\r\n\r\n    deleteCar(carId){\r\n        this.currentTraffic[carId].engine.removeObserver(this.currentTraffic[carId].object3D);\r\n        this.physicsWorld.removeRigidBody( this.currentTraffic[carId].engine.carPhysics.rigidyBody );\r\n        this.physicsWorld.removeCollisionObject( this.currentTraffic[carId].engine.carPhysics.rigidyBody );\r\n        this.scene.remove( this.currentTraffic[carId].object3D.threeDModel );\r\n        delete this.currentTraffic[carId];\r\n    }\r\n\r\n\r\n    async generateInitialTraffic(){\r\n        const objectsInTraffic = [];\r\n        for (let i=0; i<this.SIZE_OF_TRAFFIC; i++){\r\n            objectsInTraffic.push(await this.generateCar());\r\n        }\r\n        return objectsInTraffic;\r\n    }\r\n\r\n    updateTraffic(){\r\n        const trafficCars = [];\r\n        Object.entries(this.currentTraffic).forEach(entry => {\r\n            const [carId, value] = entry;\r\n            const carData = value.engine.getDataToAnimate();\r\n            carData.carId = carId;\r\n            delete carData.physicsBody;\r\n            delete carData.wheelsData;\r\n            trafficCars.push(carData);\r\n        });\r\n        if (this.observedState){\r\n            delete this.observedState.physicsBody;\r\n            delete this.observedState.wheelsData;\r\n        }\r\n        this.trafficWorker.postMessage({\r\n            playersCar: this.observedState,\r\n            streets: this.levelStreets,\r\n            trafficCars\r\n        });\r\n    }\r\n\r\n\r\n    /* carActions trae un object que tiene de key carId, y de value:\r\n        * deleteCar: boolean -> define si desinstancia el auto o no\r\n        * accelerate: float entre 0 y 1 -> define si acelera o no el auto\r\n        * brake: float entre 0 y 1 -> define si frena o no el auto\r\n        * steering: float entre -1 y 1 -> define la rotacion del volante\r\n    */ \r\n    updateCarEngines(carActions){\r\n        Object.keys(carActions).forEach(carId => {\r\n            if (carActions[carId].deleteCar){\r\n                this.deleteCar(carId);\r\n            }else{\r\n                this.currentTraffic[carId].engine.turnOnCar();\r\n                this.currentTraffic[carId].engine.turnDirection(carActions[carId].steering);\r\n                this.currentTraffic[carId].engine.changeShift(CLUTCH_PRESSED, 1);\r\n                this.currentTraffic[carId].engine.accelerate(CLUTCH_NOT_PRESSED, carActions[carId].accelerate);  \r\n                this.currentTraffic[carId].engine.brake(CLUTCH_PRESSED, carActions[carId].brake);\r\n                this.currentTraffic[carId].engine.update();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.updateTraffic();\r\n        Object.values(this.currentTraffic).forEach(carObject => {\r\n            carObject.object3D.animate();\r\n        });\r\n    }\r\n}","import { createContext } from \"react\";\r\n\r\nexport const SessionContext  = createContext(undefined);","export const API_URL = \"https://backend-bata340.cloud.okteto.net\";\r\n// export const API_URL = \"http://localhost:8001\";\r\nexport const VALID_REGEX_EMAIL = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;","import { Box, Modal, Button } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SessionContext } from '../Sessions/SessionContext';\r\nimport {API_URL} from '../Constants/Constants'\r\n\r\nexport const EndOfLevelModal = ({endLevel, score, time, minScore, levelId, timeInMs}) => {\r\n\r\n  const [openModal, setOpenModal] = React.useState(endLevel);\r\n  const navigate = useNavigate();\r\n  const {session} = React.useContext(SessionContext);\r\n\r\n\r\n  const postEndOfLevel = async () => {\r\n    try{\r\n      const APIResponse = await fetch(\r\n        `${API_URL}/user_progress/end_of_level`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            userId: session.user.id,\r\n            levelId: levelId,\r\n            score: score,\r\n            time: timeInMs\r\n          })\r\n        }\r\n      );\r\n      const json = await APIResponse.json();\r\n      if (APIResponse.status !== 200){\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n    }catch(e){\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    setOpenModal(endLevel);\r\n    console.log(session);\r\n    if(endLevel && session.user){\r\n      postEndOfLevel();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [endLevel]);\r\n  \r\n  const reloadTab = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  const backToMenu = () => {\r\n    navigate(\"/levels\");\r\n  }\r\n   \r\n  return (\r\n    <Modal open = {openModal} >\r\n        <Box className={\"end_of_level_dialog\"}>\r\n          {\r\n            minScore>score ? \r\n              <>\r\n                <h1>Nivel Fallido</h1>\r\n                <p style={{color:\"red\"}}>El puntaje m&iacute;nimo para pasar el nivel es de: {minScore}, y tu puntaje fue de: {score}</p>\r\n              </> :\r\n              <>\r\n                <h1>\r\n                  ¡Nivel Superado!\r\n                </h1> \r\n                <p style={{color:\"green\"}}><strong>Tu puntaje final es</strong>: {score}</p>\r\n              </>\r\n          }\r\n          \r\n          <p><strong>Tiempo transcurrido:</strong> {time}</p>\r\n          <Button onClick={reloadTab}>\r\n                Reintentar\r\n            </Button>\r\n            <Button onClick={backToMenu}>\r\n                Volver al menu\r\n            </Button>\r\n        </Box>\r\n\r\n\r\n    </Modal>\r\n  )\r\n}\r\n","import { Box, Modal, Button, Tab, CardMedia, Grid, Typography,Item, Switch, FormControlLabel } from '@mui/material';\r\nimport React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\r\n// import TabContext from '@mui/lab/TabContext';\r\n// import TabList from '@mui/lab/TabList';\r\n// import TabPanel from '@mui/lab/TabPanel';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nconst calidadEspejos = [\r\n  {\r\n    value: 0,\r\n    label: 'Desactivado',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'Baja',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Media',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: 'Alta',\r\n  },\r\n];\r\nconst resolucion = [\r\n\r\n  {\r\n    value: 1,\r\n    label: 'Baja',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'Media',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: 'Alta',\r\n  },\r\n];\r\n\r\nconst resolucionVR = [\r\n  {\r\n    value: 0,\r\n    label: 'X0.25',\r\n  },\r\n  {\r\n    value: 1,\r\n    label: 'X0.50',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: 'X0.75',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: 'X1',\r\n  },\r\n];\r\n\r\n\r\n\r\nfunction valueLabelFormat(marks,value) {\r\n  \r\n  return calidadEspejos[value].label;\r\n}\r\n\r\n\r\nexport const PauseModal = ({pausedLevel, pause}) => {\r\n\r\n  const [openModal, setOpenModal] = React.useState(pausedLevel);\r\n  const navigate = useNavigate();\r\n  const [selectedTab, setSelectedTab] = React.useState(\"joystick\");\r\n\r\n  React.useEffect(() => {\r\n    setOpenModal(pausedLevel);\r\n\r\n  }, [pausedLevel]);\r\n  \r\n  const reloadTab = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  const backToMenu = () => {\r\n    navigate(\"/levels\");\r\n  }\r\n  const handleChange = (event, newTab) => {\r\n    setSelectedTab(newTab);\r\n  };\r\n   \r\n  return (\r\n    <Modal open = {openModal ? openModal : false} >\r\n      <Box className={\"pause_menu\"}>\r\n        <h1>\r\n          Pausa\r\n        </h1> \r\n        <TabContext value={selectedTab} variant=\"fullWidth\" scrollButtons=\"auto\">\r\n          <Box>\r\n            <TabList scrollButtons=\"auto\" variant=\"fullWidth\" onChange={handleChange} aria-label=\"pause-tabs\">\r\n              <Tab label=\"Cómo manejar con Joystick\" value={\"joystick\"} wrapped/>\r\n              <Tab label=\"Cómo manejar con volante\" value={\"volante\"} wrapped/>\r\n              <Tab label=\"Cónfiguracion Grafica\" value={\"graficos\"} wrapped/>\r\n            </TabList >\r\n          </Box>\r\n        \r\n          <TabPanel value={\"joystick\"}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              width={\"100%\"}\r\n              height={\"100%\"}\r\n              image={`/controlesJoystick.png`}\r\n              \r\n              style={{ borderRadius:20}}\r\n              sx={{ objectFit: \"contain\", justifyContent: \"center\", display: \"flex\", maxHeight:\"100%\", maxWidth:\"100%\"}}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={\"volante\"}>\r\n          <CardMedia\r\n              component=\"img\"\r\n              width={\"100%\"}\r\n              height={\"100%\"}\r\n              image={`/controlesVolante.png`}\r\n              style={{ borderRadius:20}}\r\n              sx={{ objectFit: \"contain\", justifyContent: \"center\", display: \"flex\", maxHeight:\"100%\", maxWidth:\"100%\"}}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel value={\"graficos\"}>\r\n\r\n          <Grid container \r\n  direction=\"row\"\r\n  justifyContent=\"center\"\r\n  alignItems=\"center\">\r\n  <Grid item  xs={8}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n              Calidad Espejos\r\n        </Typography>\r\n          <Slider\r\n            defaultValue={2}\r\n            marks={calidadEspejos}\r\n            max={3}\r\n          />\r\n  </Grid>\r\n  <Grid item  xs={8}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n              Resolución\r\n        </Typography>\r\n          <Slider\r\n            defaultValue={2}\r\n            marks={resolucion}\r\n            max={3}\r\n            min={1}\r\n          />\r\n  </Grid>\r\n  <Grid item  xs={8}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n              Resolución Vr\r\n        </Typography>\r\n          <Slider\r\n            defaultValue={2}\r\n            marks={resolucionVR}\r\n            max={3}\r\n          />\r\n  </Grid>\r\n  <Grid item  xs={8}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n               Distancia de visión (metros)\r\n        </Typography>\r\n          <Slider\r\n            valueLabelDisplay=\"auto\"\r\n            defaultValue={50}\r\n            max={300}\r\n          />\r\n  </Grid>\r\n  <Grid item  xs={8}>\r\n  <FormControlLabel\r\n          control={\r\n            <Switch label=\"\"  defaultChecked />\r\n          }\r\n          label=\"Activar luces vehiculos\"\r\n        />\r\n\r\n    \r\n  </Grid>\r\n  \r\n  \r\n\r\n</Grid>\r\n            {/* <Grid xs={5}>\r\n            \r\n            </Grid> */}\r\n          </TabPanel>\r\n\r\n        </TabContext>\r\n        <Grid container justifyContent={\"space-around\"} alignItems={\"center\"}>\r\n          <Grid item xs={12} md={4} style={{textAlign:\"center\"}}>\r\n            <Box style={{textAlign:\"center\", margin:\"auto\"}}>\r\n              <Button onClick={backToMenu} color=\"error\" variant=\"contained\">\r\n                Volver al menu\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={4} style={{textAlign:\"center\"}}>\r\n            <Box style={{textAlign:\"center\", margin:\"auto\"}}>\r\n              <Button onClick={reloadTab} variant=\"outlined\" color=\"error\">\r\n                Reintentar\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={4} style={{textAlign:\"center\"}}>\r\n            <Box style={{textAlign:\"center\", margin:\"auto\"}}>\r\n              <Button onClick={pause} variant=\"contained\">\r\n                Seguir\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport Camera from \"../Camera/Camera\";\r\nimport CarOffsetCamera from \"../Camera/CarOffsetCamera\";\r\nimport OrbitalCamera from \"../Camera/OribtalCamera\";\r\nimport CarModel from \"../3DModels/CarModel\";\r\nimport LogitechG29ControllerSingleton from \"../LogicModel/ControllerMapping/LogitechG29Controller\";\r\nimport XboxControllerSingleton from \"../LogicModel/ControllerMapping/XboxController\";\r\nimport Car from \"../LogicModel/CarLogic/Car\";\r\nimport AmmoInstance from \"../LogicModel/Physics/AmmoInstance\";\r\nimport { Vector3 } from \"three\";\r\nimport LevelFactory from \"../Levels/LevelsFactory\";\r\nimport { VRButton } from \"../addons/VRbutton\";\r\nimport Stats from \"stats.js\";\r\nimport TrafficModel from \"../LogicModel/IA/TrafficModel\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { EndOfLevelModal } from \"../Menus/Components/EndOfLevelModal\";\r\nimport { PauseModal } from \"../Menus/Components/PauseModal\";\r\n\r\n\r\nconst MAXIMUM_DISTANCE_FROM_PLAYER_TO_RENDER = 200;\r\nconst SEGMENT_SIZE = 50;\r\n\r\nexport default function ThreeSceneWrapper(){\r\n  const {state} = useLocation();\r\n  const {jsonLevel} = state;\r\n\r\n  return (\r\n    <ThreeScene jsonLevel = {jsonLevel}/>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst getTimeAsMs = (timeStr) => {\r\n  const [hours, minutes, seconds] = timeStr.split(\":\");\r\n  return parseInt(hours)*60*60*1000+parseInt(minutes)*60*1000+parseInt(seconds)*1000;\r\n}\r\n\r\nexport class ThreeScene extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentRPM: 0,\r\n      velocity: 0,\r\n      currentShift: 0,\r\n    };\r\n    this.physicsToUpdate = [];\r\n    localStorage.setItem(\"VR\", false);\r\n    this.gotAnyEvent = false;\r\n    this.stats = new Stats();\r\n    this.objectsToAnimate = [];\r\n    this.scene = new THREE.Scene();\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      alpha: true,\r\n      powerPreference: \"high-performance\",\r\n      antialias: true,\r\n    });\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.shadowMap.enabled = true;\r\n    this.clock = new THREE.Clock();\r\n    this.finishedLevel = false;\r\n    this.levelPaused = false;\r\n    this.score = 0;\r\n    this.time = 0;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.jsonLevel = this.props.jsonLevel;\r\n    this.generateGeneralElements = this.generateGeneralElements.bind(this);\r\n    this.animation = this.animation.bind(this);\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n    this.generateEvents = this.generateEvents.bind(this);\r\n    this.addPlayerCar = this.addPlayerCar.bind(this);\r\n    this.generateLevel = this.generateLevel.bind(this);\r\n    this.addVR = this.addVR.bind(this);\r\n    this.endLevel = this.endLevel.bind(this);\r\n    this.pauseLevel = this.pauseLevel.bind(this);\r\n    await this.generateGeneralElements();\r\n    await this.createAmmo();\r\n    await this.addGeneralLights();\r\n    await this.generateLevel();\r\n    await this.addPlayerCar();\r\n    if(this.jsonLevel[\"has_traffic\"]){\r\n      await this.createTraffic();\r\n    }\r\n    this.generateEvents();\r\n    this.addVR();\r\n    this.renderer.setAnimationLoop(this.animation);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.renderer.setAnimationLoop(null);\r\n    delete this.scene;\r\n    delete this.objectsToAnimate;\r\n    delete this.physicsToUpdate;\r\n    delete this.physicsWorld;\r\n    this.stats.dom.remove();\r\n    delete this.stats;\r\n    delete this.level;\r\n    delete this.carLogic;\r\n    delete this.carModel;\r\n    delete this.trafficModel;\r\n    delete this.jsonLevel;\r\n    delete this.camera;\r\n    document.getElementById(\"VRButton\").remove();\r\n    delete this.renderer;\r\n  }\r\n\r\n  async addVR() {\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.renderer.xr.enabled = true;\r\n    this.renderer.xr.setFramebufferScaleFactor(0.75);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    document.body.appendChild(VRButton.createButton(this.renderer));\r\n  }\r\n\r\n  async generateLevel() {\r\n    this.level = new LevelFactory(this.scene, this.physicsWorld, this.endLevel);\r\n    let updateDataLevel = await this.level.createLevelCustom(this.jsonLevel);\r\n    this.objectsToAnimate = [\r\n      ...this.objectsToAnimate,\r\n      ...updateDataLevel.objectsToAnimate,\r\n    ];\r\n    this.physicsToUpdate = [\r\n      ...this.physicsToUpdate,\r\n      ...updateDataLevel.physicsToUpdate,\r\n    ];\r\n    const geomField = new THREE.BoxGeometry(10000, 10000);\r\n    const texture = new THREE.TextureLoader().load(\"./textures/pasto.jpeg\");\r\n    texture.repeat.set(500, 500);\r\n    texture.wrapS = THREE.RepeatWrapping;\r\n    texture.wrapT = THREE.RepeatWrapping;\r\n    const matField = new THREE.MeshBasicMaterial({ map: texture });\r\n    const meshField = new THREE.Mesh(geomField, matField);\r\n    meshField.name = \"GREEN_FIELD\";\r\n    meshField.position.set(0, -1, 0);\r\n    meshField.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\r\n    this.scene.add(meshField);\r\n  }\r\n\r\n  async generateGeneralElements() {\r\n    this.renderer.setClearColor(0x87cefa, 1);\r\n    this.camera = new Camera(this.renderer);\r\n    this.camera.addContainerToScene(this.scene);\r\n    this.stats.showPanel(0);\r\n    document.body.appendChild(this.stats.dom);\r\n  }\r\n\r\n  async addGeneralLights() {\r\n    this.scene.add(new THREE.AmbientLight(0xffffff, 0.5));\r\n  }\r\n\r\n  async addPlayerCar() {\r\n    this.carLogic = new Car(\r\n      this.physicsWorld, \r\n      [this.jsonLevel.initial_position[0],1,this.jsonLevel.initial_position[1]], //Initial Position\r\n      true, // Use Engine Audio\r\n      new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 0, 1, 0 ), this.jsonLevel.initial_rotation ) // Initial Rotation\r\n    );\r\n    await this.carLogic.carPhysics.buildAmmoPhysics();\r\n    let carModel = new CarModel();\r\n    this.carLogic.carPhysics.rigidBody.threeObject = carModel;\r\n    this.carLogic.attachObserver(carModel);\r\n    this.carLogic.attachObserver(this.camera);\r\n    this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n    this.carLogic.notifyObservers();\r\n  }\r\n\r\n\r\n  async createTraffic(){\r\n    this.trafficModel = new TrafficModel(this.scene, this.physicsWorld, this.jsonLevel.streets);\r\n    this.carLogic.attachObserver(this.trafficModel);\r\n    await this.trafficModel.generateInitialTraffic();\r\n  }\r\n\r\n  generateEvents() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    window.addEventListener(\"gamepaddisconnected\", function (e) {\r\n      LogitechG29ControllerSingleton.removeInstance();\r\n    });\r\n\r\n    document.addEventListener(\r\n      \"keydown\",\r\n      (event) => {\r\n        console.log(event.key);\r\n        var keyPressed = event.key;\r\n        if (!isNaN(keyPressed) && parseInt(keyPressed) >= 1 && parseInt(keyPressed) <= 5){\r\n          console.log(\"ENTRE IF\");\r\n          this.carLogic.removeObserver(this.camera);\r\n        }else{\r\n          console.log(\"ELSE\");\r\n        }\r\n        switch (keyPressed) {\r\n          case \"1\":\r\n            this.camera = new Camera(this.renderer);\r\n            this.camera.addContainerToScene(this.scene);\r\n            break;\r\n          case \"2\":\r\n            this.camera = new OrbitalCamera(this.renderer);\r\n            break;\r\n          case \"3\":\r\n            this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n            break;\r\n          case \"4\":\r\n            this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n            break;\r\n          case \"5\":\r\n            this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n            break;\r\n          case \"Escape\":\r\n            this.pauseLevel();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        if (!isNaN(keyPressed) && parseInt(keyPressed) >= 1 && parseInt(keyPressed) <= 5){\r\n          this.carLogic.attachObserver(this.camera);\r\n          this.carLogic.notifyObservers();\r\n        }\r\n      },\r\n      false\r\n    );\r\n  }\r\n\r\n  async createAmmo() {\r\n    let Ammo = await AmmoInstance.getInstance();\r\n    this.tempTransform = new Ammo.btTransform();\r\n    let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n    let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n    let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n    let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n    this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(\r\n      dispatcher,\r\n      overlappingPairCache,\r\n      solver,\r\n      collisionConfiguratation\r\n    );\r\n    this.physicsWorld.setGravity(new Ammo.btVector3(0, -9.8, 0));\r\n\r\n    const onEnterColission = Ammo.addFunction(async (cp, obj0, obj1) => {\r\n      let Ammo = await AmmoInstance.getInstance();\r\n      obj0 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj0, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      obj1 = Ammo.castObject(\r\n        Ammo.wrapPointer(obj1, Ammo.btRigidBody),\r\n        Ammo.btRigidBody\r\n      );\r\n      if (\r\n        obj0.threeObject &&\r\n        obj1.threeObject &&\r\n        (obj0.threeObject.threeDModel.name === \"driverCar\" ||\r\n          obj1.threeObject.threeDModel.name === \"driverCar\")\r\n      ) {\r\n        cp = Ammo.wrapPointer(cp, Ammo.btManifoldPoint);\r\n        const userPersistentData = cp.get_m_userPersistentData();\r\n        if (userPersistentData === 0) {\r\n            obj0.onCollide ? obj0.onCollide() : obj1.onCollide();\r\n            //Se cambia el contactId para denotar que la colision es constante. Para no restar puntos infinitamente.\r\n            const collisionContactID = 1; \r\n            cp.set_m_userPersistentData(collisionContactID);\r\n       }\r\n      }\r\n    });\r\n    this.physicsWorld.setContactProcessedCallback(onEnterColission);\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.camera.handleResize();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n  }\r\n\r\n  vecDistance(vectorA, vectorB){\r\n    return vectorA.distanceTo(vectorB);\r\n  }\r\n\r\n  getMaxSizeStreets(){\r\n    let maxX = 0, maxZ = 0;\r\n    for (let i=0; i< this.jsonLevel.streets.length; i++){\r\n      const street = this.jsonLevel.streets[i];\r\n      if ( maxX < street.position_x + street.long_x/2 ) {\r\n        maxX = street.position_x + street.long_x/2;\r\n      }\r\n      if ( maxZ < street.position_y + street.long_y/2 ) {\r\n        maxZ = street.position_y + street.long_y/2;\r\n      }\r\n    }\r\n    return [maxX, maxZ];\r\n  }\r\n\r\n  \r\n  generateSegmentedScenesChildren(){\r\n    const [maxX, maxZ] = this.getMaxSizeStreets();\r\n    this.segmentedScenes = [];\r\n    for (let i=0; i< parseInt(maxX/SEGMENT_SIZE) + 1; i++){\r\n      this.segmentedScenes.push([]);\r\n      for (let j=0; j<parseInt(maxZ/SEGMENT_SIZE) + 1; j++){\r\n        const segmentPosition = new THREE.Vector3(\r\n          i*SEGMENT_SIZE,\r\n          0,\r\n          j*SEGMENT_SIZE\r\n        );\r\n        this.segmentedScenes[i].push(this.scene.children.filter(\r\n          object => object.isLight || \r\n                      object.name === \"GREEN_FIELD\" || \r\n                      object.name.includes(\"traffic_car\") ||\r\n                      object.name === \"driverCar\" ||\r\n                      this.vecDistance(object.position, segmentPosition) <= MAXIMUM_DISTANCE_FROM_PLAYER_TO_RENDER\r\n        ));\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  getReducedScene() {\r\n    const cloneScene = new THREE.Scene();\r\n    if(this.segmentedScenes.length === 0){\r\n      this.generateSegmentedScenesChildren();\r\n    }\r\n    cloneScene.children = this.segmentedScenes\r\n    [\r\n      parseInt(this.lastPlayerPos.x/SEGMENT_SIZE)\r\n    ]\r\n    [\r\n      parseInt(this.lastPlayerPos.z/SEGMENT_SIZE)\r\n    ]\r\n    return cloneScene;\r\n  }\r\n\r\n  animation() {\r\n    this.stats.begin();\r\n    if(!this.levelPaused){\r\n      let deltaTime = this.clock.getDelta();\r\n      this.physicsWorld.stepSimulation(deltaTime, 10);\r\n      this.jsonLevel[\"has_traffic\"] && this.trafficModel.animate();\r\n      this.objectsToAnimate.forEach(function (object) {\r\n        object.animate();\r\n      });\r\n      this.physicsToUpdate.forEach(function (phys) {\r\n        phys.updatePhysics();\r\n      });\r\n      this.camera.setPositionRelativeToObject();\r\n      XboxControllerSingleton.getInstance(this.carLogic, this.camera,this.pauseLevel).checkEvents();\r\n      this.setState({\r\n        ...this.state,\r\n        velocity: this.carLogic.getSpeed(),\r\n        currentRPM: this.carLogic.getCurrentRPM(),\r\n        currentShift: this.carLogic.getCurrentShift(),\r\n        score: this.level.getScore(),\r\n        time: this.level.getTime()\r\n      });\r\n      // this.lastPlayerPos = this.carLogic.getDataToAnimate()[\"position\"];\r\n      // this.lastRenderScene = this.getReducedScene();\r\n      // this.renderer.render(this.lastRenderScene, this.camera.getCameraInstance());\r\n      this.renderer.render(this.scene, this.camera.getCameraInstance());\r\n    }\r\n    this.stats.end();\r\n  }\r\n\r\n  endLevel(score ,time){\r\n    this.finishedLevel = true;\r\n    this.score = score;\r\n    this.time = time;\r\n    this.setState({...this.state, endScore: score, endTime: time, finishedLevel: true});\r\n  }\r\n\r\n  pauseLevel(){\r\n    this.levelPaused = !this.levelPaused ;\r\n    this.setState({...this.state, paused: this.levelPaused});\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100vw\" }}>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"10px\",\r\n            right: \"10px\",\r\n            color: \"red\",\r\n            width: \"175px\",\r\n          }}\r\n          id=\"Acelerador\"\r\n        >\r\n          <p style={{ zIndex: 20, display: \"float\", fontWeight: \"bold\" }}>\r\n            Cambio Actual: {parseInt(this.state.currentShift)}\r\n          </p>\r\n          <p style={{ zIndex: 20, display: \"float\", fontWeight: \"bold\" }}>\r\n            Puntaje Actual: {this.state.score}\r\n          </p>\r\n          <p style={{ zIndex: 20, display: \"float\", fontWeight: \"bold\" }}>\r\n            Tiempo Actual: {this.state.time}\r\n          </p>\r\n        </div>\r\n        <div\r\n          ref={(mount) => {\r\n            this.mount = mount;\r\n          }}\r\n        ></div>\r\n        \r\n        <EndOfLevelModal \r\n          endLevel={this.state.finishedLevel ? this.state.finishedLevel : this.finishedLevel} \r\n          score={this.state.endScore} \r\n          time = {this.state.endTime}\r\n          minScore={this.jsonLevel ? this.jsonLevel[\"minimum_to_win\"] : 0}\r\n          levelId={this.jsonLevel ? this.jsonLevel.id : undefined}\r\n          timeInMs= {this.state.endTime ? getTimeAsMs( this.state.endTime) : 0}\r\n        />\r\n\r\n        <PauseModal\r\n          pausedLevel={this.state.paused}\r\n          pause={this.pauseLevel}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Grid } from \"@mui/material\";\r\nimport './styles.css'\r\n\r\nconst styleMenu = {\r\n  width:\"100vw\", \r\n  height:\"100vh\", \r\n  backgroundImage:`url(\"DrivingSimMenuNoTitle.png\")`, \r\n  backgroundSize:\"cover\", \r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundColor: \"#B1E6F2\"\r\n}\r\n\r\n\r\nexport const MainMenu = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  return (\r\n    <>\r\n      <div style={styleMenu}>\r\n        <Grid \r\n          container \r\n          rowSpacing={2} \r\n          justifyContent=\"center\"\r\n          alignItems={\"center\"} \r\n          flexDirection={\"column\"} \r\n          className={\"containerMainMenu\"}\r\n        >\r\n          <Grid item xs={12} className={\"MainMenuTitle\"}>\r\n            <h1 className={\"titleMainMenu\"}>\r\n              Driving<br/>Simulator\r\n            </h1>\r\n          </Grid>\r\n          <Grid item xs={12} className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/levels\")}\r\n            >\r\n              Iniciar\r\n            </button>\r\n          </Grid>\r\n          <Grid item xs={12} className={\"buttonWrapperMainMenu\"}>\r\n          <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/level-editor\")}\r\n            >\r\n              Editor de Niveles\r\n            </button>\r\n          </Grid>\r\n          <Grid item xs={12} className={\"buttonWrapperMainMenu\"}>\r\n            <button \r\n              className={\"buttonMainMenu\"}\r\n              onClick={() => navigate(\"/configs\")}\r\n            >\r\n              Configuración\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\n\r\nexport const ConfigDrawer = ( {openConfigs, handleDrawerClose} ) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openConfigs);\r\n    }, [openConfigs]);\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width:'100%',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    }));\r\n\r\n    return (\r\n        <>  \r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"right\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader className='drawer-header' onClick={handleDrawerClose}>\r\n                        <ChevronRightIcon />\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"right\", paddingRight:30}}>Configurations</h3>\r\n                        </div>\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                </Drawer>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\nexport const ItemsContext = createContext();\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material'\r\nimport { styled } from '@mui/material/styles';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Divider from '@mui/material/Divider';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport { ItemsContext } from '../LevelEditorContext/ItemsContext';\r\n\r\n\r\nconst allUnselected = {\r\n    \"cone\": null,\r\n    \"trapecio\": null,\r\n    \"street\": null\r\n};\r\n\r\n\r\nexport const ItemsDrawer = ( {openItems, handleDrawerClose} ) => {\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n    const {setLastSelectedItem, lastSelectedItem} = React.useContext(ItemsContext);\r\n\r\n    React.useEffect(() => {\r\n        setOpen(openItems);\r\n    }, [openItems]);\r\n\r\n    //const theme = useTheme();\r\n\r\n    const DrawerHeader = styled('div')(({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    }));\r\n\r\n    const [itemSelected, setItemSelected] = React.useState(allUnselected);\r\n\r\n\r\n    const handleSelection = (item) => {\r\n        const dictSelection = {...allUnselected};\r\n        dictSelection[item] = \"selected\";\r\n        setItemSelected(dictSelection);\r\n        setLastSelectedItem({\r\n            selectedItem: item,\r\n            scale: 1.0,\r\n            positionX: 0.0,\r\n            positionY: 0.0,\r\n            zIndex: lastSelectedItem ? lastSelectedItem.zIndex + 1 : 1\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <Grid>\r\n                <Drawer\r\n                    sx={{\r\n                        width: window.innerWidth/6,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': {\r\n                        width: window.innerWidth/6,\r\n                        boxSizing: 'border-box',\r\n                        },\r\n                    }}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                >\r\n                    <DrawerHeader onClick={handleDrawerClose} className='drawer-header'>\r\n                        <div style={{width:\"100%\"}}>\r\n                            <h3 style={{textAlign:\"left\", paddingLeft:10}}>Items</h3>\r\n                        </div>\r\n                        <ChevronLeftIcon />\r\n                    </DrawerHeader>\r\n                    <Divider />\r\n                    <Grid style={{justifyContent: \"center\", display: \"flex\", alignItems:\"center\", flexDirection:\"column\"}}>\r\n                        {\r\n                            Object.entries(itemSelected).map(([nameItem, isSelected]) => {\r\n                                return (\r\n                                    <img \r\n                                        alt={`${nameItem}`}\r\n                                        key={nameItem}\r\n                                        src={`${nameItem}.png`} \r\n                                        width={75}\r\n                                        height={75} \r\n                                        className={`imageLevelEditor ${isSelected}`} \r\n                                        onClick={() => handleSelection(nameItem)}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Drawer>\r\n            </Grid>\r\n            \r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport {useState} from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst MAX_WIDTH_INPUT = 40;\r\nconst MAX_HEIGHT_INPUT = 40;\r\n\r\nexport const InputsGrid = ({setGridDimensions, gridDimensions}) => {\r\n    const [InputWidth, setInputWidth] = useState(gridDimensions.width);\r\n    const [InputHeight, setInputHeight] = useState(gridDimensions.height);\r\n\r\n    const onSubmit = () =>{\r\n      setGridDimensions(\r\n        {\r\n          width: InputWidth, \r\n          height: InputHeight\r\n        }\r\n      );\r\n    }\r\n  return (\r\n    <Grid container  direction=\"row\" width={\"80%\"} marginLeft={'10%'}\r\n    justifyContent=\"space-evenly\"\r\n    alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={2}>\r\n        <p>Ancho:</p>\r\n          <input \r\n            value={InputWidth} \r\n            type=\"number\" \r\n            step=\"1\" \r\n          onChange={\r\n              (event) => {\r\n                let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                setInputWidth(value > MAX_WIDTH_INPUT ? MAX_WIDTH_INPUT : value);\r\n              }\r\n        } \r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={2}>\r\n          <div>\r\n            <p>Alto:</p>\r\n            <input \r\n              value={InputHeight} \r\n              type=\"number\" \r\n              step=\"1\" \r\n              onChange={\r\n                (event) => {\r\n                  let value = parseInt(event.target.value.replaceAll(\",\",\"\").replaceAll(\".\",\"\"));\r\n                  setInputHeight(value > MAX_HEIGHT_INPUT ? MAX_HEIGHT_INPUT : value);\r\n                  \r\n                }\r\n              }\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button variant=\"contained\" onClick={onSubmit}>Actualizar</Button>\r\n        </Grid>\r\n    </Grid>\r\n    \r\n  )\r\n}\r\n","\r\nconst STANDARD_BOX_LONG = 30;\r\n\r\nexport class AbstractStreet{\r\n\r\n    constructor(ninePerNineGrid, rowIndex, columnIndex){\r\n        const rightFilled = ninePerNineGrid[1][2].filled;\r\n        const topFilled = ninePerNineGrid[0][1].filled;\r\n        const botFilled = ninePerNineGrid[2][1].filled;\r\n        const leftFilled = ninePerNineGrid[1][0].filled;\r\n        this.rotation = this.determineStreetRotation(topFilled, leftFilled, botFilled, rightFilled);\r\n        this.long = [\r\n            STANDARD_BOX_LONG, \r\n            STANDARD_BOX_LONG\r\n        ];\r\n        this.position = [\r\n            rowIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2, \r\n            columnIndex*STANDARD_BOX_LONG + STANDARD_BOX_LONG/2\r\n        ];\r\n    }\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //To implement by each son\r\n    }\r\n\r\n    static sumValueForCell(cell){\r\n        return cell.filled ? 1 : 0\r\n    }\r\n\r\n    static calculateNeighboursFilled(ninePerNineGrid){\r\n        let rowCount = 0;\r\n        let columnCount = 0;\r\n        rowCount += AbstractStreet.sumValueForCell(ninePerNineGrid[1][0]) + AbstractStreet.sumValueForCell(ninePerNineGrid[1][2]);\r\n        columnCount += AbstractStreet.sumValueForCell(ninePerNineGrid[0][1]) + AbstractStreet.sumValueForCell(ninePerNineGrid[2][1]);\r\n        return [rowCount, columnCount];\r\n    }\r\n\r\n    isStraight(){\r\n        return false;\r\n    }\r\n\r\n\r\n    determineStreetRotation(){\r\n        //To be defined by sons\r\n    }\r\n\r\n    getAsJSON(){\r\n        return {\r\n            \"position_x\": this.position[0],\r\n            \"position_y\": this.position[1],\r\n            \"rotation\": this.rotation,\r\n            \"long_x\": this.long[0],\r\n            \"long_y\": this.long[1]\r\n        }\r\n    }\r\n\r\n    getPositionAsRowAndColumn(){\r\n        const row = (this.position[0] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        const col = (this.position[1] - STANDARD_BOX_LONG/2) / STANDARD_BOX_LONG;\r\n        return [row, col];\r\n    }\r\n\r\n\r\n    getPositionX(){\r\n        return this.position[0];\r\n    }\r\n\r\n    getPositionY(){\r\n        return this.position[1];\r\n    }\r\n\r\n    getLongX(){\r\n        return this.long[0];\r\n    }\r\n\r\n    getLongY(){\r\n        return this.long[1];\r\n    }\r\n   \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_TO_LEFT\": Math.PI*3/2,\r\n    \"LEFT_TO_BOT\": 0,\r\n    \"BOT_TO_RIGHT\": Math.PI/2,\r\n    \"RIGHT_TO_TOP\": Math.PI\r\n}\r\n\r\nexport class Curve extends AbstractStreet{\r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        //Tiene que tener solo 2 lindantes, y no ser en misma direccion.\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return (rowCount === 1 && columnCount === 1);\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left){\r\n            return POSSIBLE_ROTATIONS[\"TOP_TO_LEFT\"];\r\n        }\r\n        if(left && bot){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_TO_BOT\"];\r\n        }\r\n        if(bot && right){\r\n            return POSSIBLE_ROTATIONS[\"BOT_TO_RIGHT\"];\r\n        }\r\n        if(right && top){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_TO_TOP\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"CURVE\";\r\n        return dict;\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"HORIZONTAL\": 0,\r\n    \"VERTICAL\": Math.PI/2\r\n}\r\n\r\nexport class StraightStreet extends AbstractStreet {\r\n    \r\n    \r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        \r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);\r\n        return(columnCount === 2 && rowCount === 0 )|| (columnCount === 0 && rowCount === 2 )\r\n\r\n    }\r\n\r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && bot){\r\n            return POSSIBLE_ROTATIONS[\"VERTICAL\"];\r\n        }\r\n        if(left && right){\r\n            return POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n        }\r\n    }\r\n\r\n    isStraight(){\r\n        return true;\r\n    }\r\n\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"STRAIGHT\";\r\n        return dict;\r\n    }\r\n\r\n\r\n    isHorizontal(){\r\n        return this.rotation === POSSIBLE_ROTATIONS[\"HORIZONTAL\"];\r\n    }\r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\nconst POSSIBLE_ROTATIONS = {\r\n    \"TOP_SINGLE\": Math.PI,\r\n    \"LEFT_SINGLE\": Math.PI*3/2,\r\n    \"BOT_SINGLE\": 0,\r\n    \"RIGHT_SINGLE\": Math.PI/2\r\n}\r\nexport class TStreet extends AbstractStreet {\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 1 )|| (columnCount === 1 && rowCount === 2 );\r\n    }\r\n    \r\n    determineStreetRotation(top, left, bot, right){\r\n        if(top && left && right){\r\n            return POSSIBLE_ROTATIONS[\"TOP_SINGLE\"];\r\n        }\r\n        if(left && bot && top){\r\n            return POSSIBLE_ROTATIONS[\"LEFT_SINGLE\"];\r\n        }\r\n        if(bot && right && left){\r\n            return POSSIBLE_ROTATIONS[\"BOT_SINGLE\"];\r\n        }\r\n        if(right && top && bot){\r\n            return POSSIBLE_ROTATIONS[\"RIGHT_SINGLE\"];\r\n        }\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"T_STREET\";\r\n        return dict;\r\n    }\r\n\r\n}","export class StraightStreetLinker{\r\n\r\n    constructor(arrayOfStreets){\r\n        this.sections = this.segregateSections(arrayOfStreets);\r\n        this.sectionsAsJSON = this.linkSections();\r\n    }\r\n\r\n    //Genero un array para cada tramo recto, que contenga todas las StraightStreets de ese tramo\r\n    //Cada array de seccion va dentro de un array general y eso retornamos\r\n    segregateSections(arrayOfStreets){\r\n        // Recorro array de streets --> Armo un hashMap de filas, y otro de columnas.\r\n        // Para cada fila o columna, separar las subsecciones correspondientes.\r\n        const rows = {};\r\n        const cols = {};\r\n        let sectionsArray = [];\r\n\r\n        for(let i = 0; i < arrayOfStreets.length; i++){\r\n            let [streetRow, streetCol] = arrayOfStreets[i].getPositionAsRowAndColumn();\r\n            if( arrayOfStreets[i].isHorizontal() ){\r\n                if( !(streetRow in rows) ){\r\n                    rows[streetRow] = [];\r\n                }\r\n                rows[streetRow].push({\"idx\":streetCol, \"street\":arrayOfStreets[i]});\r\n            }\r\n            else{\r\n                if( !(streetCol in cols) ){\r\n                    cols[streetCol] = [];\r\n                }\r\n                cols[streetCol].push({\"idx\":streetRow, \"street\":arrayOfStreets[i]});\r\n            }\r\n        }\r\n        for(const [, value] of Object.entries(rows)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        for(const [, value] of Object.entries(cols)){\r\n            sectionsArray = [...sectionsArray, ...this.generateArraySubsections(value)];\r\n        }\r\n        return sectionsArray;\r\n        \r\n    }\r\n\r\n\r\n    generateArraySubsections(array){\r\n        const finalArray = [];\r\n        //Sort de array por idx creciente... CREEMOS que ya viene sorteado - VERIFICAR.\r\n        for ( let i=0; i<array.length; i++){\r\n            //Primer elemento, o no son lindantes\r\n            if( i === 0 || (Math.abs(array[i][\"idx\"] - array[i-1][\"idx\"]) > 1)){\r\n                finalArray.push([array[i][\"street\"]]);\r\n            }else{\r\n                finalArray[finalArray.length - 1].push(array[i][\"street\"]);\r\n            }\r\n        }\r\n        return finalArray;\r\n    }\r\n\r\n\r\n    linkSections(){\r\n        const sectionsJSON = [];\r\n        for(let i = 0; i < this.sections.length; i++){\r\n            //Rotation is the same for all of them\r\n            const jsonForStreet = {\r\n                \"position_x\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionX(), 0)/this.sections[i].length,\r\n                \"position_y\": this.sections[i].reduce((acum, elem) => acum + elem.getPositionY(), 0)/this.sections[i].length ,\r\n                \"rotation\": this.sections[i][0].rotation,\r\n                \"long_x\": this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongX(), 0) : this.sections[i][0].getLongX(),\r\n                \"long_y\": !this.sections[i][0].isHorizontal() ? this.sections[i].reduce((acum, elem) => acum + elem.getLongY(), 0) : this.sections[i][0].getLongY(),\r\n                \"type\": \"STRAIGHT\"\r\n            }\r\n            sectionsJSON.push(jsonForStreet);\r\n        }\r\n        return sectionsJSON;\r\n    }\r\n\r\n    getSectionsAsJSON(){\r\n        return this.sectionsAsJSON;\r\n    }\r\n}","import { StraightStreet, TStreet, Intersection, Curve, StraightStreetLinker } from \"./Street\";\r\n\r\nconst TYPES_OF_STREETS = [\r\n    StraightStreet,\r\n    Curve,\r\n    TStreet,\r\n    Intersection\r\n];\r\n\r\nexport class StreetFactory{\r\n    \r\n    constructor(levelGrid, isInfiniteLevel){\r\n        this.levelGrid = levelGrid;\r\n        this.getNinePerNineGrid = isInfiniteLevel ? this.getNinePerNineGridInfinite : this.getNinePerNineGridFinite;\r\n    }\r\n\r\n    constructStreets(){\r\n        const straightStreetsArray = [];\r\n        const curvedStreetsArray = [];\r\n        //ararco desde la parte superior izq\r\n        for ( let i = 0; i < this.levelGrid.length ; i++ ){\r\n            for ( let j = 0; j < this.levelGrid[i].length ; j++ ){\r\n                const myCell = this.levelGrid[i][j];\r\n                if (myCell.filled){\r\n                    const streetObject = this.defineTypeOfStreet(i, j);\r\n                    if (streetObject.isStraight()){\r\n                        straightStreetsArray.push(streetObject);\r\n                    }\r\n                    else{\r\n                        curvedStreetsArray.push(streetObject);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        const conjunctedStraightStreets = this.linkStraightStreets(straightStreetsArray);\r\n        let finalArray = curvedStreetsArray.map(street => street.getAsJSON());\r\n        return [...finalArray, ...conjunctedStraightStreets];\r\n        //const finalArray = [...conjunctedStraightStreets, ...curvedStreetsArray];\r\n        //return finalArray.map(street => street.getAsJSON());\r\n    }\r\n\r\n    getNinePerNineGridInfinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            const rowArray = [];\r\n            //Si es negativo es la ultima, y sino es el modulo entre el index y la cant de filas.\r\n            const realRow = i < 0 ? this.levelGrid.length-1 : i % this.levelGrid.length;\r\n            for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                //Simil row pero para columna\r\n                const realColumn = y < 0 ? this.levelGrid[realRow].length-1 : y % this.levelGrid[realRow].length;\r\n                rowArray.push(this.levelGrid[realRow][realColumn]);\r\n            }\r\n            matrix.push(rowArray);\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    getNinePerNineGridFinite(indexRow, indexColumn){\r\n        const matrix = [];\r\n        const celda_vacia = {\r\n            \"filled\": false,\r\n        }\r\n        for (let i = indexRow - 1; i <= indexRow + 1; i++){\r\n            //Casos Filas Imaginarias vacías\r\n            if (i < 0 || i === this.levelGrid.length){\r\n                matrix.push([celda_vacia, celda_vacia, celda_vacia]);\r\n            }else{\r\n                const rowArray = [];\r\n                for (let y = indexColumn - 1; y <= indexColumn + 1; y++ ){\r\n                    if (y < 0 || y === this.levelGrid[i].length){\r\n                        rowArray.push(celda_vacia);\r\n                    }else{\r\n                        rowArray.push(this.levelGrid[i][y]);\r\n                    }\r\n                }\r\n                matrix.push(rowArray);\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    /* Example:\r\n        | | | | | | | |\r\n        | | | x x x | |\r\n        | | | x Y x | |\r\n        | | | x x x | |\r\n        | | | | | | | |\r\n    */\r\n    defineTypeOfStreet(row, column){\r\n        const ninePerNineGrid = this.getNinePerNineGrid(row, column);\r\n        let typeDefined = false;\r\n        let typeResult = undefined;\r\n        for ( let i = 0; i < TYPES_OF_STREETS.length && !typeDefined; i++){\r\n            typeDefined = TYPES_OF_STREETS[i].isValidNinePerNineGrid(ninePerNineGrid);\r\n            typeResult = TYPES_OF_STREETS[i];\r\n        }\r\n        if (!typeDefined){\r\n            throw new Error(\"No se pudo definir el tipo de calle dentro de los tipos validos.\");\r\n        }\r\n        //Row 0 es la de abajo del todo. Invertimos la row.\r\n        return new typeResult(ninePerNineGrid, this.levelGrid.length - 1 - row, column);\r\n    }\r\n\r\n\r\n    linkStraightStreets(straightStreetsArray){\r\n        const linker = new StraightStreetLinker(straightStreetsArray);\r\n        return linker.getSectionsAsJSON();\r\n    }\r\n    \r\n}","import { AbstractStreet } from \"./AbstractStreet\";\r\n\r\n\r\nexport class Intersection extends AbstractStreet{\r\n\r\n    static isValidNinePerNineGrid(ninePerNineGrid){\r\n        let [rowCount, columnCount] = AbstractStreet.calculateNeighboursFilled(ninePerNineGrid);    \r\n        return(columnCount === 2 && rowCount === 2 )\r\n    }\r\n\r\n    determineStreetRotation(){\r\n        //No sense to rotate it\r\n        return 0;\r\n    }\r\n\r\n    getAsJSON(){\r\n        let dict = super.getAsJSON();\r\n        dict[\"type\"] = \"INTERSECTION\";\r\n        return dict;\r\n    }\r\n}\r\n","import { StreetFactory } from \"./StreetFactory\";\r\n\r\n\r\nexport function downloadObjectAsJson(exportObj, exportName){\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj));\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n};\r\n\r\n\r\n\r\n\r\nfunction getCountSidesPainted(levelGrid, i, j){\r\n    let aux = 0;\r\n    for (let x = i-1; x <= i+1 && x < levelGrid.length; x++){\r\n        if (x >= 0 && x !== i){\r\n            aux += levelGrid[x][j].filled ? 1 : 0;\r\n        }\r\n    }\r\n    for(let y = j-1; y <= j+1 && y < levelGrid[i].length; y++){\r\n        if(y >= 0 && y !== j){\r\n            aux += levelGrid[i][y].filled ? 1 : 0;\r\n        }\r\n    }\r\n    return aux;\r\n}\r\n\r\nfunction validateGridNotInfinite(levelGrid){\r\n    let valid = true;\r\n    let wrongCells = [];\r\n    for (let i=0; i<levelGrid.length; i++){\r\n        for (let j=0; j<levelGrid[i].length; j++){\r\n            if (levelGrid[i][j].filled && getCountSidesPainted(levelGrid, i,j) <= 1){\r\n                valid = false;\r\n                wrongCells.push([i,j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    return {\r\n        \"valid\": valid,\r\n        \"wrongCells\": wrongCells\r\n    }\r\n}\r\n\r\nfunction validateGridInfinite(){\r\n\r\n}\r\n\r\nexport function validateGrid(levelGrid, isInfinite){\r\n    \r\n    return (isInfinite ? validateGridInfinite(levelGrid) : validateGridNotInfinite(levelGrid));\r\n    \r\n}\r\n\r\nexport function generateJSONFromGrid(levelGrid){\r\n    \r\n    const streetFactory = new StreetFactory(levelGrid);\r\n    const streetsArray = streetFactory.constructStreets();\r\n    const objectsAndStreets = {\r\n        \"streets\": streetsArray\r\n    };\r\n    return objectsAndStreets;\r\n\r\n    \r\n}","import { useEffect, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport MemoryIcon from '@mui/icons-material/Memory';\r\nimport { downloadObjectAsJson, validateGrid, generateJSONFromGrid } from '../Resources/LevelEditor';\r\n\r\nconst COLORS = {\r\n  \"FILLED\": \"darkgray\",\r\n  \"EMPTY\": \"white\",\r\n  \"WARNING\": 'orange',\r\n};\r\n\r\nconst WIDTH_GRID_VIEW = 600;\r\nconst HEIGHT_GRID_VIEW = 600;\r\nconst LEFT_CLICK = 0;\r\nconst RIGHT_CLICK = 2;\r\n\r\n\r\nexport const LevelGrid = ({gridDimensions}) => {\r\n\r\n  const [levelGrid, setLevelGrid] = useState([]);\r\n  const [click, setClick] = useState(false);\r\n  const [rightClick, setRightClick] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let finalGrid = [];\r\n    for(let i=0; i<gridDimensions.height; i++){\r\n      let currentRow = [];\r\n      for(let j=0; j<gridDimensions.width; j++){\r\n        let newCell = {\r\n          \"filled\": false,\r\n          \"div_color\": COLORS[\"EMPTY\"]\r\n        }\r\n        currentRow.push(newCell);\r\n      }\r\n      finalGrid.push(currentRow);\r\n    }\r\n    setLevelGrid(finalGrid);\r\n  }, [gridDimensions.width, gridDimensions.height]);\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", (event) => {\r\n      event.preventDefault();\r\n      if(event.button === LEFT_CLICK){\r\n        setClick(false);\r\n      }else if (event.button === RIGHT_CLICK){\r\n        setRightClick(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"contextmenu\", (event) => { event.preventDefault(); });\r\n  }, []);\r\n\r\n\r\n  const arrayContains = (array, insiderArray) => {\r\n    if (!insiderArray || !array){\r\n      return false;\r\n    }\r\n    for (let i=0; i<array.length; i++){\r\n      let equals = true;\r\n      for (let j=0; j<array[i].length; j++){\r\n        try{\r\n          if(array[i][j] !== insiderArray[j]){\r\n            equals = false;\r\n          }\r\n        }catch(exc){j=array[i].length; equals=false;}\r\n      }\r\n      if(equals) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  const onSubmitLevel = () =>{\r\n    let result = validateGrid(levelGrid);\r\n    let vec_aux = [...levelGrid];\r\n    for( let i=0; i< levelGrid.length; i++ ){\r\n      for( let j=0; j < levelGrid[i].length; j++){\r\n        if (vec_aux[i][j].filled){\r\n          vec_aux[i][j].div_color = arrayContains(result.wrongCells, [i,j]) ? COLORS[\"WARNING\"] : COLORS[\"FILLED\"];\r\n        }\r\n        \r\n      }\r\n    }\r\n    setLevelGrid(vec_aux);\r\n    if (result.valid) {\r\n      downloadObjectAsJson(generateJSONFromGrid(levelGrid), \"Driving_Simulator_Custom_Level.json\");\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  const onEnterHoverWithClickCell = (row, col) => {\r\n    if(click){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(rightClick){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n  \r\n  const onClickCell = (row, col, btn_click) => {\r\n    if(btn_click === LEFT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = true;\r\n      levelGridCopy[row][col].div_color = COLORS[\"FILLED\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }else if(btn_click === RIGHT_CLICK){\r\n      const levelGridCopy = [...levelGrid];\r\n      levelGridCopy[row][col].filled = false;\r\n      levelGridCopy[row][col].div_color = COLORS[\"EMPTY\"];\r\n      setLevelGrid(levelGridCopy);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div \r\n      style={{\r\n        width: WIDTH_GRID_VIEW,\r\n        height: HEIGHT_GRID_VIEW,\r\n        marginTop: 25,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n      }}\r\n      onMouseDown = {(event) => {\r\n        event.preventDefault();\r\n        if(event.button === LEFT_CLICK){\r\n          setClick(true);\r\n        }else if (event.button === RIGHT_CLICK){\r\n          setRightClick(true);\r\n        }\r\n      }}\r\n    >\r\n      {levelGrid.map((row, idx_row) => {\r\n        return(\r\n          <div \r\n            className=\"row-level-grid\" \r\n            id={`row_${idx_row}`}\r\n            key={`row_${idx_row}`}\r\n            style={{\r\n              width: \"100%\",\r\n              height: HEIGHT_GRID_VIEW/gridDimensions.height,\r\n              display: \"flex\",\r\n              flexDirection: \"row\"\r\n            }}\r\n          >\r\n            {row.map((cell, idx_col) => {\r\n              return (\r\n                <div \r\n                  className=\"cell-level-grid\" \r\n                  key={`cell_${idx_row}_${idx_col}`}\r\n                  id={`cell_${idx_row}_${idx_col}`} \r\n                  style={{\r\n                    backgroundColor: cell[\"div_color\"],\r\n                    width: `${100/gridDimensions.width}%`,\r\n                    height: \"100%\",\r\n                    border: \"1px solid black\"\r\n                  }} \r\n                  //onMouseEnter = {() => onEnterHoverWithClickCell(idx_row, idx_col)}\r\n                  onMouseMove = {(event) => {\r\n                    event.preventDefault();\r\n                    onEnterHoverWithClickCell(idx_row, idx_col);\r\n                  }}\r\n                  onMouseUp = {(event) => {\r\n                    onClickCell(idx_row, idx_col, event.button);\r\n                  }}\r\n                  \r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n      <div style={{display:\"flex\", justifyContent:\"center\", marginTop:40}}>\r\n        <Button variant=\"contained\" onClick={onSubmitLevel}  color=\"success\">\r\n          <MemoryIcon/> Procesar nivel...\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { IconButton } from '@mui/material'\r\nimport { ConfigDrawer } from './Components/ConfigDrawer';\r\nimport { ItemsDrawer } from './Components/ItemsDrawer';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { ItemsContext } from './LevelEditorContext/ItemsContext';\r\nimport { useState } from 'react';\r\nimport { InputsGrid } from './Components/InputsGrid';\r\n\r\nimport { LevelGrid } from './Components/LevelGrid';\r\n\r\nexport const LevelEditor = () => {\r\n\r\n  const [openItems, setOpenItems] = useState(false);\r\n  const [openConfigs, setOpenConfigs] = useState(false);\r\n\r\n  const [itemsInGrid, setItemsInGrid] = useState([]);\r\n\r\n  const [lastSelectedItem, setLastSelectedItem] = useState(null);\r\n\r\n  const [gridDimensions, setGridDimensions] = useState({width:20, height:20});\r\n\r\n  React.useEffect(() => {\r\n    if (lastSelectedItem !== null){\r\n      setItemsInGrid(currentItems => [...currentItems, lastSelectedItem]);\r\n    }\r\n  }, [lastSelectedItem]);\r\n\r\n  return (\r\n    <>\r\n      <ItemsContext.Provider value={{lastSelectedItem, setLastSelectedItem}} >\r\n        <div style={{backgroundColor: \"#B1E6F2\", minHeight:'100vh'}} >\r\n          <div style={{flexDirection:'row',justifyContent:'space-between', display:\"flex\"}}>\r\n            <IconButton onClick={() => setOpenItems(true)} style={{height:40, margin:10}} className='header'>\r\n              <AddIcon/>\r\n            </IconButton>\r\n            <h1>Driving Simulator - Level Editor</h1>\r\n            <IconButton onClick={() => setOpenConfigs(true)} style={{height:40, margin:10}} className='header' >\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </div>\r\n          <div>\r\n              <InputsGrid setGridDimensions={setGridDimensions} gridDimensions={gridDimensions}></InputsGrid>\r\n              <LevelGrid gridDimensions = {gridDimensions}/>\r\n              {itemsInGrid.map((item, idx) => {\r\n                return(\r\n                  <span key={idx}></span>\r\n                  /*<img \r\n                    key={idx} \r\n                    src={`${item.selectedItem}.png`} \r\n                    width={item.scale*75} \r\n                    height={item.scale*75} \r\n                    style={{\r\n                      top:item.positionY, \r\n                      left:item.positionX,\r\n                      position: \"absolute\",\r\n                      zIndex: item.zIndex.toString()\r\n                    }}\r\n                    onClick={() => {console.log(`OPEN CONFIGS OF idx: ${idx}, obj: ${JSON.stringify(itemsInGrid[idx])}`)}}\r\n                  />*/\r\n                );\r\n              })}\r\n          </div>\r\n          \r\n        </div>\r\n        <ItemsDrawer openItems={openItems} handleDrawerClose={() => {setOpenItems(false)}}/>\r\n        <ConfigDrawer openConfigs={openConfigs} handleDrawerClose={() => {setOpenConfigs(false)}}/>\r\n      </ItemsContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","\r\nconst { createHash } = require('crypto');\r\n\r\nexport const hash = (string) => {\r\n  return createHash('sha256').update(string).digest('hex');\r\n}","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants'\r\nimport { SessionHooks } from '../Sessions/SessionHooks';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\n\r\nexport const LoginForm = ( {setLogin} ) => {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const { setSessionWithResponse } = SessionHooks();\r\n\r\n  const postLogin = async () => {\r\n    try{\r\n        const APIResponse = await fetch(\r\n            `${API_URL}/users/login`,\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    \"email\": email,\r\n                    \"password\": hash(password)\r\n                })\r\n            }\r\n        );\r\n        if (APIResponse.status !== 200){\r\n            const json = await APIResponse.json();\r\n            const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n            let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n            throw new Error(error_msg);\r\n        }\r\n        return APIResponse.json();\r\n    }catch(e){\r\n        throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  const validateFields = () => {\r\n    const errors = []\r\n    if (password === \"\"){\r\n        errors.push(\"El campo contraseña se encuentra vacío.\");\r\n    }\r\n    if (email === \"\"){\r\n        errors.push(\"El campo email se encuentra vacío\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n        errors.push(\"El email establecido es inválido.\");\r\n      }\r\n    if(errors.length > 0){\r\n        setError(errors);\r\n        return false;\r\n    }else{\r\n        return true;\r\n    }\r\n  }\r\n\r\n\r\n  const submitLogin = async (event) => {\r\n    event.preventDefault();\r\n    if(!validateFields()){\r\n        return;\r\n    }\r\n    try{\r\n        const loginResponse = await postLogin();\r\n        setSessionWithResponse(loginResponse);\r\n        /*TODO: DAR UN FEEDBACK DE SESION INICIADA CORRECTAMENTE ANTES DE REDIR*/\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n\r\n  const postLoginGoogle = async (token) => {\r\n    const APIResponse = await fetch(\r\n        `${API_URL}/users/login_google`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"token\": token\r\n            })\r\n        }\r\n    );\r\n    if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n    }\r\n    return APIResponse.json();\r\n  }\r\n\r\n  const submitGoogleLogin = async (token) => {\r\n    try{\r\n        const responseAPI = await postLoginGoogle(token);\r\n        setSessionWithResponse(responseAPI);\r\n    }catch(e){\r\n        setError([e.toString().replaceAll(\"Error: \", \"\")]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitLogin}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            padding:30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Iniciar Sesión</h1>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type=\"text\" \r\n                    onChange={(event) => setEmail(event.target.value)} \r\n                    value={email} \r\n                    name=\"email\"\r\n                    label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPassword(event.target.value)} \r\n                    value={password} \r\n                    name=\"password\"\r\n                    label=\"Contraseña\"\r\n                    InputProps={{ // <-- This is where the toggle button is added.\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={handleClickShowPassword}\r\n                            >\r\n                              {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">Iniciar Sesión</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <p className={\"p_button\"} onClick={() => {setLogin(false);}}>¿No posees una cuenta? Registrate aqu&iacute;...</p>\r\n            </div>\r\n            <div style={{marginTop:20, display:\"flex\", justifyContent:\"center\", textAlign:\"center\", alignContent:\"center\"}}>\r\n                <GoogleLogin\r\n                    onSuccess={credentialResponse => {\r\n                        const OAuthToken = credentialResponse.credential;\r\n                        submitGoogleLogin(OAuthToken);\r\n                    }}\r\n                    onError={() => {\r\n                        setError(['El inicio de sesión con Google ha fallado.']);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n","import { useContext } from 'react';\r\nimport { SessionContext } from './SessionContext';\r\n\r\nexport const SessionHooks = () => {\r\n  \r\n    const { session, setSession } = useContext(SessionContext);\r\n\r\n\r\n    const setSessionWithResponse = (loginResponse) => {\r\n        localStorage.setItem(\"session\", JSON.stringify({\r\n            user: loginResponse.user,\r\n            exp: loginResponse.exp,\r\n            jwt: loginResponse.jwt\r\n        }));\r\n        setSession({\r\n            user: loginResponse.user,\r\n            exp: loginResponse.exp,\r\n            jwt: loginResponse.jwt\r\n        });\r\n    }\r\n\r\n    const getUser = () => {\r\n        return session.user ? session.user : undefined;\r\n    }\r\n\r\n    const getJWT = () => {\r\n        return session.jwt ? session.jwt : undefined;\r\n    }\r\n\r\n    return({\r\n        setSessionWithResponse,\r\n        getUser,\r\n        getJWT\r\n    })\r\n}\r\n","import React from 'react'\r\nimport {API_URL} from '../Constants/Constants';\r\nimport { Alert, Button, TextField, InputAdornment, IconButton } from \"@mui/material\"\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { VALID_REGEX_EMAIL } from '../Constants/Constants';\r\nimport { hash } from '../Resources/Hasher';\r\n\r\n\r\nexport const SignUpForm = ( {setLogin} ) => {\r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState(\"\");\r\n  const [nameToShow, setNameToShow] = React.useState(\"\");\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [error, setError] = React.useState(undefined);\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const validateFields = () => {\r\n    const errorArray = [];\r\n    if (email === \"\" || password === \"\" || passwordConfirmation === \"\" || nameToShow === \"\"){\r\n      errorArray.push(\"Aún existen campos sin completar.\")\r\n    }\r\n    if (password !== passwordConfirmation){\r\n      errorArray.push(\"Las contraseñas establecidas no coinciden.\");\r\n    }\r\n    if (password.length < 8){\r\n      errorArray.push(\"La contraseña debe tener una longitud mínima de 8 caracteres.\");\r\n    }\r\n    if (!email.match(VALID_REGEX_EMAIL)){\r\n      errorArray.push(\"El email establecido es inválido.\");\r\n    }\r\n    if(errorArray.length > 0){\r\n      setError(errorArray);\r\n      return false;\r\n    }else{\r\n      setError(undefined);\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  const postSignUp = async () => {\r\n    const fetchUrl = `${API_URL}/users/register`;\r\n    try{\r\n      const APIResponse = await fetch(\r\n        fetchUrl,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n              \"email\": email,\r\n              \"password\": hash(password),\r\n              \"name_to_show\": nameToShow\r\n          })\r\n        }\r\n      );\r\n      if (APIResponse.status !== 200){\r\n        const json = await APIResponse.json();\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      return APIResponse.json();\r\n  }catch(e){\r\n      throw new Error(e);\r\n  }\r\n  }\r\n\r\n\r\n  const submitSignUp = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateFields()){\r\n      return;\r\n    }\r\n    // eslint-disable-next-line\r\n    const res = await postSignUp();\r\n    /*TODO: Mostrar dialog de creado exitoso, y despues mandarlo al login...*/\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitSignUp}>\r\n        <div style={{\r\n            display:\"flex\", \r\n            justifyContent:\"center\", \r\n            alignContent:\"center\", \r\n            flexDirection:\"column\", \r\n            textAlign:\"center\",\r\n            margin: \"auto\",\r\n            padding:30,\r\n            border: \"2px solid black\",\r\n            borderRadius: 20,\r\n            maxWidth:400\r\n        }}>\r\n            {error && \r\n                <Alert severity=\"error\" style={{textAlign:\"justify\"}} onClose={() => setError(undefined)}>\r\n                    Han ocurrido los siguientes errores:\r\n                    <ul>\r\n                        {error.map((listerror, idx) => <li key={idx}>{listerror}</li>)}\r\n                    </ul>\r\n                </Alert>\r\n            }\r\n            <h1>Crea tu cuenta</h1>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setEmail(event.target.value)} \r\n                  value={email} \r\n                  name=\"email\"\r\n                  label=\"E-Mail\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type=\"text\" \r\n                  onChange={(event) => setNameToShow(event.target.value)} \r\n                  value={nameToShow} \r\n                  name=\"username\"\r\n                  label=\"Nombre para mostrar\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                  style={{width:\"80%\"}}\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  onChange={(event) => setPassword(event.target.value)} \r\n                  value={password} \r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  InputProps={{ // <-- This is where the toggle button is added.\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <TextField \r\n                    style={{width:\"80%\"}}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(event) => setPasswordConfirmation(event.target.value)} \r\n                    value={passwordConfirmation} \r\n                    name=\"passwordConfirmation\"\r\n                    label=\"Repetir Contraseña\"\r\n                />\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                {/*TODO: CONSIDERAR EL SPINNER CUANDO ESTA CARGANDO*/}\r\n                <Button variant=\"contained\" type=\"submit\">CREAR CUENTA</Button>\r\n            </div>\r\n            <div style={{marginTop:20}}>\r\n                <p className={\"p_button\"} onClick={() => {setLogin(true)}}>¿Ya poses una cuenta? Inicia sesión...</p>\r\n            </div>\r\n        </div>\r\n    </form>\r\n  )\r\n}\r\n","import { SessionContext } from \"./SessionContext\";\r\nimport React, { useState } from 'react'\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nexport const SessionProvider = ( {childElement} ) => {\r\n  \r\n    const [session, setSession] = useState({\r\n        user: undefined,\r\n        exp: undefined,\r\n        jwt: undefined\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        const localSessionStr = localStorage.getItem(\"session\");\r\n        if (localSessionStr){\r\n            const localSession = JSON.parse(localSessionStr);\r\n            if (localSession && new Date(localSession.exp) > new Date()){\r\n                setSession({\r\n                    user: localSession.user,\r\n                    exp: localSession.exp,\r\n                    jwt: localSession.jwt\r\n                });\r\n            }else{\r\n                setSession({\r\n                    user: undefined,\r\n                    exp: undefined,\r\n                    jwt: undefined\r\n                });\r\n                localStorage.setItem(\"session\", null);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <GoogleOAuthProvider clientId=\"18785041157-s9ga39r0i6up45radtj3soo6je1pneon.apps.googleusercontent.com\">\r\n            <SessionContext.Provider value={{session, setSession}}>\r\n                {childElement}\r\n            </SessionContext.Provider>\r\n        </GoogleOAuthProvider>\r\n    )\r\n}\r\n","import { CardContent, CardHeader, CardMedia, Grid, Typography, Button, Box } from '@mui/material'\r\nimport React from 'react'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport AccessTimeFilledIcon from '@mui/icons-material/AccessTimeFilled';\r\nimport SportsScoreIcon from '@mui/icons-material/SportsScore';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CarRentalIcon from '@mui/icons-material/CarRental';\r\nimport { SessionContext } from '../../Sessions/SessionContext';\r\nimport { API_URL } from '../../Constants/Constants';\r\nimport \"../../styles.css\";\r\n\r\nexport const LevelCard = ({level}) => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const {session} = React.useContext(SessionContext);\r\n  const [isCompleted, setIsCompleted] = React.useState(false);\r\n  const [completedData, setCompletedData] = React.useState({\r\n    score: undefined,\r\n    time: undefined\r\n  });\r\n\r\n  const seleccionarNivel = () => {\r\n    navigate(\"/scene\", { state: { jsonLevel: level } });\r\n  }\r\n\r\n\r\n  const getTimeInMSAsString = (timeInMs) => {\r\n    const timeInSeconds = parseInt(timeInMs/1000);\r\n    const seconds = timeInSeconds%60;\r\n    const minutes = parseInt((timeInSeconds-seconds)/60);\r\n    const minutesUpToSixty = minutes%60;\r\n    const hours = parseInt((minutes-minutesUpToSixty)/24);\r\n    return `${hours.toString().padStart(2,'0')}:${minutes.toString().padStart(2,'0')}:${seconds.toString().padStart(2,'0')}`;\r\n}\r\n\r\n\r\n  const fetchUserProgress = async () => {\r\n    try{\r\n      const APIResponse = await fetch(\r\n        `${API_URL}/user_progress/?level_id=${level.id}&user_id=${session.user.id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        }\r\n      );\r\n      const json = await APIResponse.json();\r\n      if (APIResponse.status !== 200){\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      console.log(json);\r\n      setIsCompleted(json.completed);\r\n      setCompletedData({\r\n        score: json.best_score,\r\n        time: json.best_time ? getTimeInMSAsString(json.best_time) : json.best_time\r\n      })\r\n    }catch(e){\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (session && session.user){\r\n      fetchUserProgress();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <CardContent style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", flexDirection:\"column\", width:\"100%\"}}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        width={400}\r\n        height={200}\r\n        image={`/levels/images/${level.image}`}\r\n        title={level.title}\r\n        style={{ borderRadius:20}}\r\n        sx={{ objectFit: \"contain\", justifyContent: \"center\", display: \"flex\", maxHeight:\"100%\", maxWidth:\"100%\"}}\r\n      />\r\n      <Grid container spacing={2} rowSpacing={2} justifyContent={\"space-around\"} alignItems=\"center\" alignContent=\"center\" className={\"card_text_wrapper\"}>\r\n        <Grid item xs={12} sm={9} style={{padding:0}}>\r\n          <CardHeader \r\n            title={level.title}\r\n            subheader={level.description}\r\n            style={{ padding:0}}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Box>\r\n            {isCompleted ?\r\n              <Typography style={{color:\"green\", fontWeight:\"bold\"}}>\r\n                <CheckCircleIcon style={{color:\"green\", verticalAlign:\"middle\", marginRight:10}}/>\r\n                COMPLETADO\r\n              </Typography>\r\n            :\r\n              <Typography style={{color:\"red\", fontWeight:\"bold\"}}>\r\n                <CancelIcon style={{color:'red', verticalAlign:\"middle\", marginRight:10}}/>\r\n                PENDIENTE\r\n              </Typography>\r\n            }\r\n          </Box>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} md={4}>\r\n          {isCompleted && <>\r\n            <Typography>\r\n              <AccessTimeFilledIcon style={{verticalAlign:\"middle\", marginRight:10}}/>\r\n              <strong>Mejor tiempo:</strong> \r\n            </Typography>\r\n            <Typography style={{marginLeft:35}}>\r\n              {completedData.time}\r\n            </Typography>\r\n          </>}\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          {isCompleted && <>\r\n            <Typography>\r\n              <SportsScoreIcon style={{verticalAlign:\"middle\", marginRight:10}}/>\r\n              <strong>Mejor puntaje:</strong>\r\n            </Typography>\r\n            <Typography style={{marginLeft:35}}>\r\n              {completedData.score}\r\n            </Typography>\r\n          </>}\r\n        </Grid>\r\n        <Grid item xs={12} md={4} style={{textAlign:\"center\"}}  >\r\n          <Button startIcon={<CarRentalIcon />} onClick={seleccionarNivel} className={\"accept_button\"}>\r\n            PRACTICAR\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Card, CardActions, Grid } from '@mui/material';\r\nimport { LevelCard } from './CardLevel/LevelCardContent';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport {API_URL} from '../Constants/Constants'\r\n\r\nexport const LevelsSelectionGrid = () => {\r\n\r\n  const [levels, setLevels] = React.useState([]);\r\n  \r\n\r\n  React.useEffect(() => {\r\n    if(localStorage.getItem(\"VR\") !== null){\r\n        localStorage.removeItem(\"VR\");\r\n        window.location.reload();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const fetchLevels = async () => {\r\n    try{\r\n      const levelsJSONs = [];\r\n      const APIResponse = await fetch(\r\n        `${API_URL}/levels/`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n        }\r\n      );\r\n      const json = await APIResponse.json();\r\n      json.forEach(level => {\r\n        level.level_json = JSON.parse(level.level_json);\r\n        level.level_json.id = level.id;\r\n        levelsJSONs.push(level.level_json);\r\n      });\r\n      if (APIResponse.status !== 200){\r\n        const endMSG = json.detail[0].msg ? json.detail[0].msg : json.detail;\r\n        let error_msg = APIResponse.status + \" - \" + APIResponse.statusText + \" - \" + endMSG;\r\n        throw new Error(error_msg);\r\n      }\r\n      setLevels(levelsJSONs);\r\n    }catch(e){\r\n      throw new Error(e);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fetchLevels();\r\n  }, []);\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <Grid container justifyContent={\"center\"} alignItems={\"center\"} alignContent={\"center\"}>\r\n        <Grid item xs={12} md={9} lg={6} alignContent={\"center\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n            <Carousel\r\n                sx={{width:\"100%\", padding:\"20px\"}}\r\n                autoPlay={false}\r\n                navButtonsAlwaysVisible={true}\r\n                indicators={false}\r\n                navButtonsProps={{\r\n                    style: {\"opacity\":\"40%\"}\r\n                }}\r\n                swipe={true}\r\n                className={\"levelsCarousel\"}\r\n                animation={'slide'}\r\n            >\r\n                {levels.map(level => \r\n                    <Card key={level.title} sx={{height:500, width:\"90%\", margin:\"auto\", background:\"transparent\", boxShadow: 0}}>\r\n                        <CardActions>\r\n                            <LevelCard level={level}/>\r\n                        </CardActions>\r\n                    </Card>\r\n                )}\r\n            </Carousel>\r\n        </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {LoginForm} from \"./LoginForm\";\r\nimport {SignUpForm} from \"./SignUpForm\";\r\nimport { Dialog, DialogContent} from \"@mui/material\";\r\n\r\nexport const LoginDialog = ( {openDialog, setOpenDialog} ) => {\r\n\r\n  const [login, setLogin] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  return (\r\n    <Dialog open={openDialog} onClose={handleClose} >\r\n      <DialogContent style={{backgroundColor:'#68B9D2'}}>\r\n        {\r\n          login ?\r\n            <LoginForm setLogin={setLogin}/>\r\n          :\r\n            <SignUpForm setLogin={setLogin}/>\r\n        }\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { LoginDialog } from './LoginDialog';\r\n\r\nexport const LoginButton = () => {\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <p className={\"p_button\"} onClick={() => setOpenDialog(true)}>\r\n          Inicia sesi&oacute;n y guarda tu progreso...\r\n        </p>\r\n      </div>\r\n      <LoginDialog openDialog={openDialog} setOpenDialog={setOpenDialog}/>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Button, Grid } from '@mui/material';\r\nimport { LevelsSelectionGrid } from './Components/LevelsSelectionGrid';\r\nimport { LoginButton } from './Components/LoginButton';\r\nimport \"./styles.css\";\r\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const LevelsList = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className='background'>\r\n      <Grid container spacing={2} rowSpacing={2} sx={{marginTop:0}}>\r\n        <Grid item xs={12} style={{textAlign:\"center\"}}>\r\n            <h1 style={{fontSize:64}}>Seleccionar Nivel</h1>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2} rowSpacing={2} justifyContent={\"center\"}>\r\n        <Grid item xs={12} md={4} style={{textAlign:\"right\"}}>\r\n          <Button onClick={() => {navigate(\"/\");}} startIcon={<ArrowBackIosNewIcon />} className={\"accept_button\"}>\r\n            ATR&Aacute;S\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} md={8} style={{textAlign:\"center\"}}>\r\n          <LoginButton/>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2} rowSpacing={2}>\r\n        <Grid item xs={12}>\r\n            <LevelsSelectionGrid />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n","import ThreeScene from \"./Scene/ThreeScene\";\r\nimport { MainMenu } from \"./Menus/MainMenu\";\r\nimport { LevelEditor } from \"./Menus/LevelEditor\";\r\nimport {\r\n  HashRouter as Router,\r\n  Routes as Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { LoginForm } from \"./Menus/Components/LoginForm\";\r\nimport { SignUpForm } from \"./Menus/Components/SignUpForm\";\r\nimport { SessionProvider } from \"./Menus/Sessions/SessionProvider\";\r\nimport { LevelsList } from \"./Menus/LevelsList\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <SessionProvider\r\n      childElement={\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/levels\" element={<LevelsList/>} />\r\n            <Route exact path=\"/scene\" element={<ThreeScene/>} />\r\n            <Route exact path=\"/\" element={<MainMenu />} />\r\n            <Route exact path=\"/level-editor\" element={<LevelEditor />} />\r\n            <Route exact path=\"/login\" element={<LoginForm />} />\r\n            <Route exact path=\"/signup\" element={<SignUpForm />} />\r\n          </Switch>\r\n        </Router>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n);\r\n\r\n"],"sourceRoot":""}