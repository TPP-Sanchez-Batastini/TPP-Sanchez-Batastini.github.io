{"version":3,"sources":["LogicModel/ControllerMapping/GlobalControllerHandling.js","ObserverPattern/Observer.js","Camera/Camera.js","Camera/CarOffsetCamera.js","Camera/OribtalCamera.js","3DModels/VisualEntity.js","3DModels/CarModel.js","LogicModel/ControllerMapping/LogitechG29Controller.js","LogicModel/ControllerMapping/XboxController.js","ObserverPattern/Observable.js","LogicModel/Physics/AmmoInstance.js","LogicModel/Physics/PhysicsTypes/CarPhysics.js","LogicModel/CarLogic/CarEngineStates/AbstractEngineState.js","LogicModel/CarLogic/CarEngineStates/TurnedOffEngine.js","LogicModel/CarLogic/CarEngineStates/TurnedOnEngine.js","LogicModel/CarLogic/CarEngine.js","LogicModel/CarLogic/ShiftBox.js","LogicModel/CarLogic/ShiftBoxTypes/ManualBox.js","LogicModel/CarLogic/ShiftBoxTypes/SemiAutomaticBox.js","LogicModel/CarLogic/Car.js","LogicModel/Physics/PhysicsTypes/GeneralPhysics.js","LogicModel/Physics/PhysicsTypes/CylinderPhysics.js","3DModels/TrafficCone.js","LogicModel/Physics/PhysicsTypes/BoxPhysics.js","Levels/LevelsFactory.js","addons/VRbutton.js","Scene/ThreeScene.jsx","App.jsx","index.jsx"],"names":["GlobalControllerHandling","car","this","valueClutch","valueAccelerator","accelerate","valueBrake","brake","valueShift","changeShift","wheelAxesValue","turnDirection","turnOnCar","update","mode","changeShiftBox","Observer","observedState","newState","Camera","renderer","camera","THREE","window","innerWidth","innerHeight","group","group180Rot","add","aspect","updateProjectionMatrix","cameraOffset","Vector3","applyQuaternion","rotation","position","copy","localStorage","getItem","offsetVectorCamera","setRotationFromQuaternion","setRotationFromAxisAngle","Math","PI","lookAt","positionToLookAt","x","y","z","offsetVector","CarOffsetCamera","positionCamera","cameraOffsetRotated","OrbitalCamera","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","set","VisualEntity","pathToTexture","fbxLoader","FBXLoader","gltfLoader","GLTFLoader","threeDModel","loadAsync","threeDObject","result","scene","objectName","scale","loadFBX","modelVariable","loadGLTF","name","SCALE","POSITION","MAX_TIRE_TURN_IN_RADS","FACTOR_KMH_TO_MS","CarModel","carModel","carLogic","lastValueRotation","currentSpeedRotation","currentWheelRotation","lastSteeringRotation","moveCar","physicsShape","Geometry","texture","color","PHYSICSSQUARE","GeometryRueda","rotateZ","textureRueda","wheelMesh1","wheelMesh2","wheelMesh3","wheelMesh4","quaternion","w","wheelsData","userData","physicsBody","rotateWheels","rotateSteeringWheel","steeringWheel","children","find","o","vectorRotation","applyAxisAngle","rotateOnAxis","wheelFrontRight","wheelFrontLeft","wheelBackRight","wheelBackLeft","rotationYVectorTwo","rotationYVectorOne","rotateX","require","default","LogitechG29Controller","gamepads","navigator","getGamepads","webkitGetGamepads","gamepad","i","length","id","startsWith","buttonX","buttonSquare","buttonCircle","buttonTriangle","bumperRight","bumperLeft","buttonR2","buttonL2","shareButton","optionsButton","buttonR3","buttonL3","firstShift","secondShift","thirdShift","fourthShift","fifthShift","sixthShift","reverseShift","buttonPlus","buttonMinus","wheelInEnterRight","wheelInEnterLeft","enter","psButton","buttonsPressed","push","wheelAxes","clutch","accelerator","DPad","valueDpadUP","valueDpadDOWN","valueDpadLEFT","valueDpadRIGHT","dpadPressed","globalControllerHandler","checkGamepadChanges","doActionByMapping","updateCar","axes","handleAccelerate","handleBrake","console","log","buttons","pressed","doActionsPedals","doActionsWheel","doActionsDPad","doActionsButtons","doActionsShifter","LogitechG29ControllerSingleton","Error","instance","STICK_LIMIT","XboxController","auto","buttonA","buttonB","buttonY","buttonL1","buttonR1","optionButton","padUp","padDown","padLeft","padRight","buttomHome","buttonPressed","actualShift","xLeftAxe","yLeftAxe","xRightAxe","yRightAxe","abs","axe","value","doActionHotKeys","doActionsAxes","doActionsTriggers","XboxControllerSingleton","Observable","observers","observer","index","indexOf","splice","stateToSend","AmmoInstance","AmmoInstanceToReturn","Ammo","CarPhysics","inertia","mass","shape","physicsWorld","friction","getInstance","btVector3","transform","btTransform","setIdentity","setOrigin","setRotation","btQuaternion","tempTransform","motionState","btDefaultMotionState","btBoxShape","calculateLocalInertia","rigidBodyInfo","btRigidBodyConstructionInfo","rigidBody","btRigidBody","setFriction","setRollingFriction","addRigidBody","tuning","btVehicleTuning","rayCaster","btDefaultVehicleRaycaster","vehicle","btRaycastVehicle","setCoordinateSystem","addAction","addWheel","setActivationState","isFront","pos","radius","width","side","wheelDirectionCS0","wheelAxleCS","wheelInfo","set_m_suspensionStiffness","set_m_wheelsDampingRelaxation","set_m_wheelsDampingCompression","set_m_frictionSlip","set_m_rollInfluence","returnValue","getNumWheels","updateWheelTransform","transfMatrix","getWheelTransformWS","getOrigin","getRotation","wheels","Vector4","worldTransformChassis","getChassisWorldTransform","chassis","engineForce","applyEngineForce","speedKMH","getCurrentSpeedKmHour","frictionBrake","setBrake","setSteeringValue","MAX_RPM","EXPONENTIAL_COEF_TO_RPM","AbstractEngineState","valuePedal","accelerating","currentRPM","currentXInRPMCurve","sumToValueInCurve","exp","TurnedOffEngine","changeValueInRPMCurve","TurnedOnEngine","CarEngine","engineState","shiftBox","shutDownEngine","clutchIsPressed","rpmReturn","handleEngineShutdown","RPMModification","ShiftBox","carEngine","NEUTRAL","REVERSE","FIRST","SECOND","THIRD","FOURTH","FIFTH","SIXTH","validShifts","currentShift","minimumVelocityOnShift","maximumVelocityOnShift","shift","newShift","oldVelocity","getCurrentRPM","normalFactorRPM","calculateNormalFactorRPM","XValue","currentVelocity","valueClutchNormalized","minVelocityBasedOnClutch","normalFactorToDecrement","normalFactor","ManualBox","isValidShift","changeRPM","getValueForNewRPM","SemiAutomaticBox","Car","currentDirectionTurn","currentTireRotation","rotationQuaternion","carPhysics","buildAmmoPhysics","engineCanApplyForce","setEngineForce","getEngineForce","getVelocity","turnOn","setSteeringRotation","positionAndRotation","updatePhysics","getDataToAnimate","getCurrentShift","GeneralPhysics","generateShape","setMargin","getMotionState","getWorldTransform","notifyObservers","velocityVector","velVectorBT","applyForce","CylinderPhysics","btCylinderShape","TrafficCone","RADIUS_TOP","RADIUS_BOTTOM","HEIGHT","geometry","undefined","load","material","map","materialBox","geometryPlane","box","cone","BoxPhysics","LevelFactory","level","physicsToUpdate","objectsToAnimate","createLevel0","forEach","phys","object","animate","height","pathTexture","normalMapPath","wrapS","wrapT","repeat","floorMaterial","normalTexture","normalMap","normalScale","rampa","quaternionRamp","setFromAxisAngle","rampPhysics","ramp","addToScene","conePhysics","attachObserver","createRectangle","createCone","VRButton","button","document","createElement","disableButton","style","display","cursor","left","onmouseenter","onmouseleave","onclick","stylizeElement","element","bottom","padding","border","borderRadius","background","font","textAlign","opacity","outline","zIndex","xr","isSessionSupported","then","supported","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","setSession","textContent","removeEventListener","requestSession","optionalFeatures","setItem","end","showEnterVR","xrSessionIsGranted","click","catch","exception","warn","message","isSecureContext","href","location","replace","innerHTML","textDecoration","test","userAgent","registerSessionGrantedListener","ThreeScene","state","gotAnyEvent","alpha","setSize","setClearColor","outputEncoding","clock","createAmmo","ambientLight","sunLight","animation","bind","handleWindowResize","generateEvents","mount","appendChild","body","createButton","enabled","e","removeInstance","event","numCamera","key","removeObserver","collisionConfiguratation","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","handleResize","render","getCameraInstance","deltaTime","getDelta","setAnimationLoop","stepSimulation","setPositionRelativeToObject","checkEvents","setState","getSpeed","top","fontWeight","parseInt","velocity","ref","Component","App","useEffect","title","ReactDOM","createRoot","getElementById"],"mappings":"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","file":"static/js/main.77dd950c.chunk.js","sourcesContent":["export default class GlobalControllerHandling{\r\n\r\n    \r\n    constructor(car){\r\n        this.car = car;\r\n    }\r\n\r\n\r\n    handleAccelerate(valueClutch, valueAccelerator){\r\n        this.car.accelerate(valueClutch, valueAccelerator);\r\n    }\r\n\r\n\r\n    handleBrake(valueClutch, valueBrake){\r\n        this.car.brake(valueClutch, valueBrake);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, valueShift){\r\n        this.car.changeShift(valueClutch, valueShift);\r\n    }\r\n\r\n\r\n    turnDirection(wheelAxesValue){\r\n        this.car.turnDirection(wheelAxesValue);\r\n    }\r\n\r\n\r\n    turnOnCar(){\r\n        this.car.turnOnCar();\r\n    }\r\n\r\n\r\n    updateCar(){\r\n        this.car.update();\r\n    }\r\n\r\n\r\n    changeShiftBox(mode){\r\n        this.car.changeShiftBox(mode);\r\n    }\r\n}","//Methods to override. This is an interface but can not be declared as interface in JS.\r\nexport default class Observer{\r\n\r\n    constructor(){\r\n        this.observedState = null;\r\n    }\r\n\r\n    update(newState){\r\n        this.observedState = newState;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\nconst Y_DISTANCE = 0.6;\r\nconst Z_DISTANCE = -0.1;\r\nconst X_DISTANCE = 0.35;\r\nexport default class Camera extends Observer{\r\n\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.group =  new THREE.Object3D();\r\n        this.group180Rot = new THREE.Object3D().add(this.camera);\r\n        this.group.add(this.group180Rot);\r\n        this.renderer = renderer;\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(X_DISTANCE, Y_DISTANCE, Z_DISTANCE);\r\n        if(this.observedState != null){\r\n            cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.group.position.copy(this.observedState.position).add(cameraOffset);\r\n            \r\n            if (localStorage.getItem(\"VR\") == \"true\"){\r\n                let offsetVectorCamera = new Vector3(0,-1.55,0); //Offset to be in place for driver's seat\r\n                offsetVectorCamera.applyQuaternion(this.observedState.rotation);\r\n                this.group.position.add(offsetVectorCamera);\r\n                this.group.setRotationFromQuaternion(this.observedState.rotation);\r\n                this.group180Rot.setRotationFromAxisAngle(new Vector3(0,1,0), Math.PI);\r\n                this.camera.lookAt(new Vector3(0,0,5));\r\n            }else{\r\n                let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n                let offsetVector = new Vector3(0,0,5);\r\n                offsetVector.applyQuaternion(this.observedState.rotation);\r\n                positionToLookAt.x += offsetVector.x;\r\n                positionToLookAt.y += offsetVector.y;\r\n                positionToLookAt.z += offsetVector.z;\r\n                this.camera.lookAt(positionToLookAt);\r\n            }\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,5));\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\n\r\nexport default class CarOffsetCamera extends Observer{\r\n\r\n\r\n    constructor(positionCamera){\r\n        super();\r\n        this.positionCamera = positionCamera;\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n    }\r\n\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n\r\n    setPositionRelativeToObject(){\r\n        const cameraOffset = new Vector3(this.positionCamera.x, this.positionCamera.y, this.positionCamera.z);\r\n        if(this.observedState != null){\r\n            let cameraOffsetRotated = cameraOffset.applyQuaternion(this.observedState.rotation);\r\n            this.camera.position.copy(this.observedState.position).add(cameraOffsetRotated);\r\n            let positionToLookAt = new Vector3(this.observedState.position.x, this.observedState.position.y, this.observedState.position.z);\r\n            this.camera.lookAt(positionToLookAt);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n            this.camera.position.copy(cameraOffset);\r\n        }\r\n    }\r\n\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport Observer from '../ObserverPattern/Observer';\r\n\r\n\r\nexport default class OrbitalCamera extends Observer{\r\n\r\n    constructor(renderer){\r\n        super();\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\r\n        this.renderer = renderer;\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.enableDamping = true;\r\n        this.controls.dampingFactor = 0.25;\r\n        this.controls.enableZoom = true;\r\n        this.camera.position.set(0,5.5,0);\r\n    }\r\n\r\n    handleResize(){\r\n        this.camera.aspect = window.innerWidth/window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    getCameraInstance(){\r\n        return this.camera;\r\n    }\r\n\r\n    setPositionRelativeToObject(){\r\n        this.controls.update();\r\n        if(this.observedState != null){\r\n            this.camera.lookAt(this.observedState[\"position\"]);\r\n        }else{\r\n            this.camera.lookAt(new Vector3(0,0,0));\r\n        }\r\n    }\r\n}","import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport Observer from \"../ObserverPattern/Observer\"\r\n\r\nexport default class VisualEntity extends Observer{\r\n\r\n    constructor(pathToTexture){\r\n        super();\r\n        this.fbxLoader = new FBXLoader();\r\n        this.gltfLoader = new GLTFLoader()\r\n        this.threeDModel = null;\r\n        this.pathToTexture = pathToTexture;\r\n    }\r\n\r\n    async loadFBX(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.fbxLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n        \r\n    }\r\n\r\n    async loadGLTF(){\r\n        let pathToTexture = this.pathToTexture;\r\n        const result = await this.gltfLoader.loadAsync( \r\n            pathToTexture, \r\n            function ( threeDObject ) {\r\n                return threeDObject;\r\n            }\r\n        );\r\n        return result;\r\n\r\n    }\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            let modelVariable;\r\n            try{\r\n                modelVariable =  await this.loadFBX();\r\n                this.threeDModel = modelVariable;\r\n            }catch(e){\r\n                modelVariable =  await this.loadGLTF();\r\n                this.threeDModel = modelVariable.scene;\r\n            }\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.x = position[0];\r\n            this.threeDModel.position.y = position[1];\r\n            this.threeDModel.position.z = position[2];\r\n            this.threeDModel.scale.x = scale[0];\r\n            this.threeDModel.scale.y = scale[1];\r\n            this.threeDModel.scale.z = scale[2];\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    getModel(){\r\n        return this.threeDModel;\r\n    }\r\n\r\n    //Abstract Method\r\n    animate(){\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { Vector3 } from 'three';\r\nimport * as THREE from 'three';\r\nimport VisualEntity from './VisualEntity';\r\n\r\nconst SCALE = [1.0, 1.0, 1.0];\r\nconst POSITION = [0,0,0];\r\nconst MAX_TIRE_TURN_IN_RADS = 0.75;\r\nconst FACTOR_KMH_TO_MS = 1/3600;\r\nconst VELOCITY_TO_ANGULAR_VEL = 1/0.25; //Velocity/Radius\r\nconst STEERING_WHEEL_INITIAL_ROTATION_ON_X = -0.35;\r\n\r\nexport default class CarModel extends VisualEntity{\r\n    \r\n    \r\n    constructor(){\r\n        super('res/models/source/AutoConInterior.gltf');\r\n        this.carModel = null;\r\n        this.carLogic = null;\r\n        this.lastValueRotation = 0;\r\n        this.currentSpeedRotation = 0;\r\n        this.currentWheelRotation = 0;\r\n        this.lastSteeringRotation = 0;\r\n    }\r\n\r\n\r\n    async addToScene(scene){\r\n        await super.addToScene(scene, \"driverCar\", POSITION, SCALE);\r\n        //this.addPhysicsView(scene)\r\n        \r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.moveCar();\r\n        //this.watchPhysicsColliders();\r\n    }\r\n\r\n\r\n    addPhysicsView(scene){\r\n        this.physicsShape = new Vector3(2,1.35,5);\r\n        \r\n        const Geometry = new THREE.BoxGeometry( this.physicsShape.x, this.physicsShape.y, this.physicsShape.z);\r\n        const texture = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\r\n        this.PHYSICSSQUARE = new THREE.Mesh( Geometry, texture );\r\n        this.PHYSICSSQUARE.position.set (0,0,0);\r\n        scene.add(this.PHYSICSSQUARE);\r\n\r\n        const GeometryRueda = new THREE.CylinderGeometry( 0.35, 0.35, 0.35, 32, 32);\r\n        GeometryRueda.rotateZ(Math.PI / 2);\r\n        const textureRueda = new THREE.MeshBasicMaterial( {color: 0xff0000} );\r\n        this.wheelMesh1 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh1.position.set (0,4,0);\r\n        scene.add(this.wheelMesh1);\r\n\r\n        this.wheelMesh2 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh2.position.set (0,4,0);\r\n        scene.add(this.wheelMesh2);\r\n\r\n        this.wheelMesh3 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh3.position.set (0,4,0);\r\n        scene.add(this.wheelMesh3);\r\n\r\n        this.wheelMesh4 =  new THREE.Mesh( GeometryRueda, textureRueda );\r\n        this.wheelMesh4.position.set (0,4,0);\r\n        scene.add(this.wheelMesh4);\r\n    }\r\n\r\n    //Only for debug purpose2\r\n    watchPhysicsColliders(){\r\n        \r\n        if(this.observedState != null){\r\n            this.PHYSICSSQUARE.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            this.PHYSICSSQUARE.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh1.position.set(\r\n                this.observedState.wheelsData[0][\"position\"].x, \r\n                this.observedState.wheelsData[0][\"position\"].y, \r\n                this.observedState.wheelsData[0][\"position\"].z\r\n            );\r\n            this.wheelMesh1.quaternion.set(\r\n                this.observedState.wheelsData[0][\"rotation\"].x, \r\n                this.observedState.wheelsData[0][\"rotation\"].y, \r\n                this.observedState.wheelsData[0][\"rotation\"].z, \r\n                this.observedState.wheelsData[0][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh2.position.set(\r\n                this.observedState.wheelsData[1][\"position\"].x, \r\n                this.observedState.wheelsData[1][\"position\"].y, \r\n                this.observedState.wheelsData[1][\"position\"].z\r\n            );\r\n            this.wheelMesh2.quaternion.set(\r\n                this.observedState.wheelsData[1][\"rotation\"].x, \r\n                this.observedState.wheelsData[1][\"rotation\"].y, \r\n                this.observedState.wheelsData[1][\"rotation\"].z, \r\n                this.observedState.wheelsData[1][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh3.position.set(\r\n                this.observedState.wheelsData[2][\"position\"].x, \r\n                this.observedState.wheelsData[2][\"position\"].y, \r\n                this.observedState.wheelsData[2][\"position\"].z\r\n            );\r\n            this.wheelMesh3.quaternion.set(\r\n                this.observedState.wheelsData[2][\"rotation\"].x, \r\n                this.observedState.wheelsData[2][\"rotation\"].y, \r\n                this.observedState.wheelsData[2][\"rotation\"].z, \r\n                this.observedState.wheelsData[2][\"rotation\"].w\r\n            );\r\n\r\n            this.wheelMesh4.position.set(\r\n                this.observedState.wheelsData[3][\"position\"].x, \r\n                this.observedState.wheelsData[3][\"position\"].y, \r\n                this.observedState.wheelsData[3][\"position\"].z\r\n            );\r\n            this.wheelMesh4.quaternion.set(\r\n                this.observedState.wheelsData[3][\"rotation\"].x, \r\n                this.observedState.wheelsData[3][\"rotation\"].y, \r\n                this.observedState.wheelsData[3][\"rotation\"].z, \r\n                this.observedState.wheelsData[3][\"rotation\"].w\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    moveCar(){\r\n        if(this.observedState != null){\r\n            this.threeDModel.userData.physicsBody = this.observedState[\"physicsBody\"];\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n            this.lastValueRotation = this.observedState[\"direction\"];\r\n            this.rotateWheels();\r\n            this.rotateSteeringWheel();\r\n        }\r\n    }\r\n\r\n\r\n    rotateSteeringWheel(){\r\n        let steeringWheel = this.threeDModel.children.find(o => o.name === 'Steering_Wheel');\r\n        let vectorRotation = new Vector3(0,0,1).applyAxisAngle(new Vector3(1,0,0), STEERING_WHEEL_INITIAL_ROTATION_ON_X);\r\n        steeringWheel.rotateOnAxis(vectorRotation, -this.lastSteeringRotation);\r\n        steeringWheel.rotateOnAxis(vectorRotation, -this.observedState['lastRotationWheel']*540/360*Math.PI*2);\r\n        this.lastSteeringRotation = -this.observedState['lastRotationWheel']*540/360*Math.PI*2;\r\n    }\r\n\r\n\r\n    rotateWheels(){\r\n        let wheelFrontRight = this.threeDModel.children.find(o => o.name === 'wheel002');\r\n        let wheelFrontLeft = this.threeDModel.children.find(o => o.name === 'wheel');\r\n        let wheelBackRight = this.threeDModel.children.find(o => o.name === 'wheel003');\r\n        let wheelBackLeft = this.threeDModel.children.find(o => o.name === 'wheel001');\r\n\r\n        let rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation\r\n        );\r\n        let rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation\r\n        );\r\n\r\n        //Resetting position in direction\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, this.currentWheelRotation);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, this.currentWheelRotation);\r\n        \r\n        //Moving by rotation caused by speed.\r\n        wheelFrontLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelFrontRight.rotateX(-this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackRight.rotateX(-this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n        wheelBackLeft.rotateX(this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL);\r\n\r\n        rotationYVectorTwo = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            this.currentSpeedRotation + this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n        rotationYVectorOne = new Vector3(0,1,0).applyAxisAngle(\r\n            new Vector3(1,0,0), \r\n            -this.currentSpeedRotation - this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL\r\n        );\r\n\r\n        //Moving to the sides based on steering wheel value\r\n        wheelFrontLeft.rotateOnAxis(rotationYVectorOne, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        wheelFrontRight.rotateOnAxis(rotationYVectorTwo, -this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS);\r\n        this.currentWheelRotation = this.observedState['lastRotationWheel']*MAX_TIRE_TURN_IN_RADS;\r\n\r\n        this.currentSpeedRotation += this.observedState['velocity'] * FACTOR_KMH_TO_MS * VELOCITY_TO_ANGULAR_VEL;\r\n        if(this.currentSpeedRotation >= Math.PI*2){\r\n            this.currentSpeedRotation -= Math.PI*2;\r\n        }\r\n    }\r\n}","const { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst DPAD_NOT_PRESSED = 1.2857143878936768;\r\nconst DPAD_UP = -1;\r\nconst DPAD_UP_PRESSED = 0;\r\nconst DPAD_DOWN = 0.14285719394683838;\r\nconst DPAD_DOWN_PRESSED = 1;\r\nconst DPAD_LEFT = 0.7142857313156128;\r\nconst DPAD_LEFT_PRESSED = 2;\r\nconst DPAD_RIGHT = -0.4285714030265808;\r\nconst DPAD_RIGHT_PRESSED = 3;\r\n\r\n\r\nclass LogitechG29Controller{\r\n    constructor(carLogic){\r\n        this.carLogic = carLogic;\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonX = 0;\r\n        this.buttonSquare = 1;\r\n        this.buttonCircle = 2;\r\n        this.buttonTriangle = 3;\r\n        this.bumperRight = 4;\r\n        this.bumperLeft = 5;\r\n        this.buttonR2 = 6;\r\n        this.buttonL2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionsButton = 9;\r\n        this.buttonR3 = 10;\r\n        this.buttonL3 = 11;\r\n        this.firstShift = 12;\r\n        this.secondShift = 13;\r\n        this.thirdShift = 14;\r\n        this.fourthShift = 15;\r\n        this.fifthShift = 16;\r\n        this.sixthShift = 17;\r\n        this.reverseShift = 18;\r\n        this.buttonPlus = 19;\r\n        this.buttonMinus = 20;\r\n        this.wheelInEnterRight = 21;\r\n        this.wheelInEnterLeft = 22;\r\n        this.enter = 23;\r\n        this.psButton = 24;\r\n\r\n        this.buttonsPressed = [];\r\n        for(let i=0; i <= 24; i++){\r\n            this.buttonsPressed.push(false);\r\n        }\r\n\r\n        this.wheelAxes = 0;\r\n        this.clutch = 1;\r\n        this.accelerator = 2;\r\n        this.brake = 5;\r\n        this.DPad = 9;\r\n\r\n        //This is conveniently defined by using distances if needed, it is not exact.\r\n        this.valueDpadUP = DPAD_UP;\r\n        this.valueDpadDOWN = DPAD_DOWN;\r\n        this.valueDpadLEFT = DPAD_LEFT;\r\n        this.valueDpadRIGHT = DPAD_RIGHT;\r\n\r\n        this.dpadPressed = [];\r\n        for(let i=0; i <= 3; i++){\r\n            this.dpadPressed.push(false);\r\n        }\r\n        \r\n        this.globalControllerHandler = new GlobalControllerHandling(carLogic);\r\n    }\r\n\r\n    \r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('G29 Driving Force Racing Wheel')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n\r\n    doActionsPedals(){\r\n        let clutch = ((this.gamepad.axes[this.clutch] )**3);\r\n        let brake = ((this.gamepad.axes[this.brake] )**3);\r\n        brake = (1 - (brake + 1) / 2);\r\n        let accelerator = ((this.gamepad.axes[this.accelerator] )**3);\r\n        accelerator = (1 - (accelerator + 1) / 2);\r\n        this.globalControllerHandler.handleAccelerate(clutch, accelerator);\r\n        this.globalControllerHandler.handleBrake(clutch, brake);\r\n    }\r\n\r\n\r\n    doActionsWheel(){\r\n        this.globalControllerHandler.turnDirection(this.gamepad.axes[this.wheelAxes]);\r\n    }\r\n\r\n\r\n    doActionsDPad(){\r\n        if(this.gamepad.axes[this.DPad] !== DPAD_NOT_PRESSED){\r\n            \r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadDOWN && !this.dpadPressed[DPAD_DOWN_PRESSED]){\r\n                console.log(\"DPAD DOWN\");\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadDOWN){\r\n                this.dpadPressed[DPAD_DOWN_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadLEFT && !this.dpadPressed[DPAD_LEFT_PRESSED]){\r\n                console.log(\"DPAD LEFT\");\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadLEFT){\r\n                this.dpadPressed[DPAD_LEFT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadRIGHT && !this.dpadPressed[DPAD_RIGHT_PRESSED]){\r\n                console.log(\"DPAD RIGHT\");\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadRIGHT){\r\n                this.dpadPressed[DPAD_RIGHT_PRESSED] = false;\r\n            }\r\n\r\n            if(this.gamepad.axes[this.DPad] === this.valueDpadUP && !this.dpadPressed[DPAD_UP_PRESSED]){\r\n                console.log(\"DPAD UP\");\r\n                this.dpadPressed[DPAD_UP_PRESSED] = true;\r\n            }else if (this.gamepad.axes[this.DPad] !== this.valueDpadUP){\r\n                this.dpadPressed[DPAD_UP_PRESSED] = false;\r\n            }\r\n        }else{\r\n            for(let i = 0; i < this.dpadPressed.length; i++){\r\n                this.dpadPressed[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    doActionsButtons(){\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonsPressed[this.buttonX]) {\r\n            console.log(\"BOTON X\");\r\n            this.buttonsPressed[this.buttonX] = true\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonsPressed[this.buttonX] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonTriangle].pressed && !this.buttonsPressed[this.buttonTriangle]) {\r\n            console.log(\"BOTON TRIANGULO\");\r\n            this.buttonsPressed[this.buttonTriangle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonTriangle].pressed){\r\n            this.buttonsPressed[this.buttonTriangle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonCircle].pressed && !this.buttonsPressed[this.buttonCircle]) {\r\n            console.log(\"BOTON CIRCULO\");\r\n            this.buttonsPressed[this.buttonCircle] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonCircle].pressed){\r\n            this.buttonsPressed[this.buttonCircle] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonSquare].pressed && !this.buttonsPressed[this.buttonSquare]) {\r\n            console.log(\"BOTON CUADRADO\");\r\n            this.buttonsPressed[this.buttonSquare] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonSquare].pressed){\r\n            this.buttonsPressed[this.buttonSquare] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.psButton].pressed && !this.buttonsPressed[this.psButton]) {\r\n            this.carLogic.changeShiftBox(\"manual\");\r\n            this.buttonsPressed[this.psButton] = true;\r\n        }else if(!this.gamepad.buttons[this.psButton].pressed){\r\n            this.buttonsPressed[this.psButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonPlus].pressed && !this.buttonsPressed[this.buttonPlus]) {\r\n            console.log(\"BOTON +\");\r\n            this.buttonsPressed[this.buttonPlus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonPlus].pressed){\r\n            this.buttonsPressed[this.buttonPlus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonMinus].pressed && !this.buttonsPressed[this.buttonMinus]) {\r\n            console.log(\"BOTON -\");\r\n            this.buttonsPressed[this.buttonMinus] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonMinus].pressed){\r\n            this.buttonsPressed[this.buttonMinus] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed && !this.buttonsPressed[this.buttonL2]) {\r\n            console.log(\"BOTON L2\");\r\n            this.buttonsPressed[this.buttonL2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL2].pressed){\r\n            this.buttonsPressed[this.buttonL2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonsPressed[this.buttonL3]) {\r\n            console.log(\"BOTON L3\");\r\n            this.buttonsPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonsPressed[this.buttonL3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR2].pressed && !this.buttonsPressed[this.buttonR2]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonsPressed[this.buttonR2] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR2].pressed){\r\n            this.buttonsPressed[this.buttonR2] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonsPressed[this.buttonR3]) {\r\n            console.log(\"BOTON R3\");\r\n        this.buttonsPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonsPressed[this.buttonR3] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.enter].pressed && !this.buttonsPressed[this.enter]) {\r\n            console.log(\"BOTON ENTER\");\r\n            this.buttonsPressed[this.enter] = true;\r\n        }else if(!this.gamepad.buttons[this.enter].pressed){\r\n            this.buttonsPressed[this.enter] = false;\r\n        }\r\n        \r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonsPressed[this.shareButton]) {\r\n            console.log(\"BOTON SHARE\");\r\n            this.buttonsPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonsPressed[this.shareButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.optionsButton].pressed && !this.buttonsPressed[this.optionsButton]) {\r\n            console.log(\"BOTON OPTIONS\");\r\n            this.buttonsPressed[this.optionsButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionsButton].pressed){\r\n            this.buttonsPressed[this.optionsButton] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperLeft].pressed && !this.buttonsPressed[this.bumperLeft]) {\r\n            console.log(\"BOTON BUMPER LEFT\");\r\n            this.buttonsPressed[this.bumperLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperLeft].pressed){\r\n            this.buttonsPressed[this.bumperLeft] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.bumperRight].pressed && !this.buttonsPressed[this.bumperRight]) {\r\n            console.log(\"BOTON BUMPER RIGHT\");\r\n            this.buttonsPressed[this.bumperRight] = true;\r\n        }else if(!this.gamepad.buttons[this.bumperRight].pressed){\r\n            this.buttonsPressed[this.bumperRight] = false;\r\n        }\r\n\r\n\r\n        if (this.gamepad.buttons[this.wheelInEnterLeft].pressed && !this.buttonsPressed[this.wheelInEnterLeft]) {\r\n            console.log(\"RUEDA IZQ\");\r\n            this.buttonsPressed[this.wheelInEnterLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterLeft].pressed){\r\n            this.buttonsPressed[this.wheelInEnterLeft] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.wheelInEnterRight].pressed && !this.buttonsPressed[this.wheelInEnterRight]) {\r\n            console.log(\"RUEDA DER\");\r\n            this.buttonsPressed[this.wheelInEnterRight] = true;\r\n        }else if(!this.gamepad.buttons[this.wheelInEnterRight].pressed){\r\n            this.buttonsPressed[this.wheelInEnterRight] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionsShifter(){\r\n        if (this.gamepad.buttons[this.firstShift].pressed && !this.buttonsPressed[this.firstShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 1);\r\n            this.buttonsPressed[this.firstShift] = true;\r\n        }else if(!this.gamepad.buttons[this.firstShift].pressed && this.buttonsPressed[this.firstShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.firstShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.secondShift].pressed && !this.buttonsPressed[this.secondShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 2);\r\n            this.buttonsPressed[this.secondShift] = true;\r\n        }else if(!this.gamepad.buttons[this.secondShift].pressed && this.buttonsPressed[this.secondShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.secondShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.thirdShift].pressed && !this.buttonsPressed[this.thirdShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 3);\r\n            this.buttonsPressed[this.thirdShift] = true;\r\n        }else if(!this.gamepad.buttons[this.thirdShift].pressed && this.buttonsPressed[this.thirdShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.thirdShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fourthShift].pressed && !this.buttonsPressed[this.fourthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 4);\r\n            this.buttonsPressed[this.fourthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fourthShift].pressed && this.buttonsPressed[this.fourthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fourthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.fifthShift].pressed && !this.buttonsPressed[this.fifthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 5);\r\n            this.buttonsPressed[this.fifthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.fifthShift].pressed && this.buttonsPressed[this.fifthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.fifthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.sixthShift].pressed && !this.buttonsPressed[this.sixthShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 6);\r\n            this.buttonsPressed[this.sixthShift] = true;\r\n        }else if(!this.gamepad.buttons[this.sixthShift].pressed && this.buttonsPressed[this.sixthShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.sixthShift] = false;\r\n        }\r\n        if (this.gamepad.buttons[this.reverseShift].pressed && !this.buttonsPressed[this.reverseShift]) {\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], -1);\r\n            this.buttonsPressed[this.reverseShift] = true;\r\n        }else if(!this.gamepad.buttons[this.reverseShift].pressed && this.buttonsPressed[this.reverseShift]){\r\n            this.globalControllerHandler.changeShift(this.gamepad.axes[this.clutch], 0);\r\n            this.buttonsPressed[this.reverseShift] = false;\r\n        }\r\n    }\r\n\r\n\r\n    doActionByMapping(){\r\n        this.doActionsPedals();\r\n        this.doActionsWheel();\r\n        this.doActionsDPad();\r\n        this.doActionsButtons();\r\n        this.doActionsShifter();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default class LogitechG29ControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(carLogic) {\r\n        if (!LogitechG29ControllerSingleton.instance) {\r\n            LogitechG29ControllerSingleton.instance = new LogitechG29Controller(carLogic);\r\n        }\r\n        return LogitechG29ControllerSingleton.instance;\r\n    }\r\n}\r\n\r\n\r\n//module.exports = LogitechG29ControllerSingleton;","\r\nconst { default: GlobalControllerHandling } = require(\"./GlobalControllerHandling\");\r\n\r\nconst STICK_LIMIT = 0.1;\r\nconst CLUTCH_PRESED = 0;\r\nconst CLUTCH_NOT_PRESED = 1;\r\n\r\nclass XboxController{\r\n    constructor(auto){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        this.gamepad = null;\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n          if (gamepads[i]) {\r\n            if (gamepads[i].id.startsWith('Xbox')) {\r\n              this.gamepad = gamepads[i];\r\n            }\r\n          }\r\n        }\r\n        this.buttonA = 0;\r\n        this.buttonB = 1;\r\n        this.buttonX = 2;\r\n        this.buttonY = 3;\r\n        this.buttonL1 = 4;\r\n        this.buttonR1 = 5;\r\n        this.buttonL2 = 6;\r\n        this.buttonR2 = 7;\r\n        this.shareButton = 8;\r\n        this.optionButton = 9;\r\n        this.buttonL3 = 10;\r\n        this.buttonR3 = 11;\r\n        this.padUp = 12;\r\n        this.padDown = 13;\r\n        this.padLeft = 14;\r\n        this.padRight = 15;\r\n        this.buttomHome = 16;\r\n        this.buttonPressed = [];\r\n        this.actualShift = 0;\r\n        for(let i = 0; i <= 16; i++){\r\n            this.buttonPressed.push(false);\r\n        }\r\n        \r\n        this.xLeftAxe = 0;\r\n        this.yLeftAxe = 1;\r\n        this.xRightAxe = 2;\r\n        this.yRightAxe = 3;\r\n        this.globalControllerHandler = new GlobalControllerHandling(auto);\r\n    }\r\n\r\n    checkGamepadChanges(){\r\n        const gamepads = navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : []);\r\n        for (let i = 0; i < gamepads.length; i++) {\r\n            if (gamepads[i]) {\r\n              if (gamepads[i].id.startsWith('Xbox')) {\r\n                this.gamepad = gamepads[i];\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEvents(){\r\n        this.gamepad = null;\r\n        this.checkGamepadChanges();\r\n        if(this.gamepad != null){\r\n            this.doActionByMapping();\r\n        }\r\n        this.globalControllerHandler.updateCar();\r\n    }\r\n\r\n    doActionsAxes(){\r\n        if(Math.abs(this.gamepad.axes[this.yLeftAxe]) >= STICK_LIMIT){    \r\n           // console.log(\"Adelante/Abajo Joy Izq: \" + this.gamepad.axes[this.yLeftAxe]);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xLeftAxe]) >= STICK_LIMIT){\r\n            let axe = ((this.gamepad.axes[this.xLeftAxe] )**3)\r\n            this.globalControllerHandler.turnDirection(axe);\r\n            //console.log(\"Izq/Der Joy Izq: \" + this.gamepad.axes[this.xLeftAxe]);\r\n        }else{\r\n            this.globalControllerHandler.turnDirection(0);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.yRightAxe]) >= STICK_LIMIT){\r\n           // console.log(\"Adelante/Abajo Joy Der: \" + this.gamepad.axes[this.yRightAxe]);\r\n        }\r\n        if(Math.abs(this.gamepad.axes[this.xRightAxe]) >= STICK_LIMIT){\r\n           // console.log(\"Izq/Der Joy Der: \" + this.gamepad.axes[this.xRightAxe]);\r\n        }\r\n    }\r\n\r\n    doActionHotKeys(){\r\n        this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n        this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n    }\r\n\r\n    doActionsTriggers(){\r\n        if (this.gamepad.buttons[this.buttonR2].pressed) {\r\n            //console.log(this.gamepad.buttons[this.buttonR2]);\r\n            //this.globalControllerHandler.handleAccelerate(CLUTCH_NOT_PRESED, this.gamepad.buttons[this.buttonR2].value);\r\n            console.log(\"accelerator: \" + this.gamepad.buttons[this.buttonR2].value);\r\n            //this.auto.acelerar();\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL2].pressed) {\r\n            //this.globalControllerHandler.handleBrake(CLUTCH_PRESED, this.gamepad.buttons[this.buttonL2].value);\r\n            //console.log(\"Break: \" + this.gamepad.buttons[this.buttonL2].value);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    doActionsButtons(){\r\n        \r\n        if (this.gamepad.buttons[this.buttonR1].pressed && !this.buttonPressed[this.buttonR1]) {\r\n            //console.log(\"Aumento de marcha (R1)\");\r\n            if(this.actualShift <= 5){\r\n                this.actualShift += 1;\r\n                console.log(\"Marcha Actual: \" + this.actualShift)\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonR1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR1].pressed){\r\n            \r\n            this.buttonPressed[this.buttonR1] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL1].pressed && !this.buttonPressed[this.buttonL1]) {\r\n            //console.log(\"reduccion de marcha (L1)\");\r\n            if(this.actualShift >= 0){\r\n                this.actualShift -= 1;\r\n                console.log(\"Marcha Actual: \" + this.actualShift)\r\n                this.globalControllerHandler.changeShift(CLUTCH_PRESED, this.actualShift);\r\n            }\r\n            this.buttonPressed[this.buttonL1] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL1].pressed){\r\n            this.buttonPressed[this.buttonL1] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.shareButton].pressed && !this.buttonPressed[this.shareButton]) {\r\n            console.log(\"shareButton\");\r\n            this.buttonPressed[this.shareButton] = true;\r\n        }else if(!this.gamepad.buttons[this.shareButton].pressed){\r\n            this.buttonPressed[this.shareButton] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            console.log(\"padUp\");\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            console.log(\"padDown\");\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            console.log(\"padLeft\");\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            console.log(\"padRight\");\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonA].pressed && !this.buttonPressed[this.buttonA]) {\r\n            console.log(\"buttonA\");\r\n            this.buttonPressed[this.buttonA] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonA].pressed){\r\n            this.buttonPressed[this.buttonA] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonB].pressed && !this.buttonPressed[this.buttonB]) {\r\n            console.log(\"buttonB\");\r\n            this.buttonPressed[this.buttonB] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonB].pressed){\r\n            this.buttonPressed[this.buttonB] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonY].pressed && !this.buttonPressed[this.buttonY]) {\r\n            console.log(\"buttonY\");\r\n            this.buttonPressed[this.buttonY] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonY].pressed){\r\n            this.buttonPressed[this.buttonY] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonX].pressed && !this.buttonPressed[this.buttonX]) {\r\n            console.log(\"buttonX\");\r\n            this.buttonPressed[this.buttonX] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonX].pressed){\r\n            this.buttonPressed[this.buttonX] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonR3].pressed && !this.buttonPressed[this.buttonR3]) {\r\n            console.log(\"buttonR3\");\r\n            this.buttonPressed[this.buttonR3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonR3].pressed){\r\n            this.buttonPressed[this.buttonR3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.buttonL3].pressed && !this.buttonPressed[this.buttonL3]) {\r\n            console.log(\"buttonL3\");\r\n            this.buttonPressed[this.buttonL3] = true;\r\n        }else if(!this.gamepad.buttons[this.buttonL3].pressed){\r\n            this.buttonPressed[this.buttonL3] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padUp].pressed && !this.buttonPressed[this.padUp]) {\r\n            console.log(\"padUp\");\r\n            this.buttonPressed[this.padUp] = true;\r\n        }else if(!this.gamepad.buttons[this.padUp].pressed){\r\n            this.buttonPressed[this.padUp] = false;\r\n        }\r\n\r\n        if (this.gamepad.buttons[this.padDown].pressed && !this.buttonPressed[this.padDown]) {\r\n            console.log(\"padDown\");\r\n            this.buttonPressed[this.padDown] = true;\r\n        }else if(!this.gamepad.buttons[this.padDown].pressed){\r\n            this.buttonPressed[this.padDown] = false;\r\n        }\r\n\r\n        \r\n        if (this.gamepad.buttons[this.padLeft].pressed && !this.buttonPressed[this.padLeft]) {\r\n            console.log(\"padLeft\");\r\n            this.buttonPressed[this.padLeft] = true;\r\n        }else if(!this.gamepad.buttons[this.padLeft].pressed){\r\n            this.buttonPressed[this.padLeft] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.padRight].pressed && !this.buttonPressed[this.padRight]) {\r\n            console.log(\"padRight\");\r\n            this.buttonPressed[this.padRight] = true;\r\n        }else if(!this.gamepad.buttons[this.padRight].pressed){\r\n            this.buttonPressed[this.padRight] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.buttomHome].pressed && !this.buttonPressed[this.buttomHome]) {\r\n            console.log(\"Menu\");\r\n            this.globalControllerHandler.changeShiftBox(\"semi-auto\");\r\n            this.buttonPressed[this.buttomHome] = true;\r\n        }else if(!this.gamepad.buttons[this.buttomHome].pressed){\r\n            this.buttonPressed[this.buttomHome] = false;\r\n        }\r\n        \r\n        if (this.gamepad.buttons[this.optionButton].pressed && !this.buttonPressed[this.optionButton]) {\r\n            this.globalControllerHandler.turnOnCar();\r\n            this.buttonPressed[this.optionButton] = true;\r\n        }else if(!this.gamepad.buttons[this.optionButton].pressed){\r\n            this.buttonPressed[this.optionButton] = false;\r\n        }\r\n    }\r\n\r\n    doActionByMapping(){\r\n        this.doActionHotKeys();\r\n        this.doActionsAxes();\r\n        this.doActionsTriggers();\r\n        this.doActionsButtons();\r\n    }\r\n}\r\n\r\nexport default class XboxControllerSingleton{\r\n\r\n    static instance;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static getInstance(auto) {\r\n        if (!XboxControllerSingleton.instance) {\r\n            XboxControllerSingleton.instance = new XboxController(auto);\r\n        }\r\n        return XboxControllerSingleton.instance;\r\n    }\r\n}","export default class Observable{\r\n\r\n    constructor(){\r\n        this.observers = [];\r\n    }\r\n\r\n    attachObserver(observer){\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    removeObserver(observer){\r\n        let index = this.observers.indexOf(observer);\r\n        if(index > -1){\r\n            this.observers.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    notifyObservers(stateToSend){\r\n        for (let i = 0; i < this.observers.length; i++){\r\n            this.observers[i].update(stateToSend);\r\n        }\r\n    }\r\n}","import Ammo from 'ammo.js'\r\n\r\nexport default class AmmoInstance{\r\n\r\n    static AmmoInstanceToReturn = null;\r\n\r\n    constructor() {\r\n        throw new Error('Can not construct singleton. Call get instance instead.');\r\n    }\r\n\r\n    static async getInstance(){\r\n        if(!AmmoInstance.AmmoInstanceToReturn){\r\n            AmmoInstance.AmmoInstanceToReturn = await Ammo();\r\n        }\r\n        return AmmoInstance.AmmoInstanceToReturn;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst FRONT_LEFT = 0;\r\nconst FRONT_RIGHT = 1;\r\nconst BACK_LEFT = 2;\r\nconst BACK_RIGHT = 3;\r\n\r\nconst SIDE_RIGHT =-1;\r\nconst SIDE_LEFT = 1;\r\nconst MAX_STEER = -0.5;\r\n\r\nconst MAX_FRICTION_FORCE = 100;\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\nexport default class CarPhysics{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction *10);\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        this.tuning = new this.Ammo.btVehicleTuning();\r\n        var rayCaster = new this.Ammo.btDefaultVehicleRaycaster(this.physicsWorld);\r\n        this.vehicle = new this.Ammo.btRaycastVehicle(this.tuning, this.rigidBody, rayCaster);\r\n        this.vehicle.setCoordinateSystem(0, 1, 2);\r\n        this.physicsWorld.addAction(this.vehicle);\r\n\r\n        let radio_rueda = 0.35;\r\n        let disti_center = 0.85;\r\n        var wheelAxisPositionBack = -1.45;\r\n        var wheelRadiusBack = radio_rueda;\r\n        var wheelWidthBack = 0.35;\r\n        var wheelHalfTrackBack = -disti_center;\r\n        var wheelAxisHeightBack = 0.2;\r\n\r\n        var wheelAxisFrontPosition = 1.65;\r\n        var wheelHalfTrackFront = disti_center;\r\n        var wheelAxisHeightFront = 0.2;\r\n        var wheelRadiusFront = radio_rueda;\r\n        var wheelWidthFront = 0.35;\r\n\r\n\r\n        this.addWheel(true, new this.Ammo.btVector3(wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_LEFT,SIDE_LEFT);\r\n        this.addWheel(true, new this.Ammo.btVector3(-wheelHalfTrackFront, wheelAxisHeightFront, wheelAxisFrontPosition), wheelRadiusFront, wheelWidthFront, FRONT_RIGHT,SIDE_RIGHT);\r\n        this.addWheel(false, new this.Ammo.btVector3(-wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_LEFT,SIDE_LEFT);\r\n        this.addWheel(false, new this.Ammo.btVector3(wheelHalfTrackBack, wheelAxisHeightBack, wheelAxisPositionBack), wheelRadiusBack, wheelWidthBack, BACK_RIGHT,SIDE_RIGHT);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    addWheel(isFront, pos, radius, width, index, side) {\r\n        var wheelDirectionCS0 = new this.Ammo.btVector3(0, -1, 0);\r\n        var wheelAxleCS = new this.Ammo.btVector3(-1, 0, 0);\r\n        var suspensionStiffness = 2.0;\r\n        var suspensionRestLength = 0.6;\r\n        var rollInfluence = 0.2;\r\n        var friction = 1000;\r\n        var suspensionDamping = 3.3;\r\n        var suspensionCompression = 4.4;\r\n        var wheelInfo = this.vehicle.addWheel(\r\n            pos,\r\n            wheelDirectionCS0,\r\n            wheelAxleCS,\r\n            suspensionRestLength,\r\n            radius,\r\n            this.tuning,\r\n            isFront\r\n        );\r\n\r\n        wheelInfo.set_m_suspensionStiffness(suspensionStiffness);\r\n        wheelInfo.set_m_wheelsDampingRelaxation(suspensionDamping);\r\n        wheelInfo.set_m_wheelsDampingCompression(suspensionCompression);\r\n        wheelInfo.set_m_frictionSlip(friction);\r\n        wheelInfo.set_m_rollInfluence(rollInfluence);\r\n\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let returnValue = {\r\n            \"chassis\": {\r\n                \"position\": null,\r\n                \"rotation\": null,\r\n            },\r\n            \"wheels\": []\r\n        }\r\n        for (let i=0; i < this.vehicle.getNumWheels(); i++){\r\n            this.vehicle.updateWheelTransform(i, true);\r\n            let transfMatrix = this.vehicle.getWheelTransformWS(i);\r\n            let position = transfMatrix.getOrigin();\r\n            let rotation = transfMatrix.getRotation();\r\n            returnValue.wheels.push({\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            });\r\n        }\r\n        let worldTransformChassis = this.vehicle.getChassisWorldTransform();\r\n            \r\n        let position = worldTransformChassis.getOrigin();\r\n        let rotation = worldTransformChassis.getRotation();\r\n        returnValue.chassis = {\r\n            \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n            \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n        };\r\n        return returnValue;\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n\r\n    \r\n    setEngineForce( engineForce ){\r\n        this.vehicle.applyEngineForce( engineForce, BACK_LEFT );\r\n        this.vehicle.applyEngineForce( engineForce, BACK_RIGHT );\r\n    }\r\n\r\n\r\n    brake(valueBrake){\r\n        let speedKMH = Math.abs(this.vehicle.getCurrentSpeedKmHour());\r\n        let frictionBrake = MAX_FRICTION_FORCE / ( speedKMH );\r\n        if( speedKMH === 0 ){\r\n            frictionBrake = 0;\r\n        }\r\n        valueBrake += frictionBrake;\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_LEFT);\r\n        this.vehicle.setBrake(valueBrake/2, FRONT_RIGHT);\r\n        this.vehicle.setBrake(valueBrake, BACK_LEFT);\r\n        this.vehicle.setBrake(valueBrake, BACK_RIGHT);\r\n    }\r\n\r\n\r\n    setSteeringRotation( rotation ){\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_LEFT);\r\n        this.vehicle.setSteeringValue(rotation * MAX_STEER, FRONT_RIGHT);\r\n    }\r\n\r\n\r\n    getVelocity(){\r\n        return this.vehicle.getCurrentSpeedKmHour();\r\n    }\r\n}","export const MAX_RPM = 8000;\r\nconst ACCEL_COEF = 2;\r\nconst BRAKE_COEF = 1.5;\r\nexport const EXPONENTIAL_COEF_TO_RPM = 200;\r\n\r\nexport class AbstractEngineState{\r\n    changeValueInRPMCurve(valuePedal, accelerating, currentRPM, currentXInRPMCurve){\r\n\r\n        let sumToValueInCurve;\r\n        let previousRPM = currentRPM;\r\n        if(accelerating){\r\n            let normalizedAccelerator = valuePedal;\r\n            //let normalizedAccelerator = (1 - (valuePedal + 1) / 2);\r\n            let normalizedRPM = previousRPM/MAX_RPM;\r\n            sumToValueInCurve = (normalizedAccelerator - normalizedRPM) * ACCEL_COEF;\r\n        }else{\r\n            sumToValueInCurve = -valuePedal * BRAKE_COEF;\r\n        }\r\n        currentXInRPMCurve = currentXInRPMCurve + sumToValueInCurve;\r\n        if (currentXInRPMCurve > 3 * EXPONENTIAL_COEF_TO_RPM){\r\n            currentXInRPMCurve = 3 * EXPONENTIAL_COEF_TO_RPM;\r\n        }\r\n        else if(currentXInRPMCurve < 0){ //X's value is not able to have negative value in our calculation.\r\n            currentXInRPMCurve = 0;\r\n        }\r\n\r\n        //We'll simulate the RPM's in an equation similar to capacitors in order to not make it linear and make it independent of everything.\r\n        currentRPM = MAX_RPM * (1 - Math.exp(-currentXInRPMCurve/EXPONENTIAL_COEF_TO_RPM));\r\n\r\n        return [currentRPM, currentXInRPMCurve];\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nconst ACCEL_NOT_PRESSED = 0;\r\n\r\nexport default class TurnedOffEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(ACCEL_NOT_PRESSED, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n}","import {AbstractEngineState} from \"./AbstractEngineState\";\r\n\r\nexport default class TurnedOnEngine extends AbstractEngineState{\r\n\r\n    accelerate(valueAccelerator, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueAccelerator, true, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n    brake(valueBrake, currentRPM, currentXInRPMCurve){\r\n        return this.changeValueInRPMCurve(valueBrake, false, currentRPM, currentXInRPMCurve);\r\n    }\r\n\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from './CarEngineStates/AbstractEngineState';\r\nimport TurnedOffEngine from './CarEngineStates/TurnedOffEngine';\r\nimport TurnedOnEngine from './CarEngineStates/TurnedOnEngine';\r\n\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 0;//1000\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = 0.25;\r\n\r\nexport default class CarEngine{\r\n\r\n\r\n    constructor(){\r\n        this.engineState = new TurnedOffEngine();\r\n        this.currentRPM = 0;\r\n        this.currentXInRPMCurve = 0;\r\n    }\r\n\r\n\r\n    turnOn(){\r\n        this.engineState = new TurnedOnEngine();\r\n    }\r\n\r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    handleEngineShutdown(valueClutch,shiftBox){\r\n        //!this.clutchIsPressed(valueClutch) && this.currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN\r\n        if(shiftBox.shutDownEngine(valueClutch,this.currentRPM)){\r\n            if(this.engineState instanceof TurnedOnEngine){\r\n                this.engineState = new TurnedOffEngine();\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    isInConditionToAccelerate(valueClutch){\r\n        return ((this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch)) || this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    engineCanApplyForce(valueClutch){\r\n        return (this.currentRPM >= MIN_RPM_TO_AVOID_SHUTDOWN && !this.clutchIsPressed(valueClutch));\r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator, shiftBox){\r\n        let rpmReturn = this.engineState.accelerate(valueAccelerator, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake,shiftBox){\r\n        let rpmReturn = this.engineState.brake(valueBrake, this.currentRPM, this.currentXInRPMCurve);\r\n        this.currentRPM = rpmReturn[0];\r\n        this.currentXInRPMCurve = rpmReturn[1];\r\n        this.handleEngineShutdown(valueClutch,shiftBox);\r\n    }\r\n\r\n\r\n    changeRPM(RPMModification){\r\n        this.currentRPM = RPMModification;\r\n        if( (-this.currentRPM/MAX_RPM + 1) > 0 ){\r\n            this.currentXInRPMCurve = -Math.log( -this.currentRPM/MAX_RPM + 1) * EXPONENTIAL_COEF_TO_RPM;\r\n            if(this.currentXInRPMCurve < 0){\r\n                this.currentXInRPMCurve = 0;\r\n            }\r\n        }else if(this.currentRPM === MAX_RPM){\r\n            this.currentXInRPMCurve = EXPONENTIAL_COEF_TO_RPM * 3;\r\n        }\r\n    }\r\n\r\n\r\n    getCurrentRPM(){\r\n        return this.currentRPM;\r\n    }\r\n}","import { EXPONENTIAL_COEF_TO_RPM, MAX_RPM } from \"./CarEngineStates/AbstractEngineState\";\r\n\r\n\r\nconst QUANTITY_SHIFTS = 6;\r\nconst MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN = -0.75;\r\n\r\nexport default class ShiftBox{\r\n\r\n    constructor(carEngine){\r\n        this.NEUTRAL = 0;\r\n        this.REVERSE = -1;\r\n        this.FIRST = 1;\r\n        this.SECOND = 2;\r\n        this.THIRD = 3;\r\n        this.FOURTH = 4;\r\n        this.FIFTH = 5;\r\n        this.SIXTH = 6;\r\n        this.validShifts = [this.REVERSE, this.NEUTRAL, this.FIRST, this.SECOND, this.THIRD, this.FOURTH, this.FIFTH, this.SIXTH];\r\n\r\n        this.currentShift = this.NEUTRAL;\r\n        this.carEngine = carEngine;\r\n\r\n        this.minimumVelocityOnShift = [0, 10, 20, 35, 60, 90];\r\n        this.maximumVelocityOnShift = [40, 60, 80, 110, 140, 200];\r\n\r\n    }\r\n\r\n    isValidShift(shift){\r\n        if (this.validShifts.indexOf(shift) >= 0){\r\n            return true;\r\n        }else{\r\n            throw new Error(\"Shift \" + shift + \" is not valid.\");\r\n        }\r\n    }\r\n    \r\n\r\n    calculateNormalFactorRPM(newShift,oldVelocity){\r\n        return ((oldVelocity - this.minimumVelocityOnShift[Math.abs(newShift) - 1]) / \r\n            (this.maximumVelocityOnShift[Math.abs(newShift) - 1] - this.minimumVelocityOnShift[Math.abs(newShift) - 1]));\r\n    }\r\n    \r\n\r\n    getValueForNewRPM(newShift, oldVelocity){\r\n        if(newShift === this.NEUTRAL || (Math.abs(newShift) === this.FIRST && Math.abs(oldVelocity) < 5)){\r\n            return this.carEngine.getCurrentRPM();\r\n        }\r\n        if(newShift === this.REVERSE && oldVelocity > 0){\r\n            return 0;\r\n        }\r\n        if(newShift > 0 && oldVelocity < 0){\r\n            return 0;\r\n        }\r\n        let normalFactorRPM = this.calculateNormalFactorRPM(newShift, oldVelocity);\r\n        if ( normalFactorRPM > 1 ){\r\n            return MAX_RPM;\r\n        }else{\r\n            let XValue = normalFactorRPM * EXPONENTIAL_COEF_TO_RPM;\r\n            return (MAX_RPM * (1 - Math.exp(-XValue/EXPONENTIAL_COEF_TO_RPM)));\r\n        }\r\n    }\r\n    \r\n\r\n    clutchIsPressed(valueClutch){\r\n        return valueClutch <= MIN_VALUE_CLUTCH_TO_AVOID_SHUTDOWN\r\n    }\r\n\r\n\r\n    shutDownEngine(){\r\n        return false;\r\n    }\r\n\r\n    //CONSIDERAR EL VALUE DEL ACCELERATOR DE FORMA SIMILAR A COMO SE CONSIDERA EN ABSTRACT ENGINE STATE PARA QUE SI ES NEGATIVO DECREMENTE LA VELOCIDAD Y NO AUMENTE\r\n    getEngineForce(currentVelocity, valueClutch){\r\n        currentVelocity = Math.abs(currentVelocity);\r\n        let currentRPM = this.carEngine.getCurrentRPM();\r\n\r\n        if(this.currentShift === this.NEUTRAL){\r\n            return 0;\r\n        }\r\n\r\n        let valueClutchNormalized = (valueClutch + 1)/2;\r\n        let minVelocityBasedOnClutch = this.minimumVelocityOnShift[Math.abs(this.currentShift) - 1] * (1 - Math.exp(-valueClutchNormalized*3));\r\n        //If there is a next shift and it has ideal velocity we can calculate the Normalized Engine Force based on velocity range\r\n\r\n        let rangeOfVelocities = this.maximumVelocityOnShift[Math.abs(this.currentShift) - 1] - minVelocityBasedOnClutch;\r\n        let normalFactorToDecrement = (currentVelocity - minVelocityBasedOnClutch) / rangeOfVelocities;\r\n        if(currentVelocity < minVelocityBasedOnClutch){\r\n            //Debería dar trompicones\r\n        }\r\n        let normalFactor = (1 - normalFactorToDecrement)**2;\r\n\r\n        if(normalFactor > 1){\r\n            normalFactor = 0;\r\n        }\r\n\r\n        let powerFactor = (QUANTITY_SHIFTS / this.currentShift);\r\n        let finalEngineForce =  powerFactor * currentRPM * normalFactor;\r\n        return finalEngineForce\r\n\r\n    }\r\n\r\n    changeShift(){\r\n        //METHOD TO OVERRIDE\r\n    }\r\n\r\n\r\n    getCurrentShift(){\r\n        return this.currentShift;\r\n    }\r\n\r\n}","import ShiftBox from '../ShiftBox';\r\nconst MIN_RPM_TO_AVOID_SHUTDOWN = 1000;\r\nexport default class ManualBox extends ShiftBox{\r\n\r\n    \r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift) && this.clutchIsPressed(valueClutch)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }else{\r\n            throw new Error(\"Can't change shift if clutch is not pressed\");\r\n        }\r\n    }\r\n\r\n\r\n    shutDownEngine(valueClutch, currentRPM){\r\n        return !this.clutchIsPressed(valueClutch) && currentRPM < MIN_RPM_TO_AVOID_SHUTDOWN;\r\n    }\r\n}","import ShiftBox from '../ShiftBox';\r\n\r\nexport default class SemiAutomaticBox extends ShiftBox{\r\n\r\n    changeShift(valueClutch, newShift, currentVelocity){\r\n        if(this.isValidShift(newShift)){\r\n            this.currentShift = newShift;\r\n            this.carEngine.changeRPM(this.getValueForNewRPM(newShift, currentVelocity, valueClutch));\r\n        }\r\n    }\r\n}","import { Vector3, Vector4 } from 'three';\r\nimport Observable from '../../ObserverPattern/Observable';\r\nimport CarPhysics from '../Physics/PhysicsTypes/CarPhysics';\r\nimport CarEngine from './CarEngine';\r\nimport ManualBox from './ShiftBoxTypes/ManualBox';\r\nimport SemiAutomaticBox from './ShiftBoxTypes/SemiAutomaticBox';\r\n\r\n\r\nconst POSITION = [0,0,0];\r\nconst FACTOR_BRAKE_TO_FORCE = 300;\r\nexport default class Car extends Observable{\r\n\r\n    constructor(physicsWorld){\r\n        super();\r\n        this.carEngine = new CarEngine();\r\n        this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        this.currentDirectionTurn = 0; //in rads\r\n        this.currentTireRotation = 0;\r\n        this.position = new Vector3(POSITION[0], POSITION[1], POSITION[2]);\r\n        this.rotationQuaternion = new Vector4(0,0,0,1);\r\n        this.mass = 1000;\r\n        this.physicsShape = new Vector3(2,1.3,5);\r\n        this.rotation = new Vector4(0,0,0,1);\r\n        this.inertia = new Vector3(1,0,1);\r\n\r\n        this.carPhysics = new CarPhysics(this.position, this.rotationQuaternion, this.inertia, this.mass, this.physicsShape, physicsWorld, 0);\r\n        this.carPhysics.buildAmmoPhysics();\r\n        \r\n    }\r\n\r\n\r\n    accelerate(valueClutch, valueAccelerator){\r\n        this.carEngine.accelerate(valueClutch, valueAccelerator,this.shiftBox);\r\n        if(valueAccelerator > 0.1 && this.carEngine.engineCanApplyForce(valueClutch)){\r\n            this.carPhysics.setEngineForce( this.shiftBox.getEngineForce(this.carPhysics.getVelocity(), valueClutch) );\r\n        }else{\r\n            this.carPhysics.setEngineForce( 0 );\r\n        }\r\n    }\r\n\r\n\r\n    brake(valueClutch, valueBrake){\r\n        this.carEngine.brake(valueClutch, valueBrake,this.shiftBox);\r\n        //Mapping [-1;1] to [0;1]\r\n        this.carPhysics.brake(valueBrake*FACTOR_BRAKE_TO_FORCE);\r\n    }\r\n\r\n\r\n    changeShift(valueClutch, newShift){\r\n        this.shiftBox.changeShift(valueClutch, newShift, this.carPhysics.getVelocity());\r\n    }\r\n\r\n\r\n    turnOnRightLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n\r\n    turnOnLeftLight(){\r\n        //PRENDER EL INTERMITENTE DERECHO\r\n    }\r\n\r\n    \r\n    turnOnCar(){\r\n        this.carEngine.turnOn();\r\n    }\r\n\r\n    \r\n    turnDirection(wheelAxesValue){\r\n        this.currentTireRotation = wheelAxesValue;\r\n        this.carPhysics.setSteeringRotation( wheelAxesValue );\r\n    }\r\n\r\n\r\n    update(){\r\n        let positionAndRotation = this.carPhysics.updatePhysics();\r\n        this.position = positionAndRotation[\"chassis\"][\"position\"];\r\n        this.rotation = positionAndRotation[\"chassis\"][\"rotation\"];\r\n        this.wheelsData = positionAndRotation[\"wheels\"];\r\n        super.notifyObservers(this.getDataToAnimate());\r\n    }\r\n\r\n\r\n    getLastRotation(){\r\n        return this.currentTireRotation;\r\n    }\r\n\r\n    \r\n    getDataToAnimate(){\r\n        return {\r\n            \"direction\": this.currentDirectionTurn, \r\n            \"velocity\": this.carPhysics.getVelocity(), \r\n            \"lastRotationWheel\": this.currentTireRotation,\r\n            \"position\": this.position,\r\n            \"rotation\": this.rotation,\r\n            \"physicsBody\": this.carPhysics,\r\n            \"wheelsData\": this.wheelsData\r\n        };\r\n    }\r\n\r\n    getSpeed(){\r\n        return this.carPhysics.getVelocity();\r\n    }\r\n\r\n    getCurrentRPM(){\r\n        return this.carEngine.getCurrentRPM();\r\n    }\r\n\r\n    changeShiftBox(mode){\r\n        if(mode ===  \"semi-auto\"){\r\n            this.shiftBox = new SemiAutomaticBox(this.carEngine);\r\n        }else if(mode === \"manual\"){\r\n            //TODO: asignar boton en volante\r\n            this.shiftBox = new ManualBox(this.carEngine);\r\n        }\r\n    }\r\n\r\n    getCurrentShift(){\r\n        return this.shiftBox.getCurrentShift();\r\n    }\r\n}","import Observable from \"../../../ObserverPattern/Observable\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nimport {Vector3, Vector4} from \"three\";\r\n\r\nconst DISABLE_DEACTIVATION = 4;\r\n\r\nexport default class GeneralPhysics extends Observable{\r\n\r\n\r\n    constructor(position, quaternion, inertia, mass, shape, physicsWorld, friction){\r\n        super();\r\n        this.position = position;\r\n        this.quaternion = quaternion;\r\n        this.inertia = inertia;\r\n        this.mass = mass;\r\n        this.shape = shape;\r\n        this.physicsWorld = physicsWorld;\r\n        if(!friction) friction = 1;\r\n        this.friction = friction;\r\n    }\r\n\r\n\r\n    async generateShape(){\r\n        return null;\r\n    }\r\n\r\n\r\n    async buildAmmoPhysics(){\r\n\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.inertia = new Ammo.btVector3(this.inertia.x, this.inertia.y, this.inertia.z);\r\n        this.Ammo = Ammo;\r\n        let transform = new Ammo.btTransform();\r\n        transform.setIdentity();\r\n        transform.setOrigin(new Ammo.btVector3(this.position.x, this.position.y, this.position.z));\r\n        transform.setRotation(new Ammo.btQuaternion(this.quaternion.x, this.quaternion.y, this.quaternion.z, this.quaternion.w));\r\n\r\n        this.tempTransform = new Ammo.btTransform();\r\n\r\n        let motionState = new Ammo.btDefaultMotionState(transform);\r\n\r\n        let shape = await this.generateShape();\r\n        shape.setMargin(0.05);\r\n        shape.calculateLocalInertia(this.mass, this.inertia);\r\n\r\n        let rigidBodyInfo = new Ammo.btRigidBodyConstructionInfo(this.mass, motionState, shape, this.inertia);\r\n        this.rigidBody = new Ammo.btRigidBody(rigidBodyInfo);\r\n\r\n        this.rigidBody.setFriction(this.friction);\r\n        this.rigidBody.setRollingFriction(this.friction * 2)\r\n\r\n        this.physicsWorld.addRigidBody(this.rigidBody);\r\n\r\n        if( this.mass > 0 ){\r\n            this.rigidBody.setActivationState(DISABLE_DEACTIVATION);\r\n        }\r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        let motionState = this.rigidBody.getMotionState();\r\n        if(motionState){\r\n            motionState.getWorldTransform(this.tempTransform);\r\n            \r\n            let position = this.tempTransform.getOrigin();\r\n            let rotation = this.tempTransform.getRotation();\r\n            const newState = {\r\n                \"position\": new Vector3(position.x(), position.y(), position.z()),\r\n                \"rotation\": new Vector4(rotation.x(), rotation.y(), rotation.z(), rotation.w()),\r\n            }\r\n            this.notifyObservers(newState);\r\n            return newState;\r\n        }else{\r\n            throw new Error(\"No motion state found in rigid body\");\r\n        }\r\n    }\r\n\r\n\r\n    setLinearVelocity(velocityVector){\r\n        let velVectorBT = new this.Ammo.btVector3(this.mass*velocityVector.x, this.mass*velocityVector.y, this.mass*velocityVector.z);\r\n        this.rigidBody.applyForce(velVectorBT);\r\n    }\r\n\r\n\r\n    getRigidBody(){\r\n        return this.rigidBody;\r\n    }\r\n}","import AmmoInstance from \"../AmmoInstance\";\r\nimport GeneralPhysics from \"./GeneralPhysics\";\r\n\r\nexport default class CylinderPhysics extends GeneralPhysics{\r\n    \r\n    // Shape is a Vector3(Radius, HeightCylinder/2, Radius). \r\n    // See: https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5889\r\n    // It's origin is in the center of the cylinder so calculate position by using height/2.\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btCylinderShape(new Ammo.btVector3(this.shape.x, this.shape.y, this.shape.z));\r\n    }\r\n}","import VisualEntity from \"./VisualEntity\";\r\nimport * as THREE from 'three';\r\n\r\nexport default class TrafficCone extends VisualEntity{\r\n\r\n    constructor(pathToTexture){\r\n        super(pathToTexture);\r\n        this.pathToTexture = pathToTexture;\r\n        this.RADIUS_TOP = 0.1;\r\n        this.RADIUS_BOTTOM = 0.8;\r\n        this.HEIGHT = 1.25;\r\n        this.observedState = null;\r\n    }\r\n\r\n    animate(){\r\n        if(this.observedState != null){\r\n           // console.log(this.observedState);\r\n            this.threeDModel.position.set(\r\n                this.observedState[\"position\"].x, \r\n                this.observedState[\"position\"].y, \r\n                this.observedState[\"position\"].z\r\n            );\r\n            \r\n            this.threeDModel.quaternion.set(\r\n                this.observedState[\"rotation\"].x, \r\n                this.observedState[\"rotation\"].y, \r\n                this.observedState[\"rotation\"].z, \r\n                this.observedState[\"rotation\"].w\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async addToScene(scene, objectName, position, scale){\r\n        if(!this.threeDModel){\r\n            const geometry = new THREE.CylinderGeometry( this.RADIUS_TOP, this.RADIUS_BOTTOM, this.HEIGHT, 32, undefined, true );\r\n            const texture = new THREE.TextureLoader().load(this.pathToTexture);\r\n            const material = new THREE.MeshBasicMaterial( { map: texture });\r\n            const materialBox = new THREE.MeshBasicMaterial( { color: 0xd56324 } );\r\n            const geometryPlane = new THREE.BoxGeometry(this.RADIUS_BOTTOM*2, 0.1, this.RADIUS_BOTTOM*2);\r\n            const box = new THREE.Mesh( geometryPlane, materialBox );\r\n            box.position.set(0,-this.HEIGHT/2,0);\r\n            const cone = new THREE.Mesh( geometry, material );\r\n            cone.position.set(0,0,0);\r\n            this.threeDModel = new THREE.Group();\r\n            this.threeDModel.add(cone).add(box);\r\n            this.threeDModel.name = objectName;\r\n            this.threeDModel.position.set(position[0], position[1], position[2]);\r\n            this.threeDModel.scale.set(scale[0], scale[1], scale[2]);\r\n\r\n            this.RADIUS_TOP *= scale[0];\r\n            this.RADIUS_BOTTOM *= scale[0];\r\n            this.HEIGHT *= scale[1];\r\n\r\n            scene.add(this.threeDModel);\r\n        }\r\n        return this;\r\n    }\r\n}","import GeneralPhysics from \"./GeneralPhysics\";\r\nimport AmmoInstance from \"../AmmoInstance\";\r\nexport default class BoxPhysics extends GeneralPhysics{\r\n\r\n\r\n    async generateShape(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        return new Ammo.btBoxShape(new Ammo.btVector3(this.shape.x/2, this.shape.y/2, this.shape.z/2));\r\n    }\r\n}","import * as THREE from 'three';\r\nimport BoxPhysics from '../LogicModel/Physics/PhysicsTypes/BoxPhysics';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\n// import ConePhysics from '../LogicModel/Physics/PhysicsTypes/ConePhysics'\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\n\r\nexport default class LevelFactory {\r\n\r\n\r\n    constructor(level, scene,physicsWorld){\r\n        this.scene = scene;\r\n        this.physicsWorld = physicsWorld\r\n        this.physicsToUpdate = [];\r\n        this.objectsToAnimate = [];\r\n        if(level === 0){\r\n            this.createLevel0()\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    updatePhysics(){\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        })\r\n    }\r\n\r\n\r\n    animate(){\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n    }\r\n\r\n\r\n    async createRectangle(position,length, width, height ,rotation, pathTexture, Ammo, normalMapPath = null){\r\n        \r\n        const texture = new THREE.TextureLoader().load( pathTexture );\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set( length, height );\r\n        const floorMaterial = new THREE.MeshStandardMaterial( {map: texture,  side: THREE.DoubleSide} );\r\n        if( normalMapPath ){\r\n            let normalTexture = new THREE.TextureLoader().load(\r\n                normalMapPath\r\n            );\r\n            normalTexture.repeat.set( length, height );\r\n            normalTexture.wrapS = THREE.RepeatWrapping;\r\n            normalTexture.wrapT = THREE.RepeatWrapping;\r\n            floorMaterial.normalMap = normalTexture;\r\n            floorMaterial.normalScale.set(10, 10);\r\n        }\r\n        const rampa = new THREE.BoxGeometry( length, width, height);\r\n        rampa.rotateX(rotation);\r\n        const quaternionRamp = new THREE.Quaternion();\r\n        quaternionRamp.setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), rotation);\r\n\r\n        let rampPhysics = new BoxPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            quaternionRamp ,  //Quaternion2\r\n            new Ammo.btVector3(0,0,0), //Inertia\r\n            0, //Mass\r\n            new THREE.Vector3(length, width, height), //Shape\r\n            this.physicsWorld, //Physics World\r\n            1000 // friction\r\n        ); \r\n        \r\n        await rampPhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(rampPhysics);\r\n        let ramp = new THREE.Mesh( rampa, floorMaterial );\r\n        ramp.position.set(position[0],position[1],position[2]);\r\n        this.scene.add(ramp);\r\n    }\r\n\r\n\r\n    async createCone(position , Ammo){\r\n        let cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        cone.addToScene(this.scene, \"trafficCone\", position, [ 0.5, 0.5, 0.5]);\r\n        let conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(position[0],position[1],position[2]), //Position\r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(cone.RADIUS_BOTTOM, cone.HEIGHT/2, cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(conePhysics);\r\n        conePhysics.attachObserver(cone);\r\n        this.objectsToAnimate.push(cone);\r\n    }\r\n\r\n\r\n    async createLevel0(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.createRectangle( [ 10, 0, 10 ], 10, 2, 10, -Math.PI/8, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ -10, 0, 10 ], 10, 2, 10, -Math.PI/4, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createRectangle( [ 0, 0, 0 ], 100, 0.1, 100, 0, 'textures/pavimento.jpg', Ammo, 'textures/pavimento_map.png' );\r\n        this.createCone( [ 0, 0.5, 10 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 30 ], Ammo );\r\n        this.createCone( [ 0, 0.5, 20 ], Ammo );\r\n    }\r\n\r\n}\r\n\r\n","class VRButton {\r\n\r\n\tstatic createButton( renderer ) {\r\n\t\t\r\n\t\tconst button = document.createElement( 'button' );\r\n\r\n\t\tfunction showEnterVR( /*device*/ ) {\r\n\r\n\t\t\tlet currentSession = null;\r\n\r\n\t\t\tasync function onSessionStarted( session ) {\r\n\r\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tawait renderer.xr.setSession( session );\r\n\t\t\t\tbutton.textContent = 'EXIT VR';\r\n\r\n\t\t\t\tcurrentSession = session;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction onSessionEnded( /*event*/ ) {\r\n\r\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\r\n\r\n\t\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\t\tcurrentSession = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'pointer';\r\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\r\n\t\t\tbutton.style.width = '100px';\r\n\r\n\t\t\tbutton.textContent = 'ENTER VR';\r\n\r\n\t\t\tbutton.onmouseenter = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '1.0';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onmouseleave = function () {\r\n\r\n\t\t\t\tbutton.style.opacity = '0.5';\r\n\r\n\t\t\t};\r\n\r\n\t\t\tbutton.onclick = function () {\r\n\r\n\t\t\t\tif ( currentSession === null ) {\r\n\r\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\r\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\r\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\r\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\r\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\r\n\t\t\t\t\t// be requested separately.)\r\n\r\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\r\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\r\n\t\t\t\t\tlocalStorage.setItem(\"VR\", true);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tcurrentSession.end();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction disableButton() {\r\n\r\n\t\t\tbutton.style.display = '';\r\n\r\n\t\t\tbutton.style.cursor = 'auto';\r\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\r\n\t\t\tbutton.style.width = '150px';\r\n\r\n\t\t\tbutton.onmouseenter = null;\r\n\t\t\tbutton.onmouseleave = null;\r\n\r\n\t\t\tbutton.onclick = null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction showWebXRNotFound() {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction showVRNotAllowed( exception ) {\r\n\r\n\t\t\tdisableButton();\r\n\r\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\r\n\r\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\r\n\r\n\t\t}\r\n\r\n\t\tfunction stylizeElement( element ) {\r\n\r\n\t\t\telement.style.position = 'absolute';\r\n\t\t\telement.style.bottom = '20px';\r\n\t\t\telement.style.padding = '12px 6px';\r\n\t\t\telement.style.border = '1px solid #fff';\r\n\t\t\telement.style.borderRadius = '4px';\r\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\r\n\t\t\telement.style.color = '#fff';\r\n\t\t\telement.style.font = 'normal 13px sans-serif';\r\n\t\t\telement.style.textAlign = 'center';\r\n\t\t\telement.style.opacity = '0.5';\r\n\t\t\telement.style.outline = 'none';\r\n\t\t\telement.style.zIndex = '999';\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\tbutton.id = 'VRButton';\r\n\t\t\tbutton.style.display = 'none';\r\n\r\n\t\t\tstylizeElement( button );\r\n\r\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\r\n\r\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\r\n\r\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\r\n\r\n\t\t\t\t\tbutton.click();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} ).catch( showVRNotAllowed );\r\n\r\n\t\t\treturn button;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst message = document.createElement( 'a' );\r\n\r\n\t\t\tif ( window.isSecureContext === false ) {\r\n\r\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\r\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\r\n\t\t\tmessage.style.width = '180px';\r\n\t\t\tmessage.style.textDecoration = 'none';\r\n\r\n\t\t\tstylizeElement( message );\r\n\r\n\t\t\treturn message;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic xrSessionIsGranted = false;\r\n\r\n\tstatic registerSessionGrantedListener() {\r\n\r\n\t\tif ( 'xr' in navigator ) {\r\n\r\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\r\n\t\t\t// throws a silent exception and aborts execution entirely.\r\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\r\n\r\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\r\n\r\n\t\t\t\tVRButton.xrSessionIsGranted = true;\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nVRButton.registerSessionGrantedListener();\r\n\r\nexport { VRButton };","import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport Camera from '../Camera/Camera';\r\nimport CarOffsetCamera from '../Camera/CarOffsetCamera';\r\nimport OrbitalCamera from '../Camera/OribtalCamera';\r\nimport CarModel from '../3DModels/CarModel';\r\nimport LogitechG29ControllerSingleton from '../LogicModel/ControllerMapping/LogitechG29Controller';\r\nimport XboxControllerSingleton from '../LogicModel/ControllerMapping/XboxController';\r\nimport Car from '../LogicModel/CarLogic/Car';\r\nimport AmmoInstance from '../LogicModel/Physics/AmmoInstance';\r\nimport CylinderPhysics from '../LogicModel/Physics/PhysicsTypes/CylinderPhysics';\r\nimport { Vector3 } from 'three';\r\nimport TrafficCone from '../3DModels/TrafficCone';\r\nimport LevelFactory from '../Levels/LevelsFactory';\r\nimport  {VRButton}  from '../addons/VRbutton';\r\n\r\nexport default class ThreeScene extends Component{\r\n    \r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            \"currentRPM\": 0,\r\n            \"velocity\": 0,\r\n            \"currentShift\": 0,\r\n        };\r\n        this.physicsToUpdate = [];\r\n        localStorage.setItem(\"VR\", false);\r\n        this.gotAnyEvent = false;\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        //Generate elements needed to render the scene\r\n        this.objectsToAnimate = [];\r\n        this.scene = new THREE.Scene();\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true });\r\n        this.renderer.setSize( window.innerWidth, window.innerHeight );\r\n        this.renderer.setClearColor( 0x87cefa, 1 );\r\n        this.renderer.outputEncoding = THREE.sRGBEncoding;\r\n        this.camera = new Camera(this.renderer);\r\n        \r\n        this.clock = new THREE.Clock();\r\n\r\n        //Ammo.js\r\n        await this.createAmmo();\r\n\r\n        //Add elements to the scene\r\n        this.ambientLight = new THREE.AmbientLight(0xffffff, 1.0);\r\n        this.scene.add(this.ambientLight);\r\n        this.sunLight = new THREE.DirectionalLight( 0xffffff, 1.0 );\r\n        this.sunLight.position.set( 0, 100, 0 );\r\n        this.scene.add( this.sunLight );\r\n        \r\n        let Ammo = await AmmoInstance.getInstance() ;\r\n\r\n        this.level = new LevelFactory(0,this.scene, this.physicsWorld);\r\n        this.physicsToUpdate.push(this.level);\r\n        this.objectsToAnimate.push(this.level);\r\n\r\n        this.cone = new TrafficCone(\"textures/coneTexture.jpg\");\r\n        this.cone.addToScene(this.scene, \"trafficCone\", [10,0,0], [1,1,1]);\r\n        this.conePhysics = new CylinderPhysics(\r\n            new THREE.Vector3(10,0,0), \r\n            new THREE.Quaternion().setFromAxisAngle( new THREE.Vector3( 1, 0, 0 ), 0), \r\n            new Ammo.btVector3(0,0,0), \r\n            10, \r\n            new THREE.Vector3(this.cone.RADIUS_BOTTOM, this.cone.HEIGHT/2, this.cone.RADIUS_BOTTOM), \r\n            this.physicsWorld,\r\n            1000\r\n        );\r\n        await this.conePhysics.buildAmmoPhysics();\r\n        this.physicsToUpdate.push(this.conePhysics);\r\n        this.conePhysics.attachObserver(this.cone);\r\n        this.objectsToAnimate.push(this.cone);\r\n        console.log(\"HOLA\");\r\n\r\n        //Add driver's car to scene\r\n        this.carLogic = new Car(this.physicsWorld);\r\n        let carModel = new CarModel();\r\n        this.carLogic.attachObserver(carModel);\r\n        this.carLogic.attachObserver(this.camera);\r\n        this.objectsToAnimate.push(await carModel.addToScene(this.scene));\r\n        this.carLogic.notifyObservers();\r\n        \r\n        //Bind this to methods of the class\r\n        this.animation = this.animation.bind(this);\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n        this.generateEvents = this.generateEvents.bind(this);\r\n        \r\n        //Handle resize and gamepad connection on window.\r\n        this.generateEvents();\r\n\r\n        //Append canvas to DOM in HTML and start animating\r\n        this.mount.appendChild(this.renderer.domElement);\r\n        this.animation();\r\n\r\n        document.body.appendChild( VRButton.createButton( this.renderer ) );\r\n        this.renderer.xr.enabled = true;\r\n        \r\n    }\r\n\r\n\r\n    generateEvents(){\r\n        window.addEventListener(\"resize\", this.handleWindowResize);\r\n        window.addEventListener(\"gamepaddisconnected\", function(e){\r\n            LogitechG29ControllerSingleton.removeInstance();  \r\n        });\r\n\r\n        document.addEventListener('keydown', (event) => {\r\n            var numCamera = event.key;\r\n            this.carLogic.removeObserver(this.camera);\r\n            switch(numCamera){\r\n                case \"1\":\r\n                    this.camera = new Camera(this.renderer);\r\n                    break;\r\n                case \"2\":\r\n                    this.camera = new OrbitalCamera(this.renderer);\r\n                    break;\r\n                case \"3\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(-4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"4\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(4.35, 0.6, -0.1));\r\n                    break;\r\n                case \"5\":\r\n                    this.camera = new CarOffsetCamera(new Vector3(0.0, 3.0, -5.0));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this.carLogic.attachObserver(this.camera);\r\n            this.carLogic.notifyObservers();\r\n\r\n          }, false);\r\n    }\r\n\r\n\r\n    async createAmmo(){\r\n        let Ammo = await AmmoInstance.getInstance();\r\n        this.tempTransform = new Ammo.btTransform();\r\n        let collisionConfiguratation = new Ammo.btDefaultCollisionConfiguration();\r\n        let dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguratation);\r\n        let overlappingPairCache = new Ammo.btDbvtBroadphase();\r\n        let solver = new Ammo.btSequentialImpulseConstraintSolver();\r\n\r\n        this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, overlappingPairCache, solver, collisionConfiguratation);\r\n        this.physicsWorld.setGravity(new Ammo.btVector3(0,-9.8,0));\r\n    }\r\n\r\n\r\n    handleWindowResize(){\r\n        this.camera.handleResize();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance() );\r\n    }\r\n\r\n\r\n    animation(){\r\n        let deltaTime = this.clock.getDelta();\r\n        this.renderer.setAnimationLoop(this.animation);\r\n        this.physicsWorld.stepSimulation(deltaTime, 10);\r\n        this.objectsToAnimate.forEach(function(object){\r\n            object.animate();\r\n        });\r\n        this.physicsToUpdate.forEach(function(phys){\r\n            phys.updatePhysics();\r\n        });\r\n        this.camera.setPositionRelativeToObject();\r\n        XboxControllerSingleton.getInstance(this.carLogic).checkEvents();\r\n        this.setState({\"velocity\": this.carLogic.getSpeed(), \"currentRPM\": this.carLogic.getCurrentRPM(), \"currentShift\": this.carLogic.getCurrentShift()});\r\n        this.renderer.render( this.scene, this.camera.getCameraInstance());\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div style={{position:\"absolute\", left:\"10px\", top:\"10px\", color:\"red\"}} id=\"Acelerador\">\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Velocidad: {parseInt(this.state.velocity)} km/h\r\n                    </p>\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        RPM: {parseInt(this.state.currentRPM)}\r\n                    </p>\r\n                    <p style={{ zIndex: 20, display: 'float', fontWeight: \"bold\"}} >\r\n                        Cambio Actual: {parseInt(this.state.currentShift)}\r\n                    </p>\r\n                </div>\r\n                <div ref={mount => {this.mount = mount;}}></div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}","import ThreeScene from './Scene/ThreeScene';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nfunction App() {\r\n\r\n  useEffect(() => {\r\n    document.title = 'Driving Simulator';\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ThreeScene/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n\n"],"sourceRoot":""}